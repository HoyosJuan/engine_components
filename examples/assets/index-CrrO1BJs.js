import{r as Ft,s as st,T as Ie,t as pi,E as So,c as H,V as O,h as At,x as fe,S as Os,a as D,C as Qt,y as Ci,D as No,A as wo,W as Fs,w as Ti,P as yo,aU as Lo,v as Po,ap as Rt,aV as Mo,af as _n,i as Uo,I as Js,$ as mi,a5 as Ce,H as Do,e as ze,b as Te,N as He,q as jt,Q as Zt,X as fi,Y as Sn,Z as Nn,_ as wn,a0 as yn,a1 as Ln,a2 as Ri,a3 as Pn,B as it,a4 as xo,ab as wt,a6 as bi,a7 as Mn,a8 as Un,a9 as Kt,aa as vo,d as Ge,ac as ke,ad as bo,ae as Bo,p as Fi,au as Ai,av as gi,ao as Oi,K as _i,am as Yo,J as rt,O as As,at as Ps,al as zo,aw as Go,L as Dn,ax as Vo,ay as Ho,az as Wo,aA as Xo,aB as ko,aS as Bi,aT as Zo,z as Yi,aq as Ze,an as Ut,ar as Qo,as as ge,ai as jo,aW as qo,aX as Ko,aY as $o,aZ as Jo,a_ as tr,b3 as er}from"./web-ifc-api-CfQNUy7g.js";var sr=Object.defineProperty,ir=(c,t,e)=>t in c?sr(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e,I=(c,t,e)=>(ir(c,typeof t!="symbol"?t+"":t,e),e);const xn=0,nr=1,or=2,zi=2,Ms=1.25,Gi=1,Ts=6*4+4+4,_s=65535,rr=Math.pow(2,-24),Us=Symbol("SKIP_GENERATION");function ar(c){return c.index?c.index.count:c.attributes.position.count}function Re(c){return ar(c)/3}function hr(c,t=ArrayBuffer){return c>65535?new Uint32Array(new t(4*c)):new Uint16Array(new t(2*c))}function cr(c,t){if(!c.index){const e=c.attributes.position.count,s=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,i=hr(e,s);c.setIndex(new Ge(i,1));for(let n=0;n<e;n++)i[n]=n}}function vn(c){const t=Re(c),e=c.drawRange,s=e.start/3,i=(e.start+e.count)/3,n=Math.max(0,s),o=Math.min(t,i)-n;return[{offset:Math.floor(n),count:Math.floor(o)}]}function bn(c){if(!c.groups||!c.groups.length)return vn(c);const t=[],e=new Set,s=c.drawRange,i=s.start/3,n=(s.start+s.count)/3;for(const r of c.groups){const a=r.start/3,h=(r.start+r.count)/3;e.add(Math.max(i,a)),e.add(Math.min(n,h))}const o=Array.from(e.values()).sort((r,a)=>r-a);for(let r=0;r<o.length-1;r++){const a=o[r],h=o[r+1];t.push({offset:Math.floor(a),count:Math.floor(h-a)})}return t}function lr(c){if(c.groups.length===0)return!1;const t=Re(c),e=bn(c).sort((n,o)=>n.offset-o.offset),s=e[e.length-1];s.count=Math.min(t-s.offset,s.count);let i=0;return e.forEach(({count:n})=>i+=n),t!==i}function j(c,t,e){return e.min.x=t[c],e.min.y=t[c+1],e.min.z=t[c+2],e.max.x=t[c+3],e.max.y=t[c+4],e.max.z=t[c+5],e}function dr(c){c[0]=c[1]=c[2]=1/0,c[3]=c[4]=c[5]=-1/0}function Vi(c){let t=-1,e=-1/0;for(let s=0;s<3;s++){const i=c[s+3]-c[s];i>e&&(e=i,t=s)}return t}function Hi(c,t){t.set(c)}function Wi(c,t,e){let s,i;for(let n=0;n<3;n++){const o=n+3;s=c[n],i=t[n],e[n]=s<i?s:i,s=c[o],i=t[o],e[o]=s>i?s:i}}function Qe(c,t,e){for(let s=0;s<3;s++){const i=t[c+2*s],n=t[c+2*s+1],o=i-n,r=i+n;o<e[s]&&(e[s]=o),r>e[s+3]&&(e[s+3]=r)}}function Oe(c){const t=c[3]-c[0],e=c[4]-c[1],s=c[5]-c[2];return 2*(t*e+e*s+s*t)}function Ds(c,t,e,s,i=null){let n=1/0,o=1/0,r=1/0,a=-1/0,h=-1/0,d=-1/0,E=1/0,l=1/0,u=1/0,C=-1/0,T=-1/0,m=-1/0;const f=i!==null;for(let R=t*6,A=(t+e)*6;R<A;R+=6){const p=c[R+0],F=c[R+1],g=p-F,_=p+F;g<n&&(n=g),_>a&&(a=_),f&&p<E&&(E=p),f&&p>C&&(C=p);const S=c[R+2],w=c[R+3],y=S-w,L=S+w;y<o&&(o=y),L>h&&(h=L),f&&S<l&&(l=S),f&&S>T&&(T=S);const P=c[R+4],U=c[R+5],x=P-U,Y=P+U;x<r&&(r=x),Y>d&&(d=Y),f&&P<u&&(u=P),f&&P>m&&(m=P)}s[0]=n,s[1]=o,s[2]=r,s[3]=a,s[4]=h,s[5]=d,f&&(i[0]=E,i[1]=l,i[2]=u,i[3]=C,i[4]=T,i[5]=m)}function Er(c,t,e,s){let i=1/0,n=1/0,o=1/0,r=-1/0,a=-1/0,h=-1/0;for(let d=t*6,E=(t+e)*6;d<E;d+=6){const l=c[d+0];l<i&&(i=l),l>r&&(r=l);const u=c[d+2];u<n&&(n=u),u>a&&(a=u);const C=c[d+4];C<o&&(o=C),C>h&&(h=C)}s[0]=i,s[1]=n,s[2]=o,s[3]=r,s[4]=a,s[5]=h}function ur(c,t){dr(t);const e=c.attributes.position,s=c.index?c.index.array:null,i=Re(c),n=new Float32Array(i*6),o=e.normalized,r=e.array,a=e.offset||0;let h=3;e.isInterleavedBufferAttribute&&(h=e.data.stride);const d=["getX","getY","getZ"];for(let E=0;E<i;E++){const l=E*3,u=E*6;let C=l+0,T=l+1,m=l+2;s&&(C=s[C],T=s[T],m=s[m]),o||(C=C*h+a,T=T*h+a,m=m*h+a);for(let f=0;f<3;f++){let R,A,p;o?(R=e[d[f]](C),A=e[d[f]](T),p=e[d[f]](m)):(R=r[C+f],A=r[T+f],p=r[m+f]);let F=R;A<F&&(F=A),p<F&&(F=p);let g=R;A>g&&(g=A),p>g&&(g=p);const _=(g-F)/2,S=f*2;n[u+S+0]=F+_,n[u+S+1]=_+(Math.abs(F)+_)*rr,F<t[f]&&(t[f]=F),g>t[f+3]&&(t[f+3]=g)}}return n}const yt=32,Ir=(c,t)=>c.candidate-t.candidate,Dt=new Array(yt).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),je=new Float32Array(6);function pr(c,t,e,s,i,n){let o=-1,r=0;if(n===xn)o=Vi(t),o!==-1&&(r=(t[o]+t[o+3])/2);else if(n===nr)o=Vi(c),o!==-1&&(r=Cr(e,s,i,o));else if(n===or){const a=Oe(c);let h=Ms*i;const d=s*6,E=(s+i)*6;for(let l=0;l<3;l++){const u=t[l],C=(t[l+3]-u)/yt;if(i<yt/4){const T=[...Dt];T.length=i;let m=0;for(let R=d;R<E;R+=6,m++){const A=T[m];A.candidate=e[R+2*l],A.count=0;const{bounds:p,leftCacheBounds:F,rightCacheBounds:g}=A;for(let _=0;_<3;_++)g[_]=1/0,g[_+3]=-1/0,F[_]=1/0,F[_+3]=-1/0,p[_]=1/0,p[_+3]=-1/0;Qe(R,e,p)}T.sort(Ir);let f=i;for(let R=0;R<f;R++){const A=T[R];for(;R+1<f&&T[R+1].candidate===A.candidate;)T.splice(R+1,1),f--}for(let R=d;R<E;R+=6){const A=e[R+2*l];for(let p=0;p<f;p++){const F=T[p];A>=F.candidate?Qe(R,e,F.rightCacheBounds):(Qe(R,e,F.leftCacheBounds),F.count++)}}for(let R=0;R<f;R++){const A=T[R],p=A.count,F=i-A.count,g=A.leftCacheBounds,_=A.rightCacheBounds;let S=0;p!==0&&(S=Oe(g)/a);let w=0;F!==0&&(w=Oe(_)/a);const y=Gi+Ms*(S*p+w*F);y<h&&(o=l,h=y,r=A.candidate)}}else{for(let f=0;f<yt;f++){const R=Dt[f];R.count=0,R.candidate=u+C+f*C;const A=R.bounds;for(let p=0;p<3;p++)A[p]=1/0,A[p+3]=-1/0}for(let f=d;f<E;f+=6){let R=~~((e[f+2*l]-u)/C);R>=yt&&(R=yt-1);const A=Dt[R];A.count++,Qe(f,e,A.bounds)}const T=Dt[yt-1];Hi(T.bounds,T.rightCacheBounds);for(let f=yt-2;f>=0;f--){const R=Dt[f],A=Dt[f+1];Wi(R.bounds,A.rightCacheBounds,R.rightCacheBounds)}let m=0;for(let f=0;f<yt-1;f++){const R=Dt[f],A=R.count,p=R.bounds,F=Dt[f+1].rightCacheBounds;A!==0&&(m===0?Hi(p,je):Wi(p,je,je)),m+=A;let g=0,_=0;m!==0&&(g=Oe(je)/a);const S=i-m;S!==0&&(_=Oe(F)/a);const w=Gi+Ms*(g*m+_*S);w<h&&(o=l,h=w,r=R.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${n} used.`);return{axis:o,pos:r}}function Cr(c,t,e,s){let i=0;for(let n=t,o=t+e;n<o;n++)i+=c[n*6+s*2];return i/e}class qe{constructor(){}}function Tr(c,t,e,s,i,n){let o=s,r=s+i-1;const a=n.pos,h=n.axis*2;for(;;){for(;o<=r&&e[o*6+h]<a;)o++;for(;o<=r&&e[r*6+h]>=a;)r--;if(o<r){for(let d=0;d<3;d++){let E=t[o*3+d];t[o*3+d]=t[r*3+d],t[r*3+d]=E}for(let d=0;d<6;d++){let E=e[o*6+d];e[o*6+d]=e[r*6+d],e[r*6+d]=E}o++,r--}else return o}}function mr(c,t,e,s,i,n){let o=s,r=s+i-1;const a=n.pos,h=n.axis*2;for(;;){for(;o<=r&&e[o*6+h]<a;)o++;for(;o<=r&&e[r*6+h]>=a;)r--;if(o<r){let d=c[o];c[o]=c[r],c[r]=d;for(let E=0;E<6;E++){let l=e[o*6+E];e[o*6+E]=e[r*6+E],e[r*6+E]=l}o++,r--}else return o}}function fr(c,t){const e=(c.index?c.index.count:c.attributes.position.count)/3,s=e>2**16,i=s?4:2,n=t?new SharedArrayBuffer(e*i):new ArrayBuffer(e*i),o=s?new Uint32Array(n):new Uint16Array(n);for(let r=0,a=o.length;r<a;r++)o[r]=r;return o}function Rr(c,t){const e=c.geometry,s=e.index?e.index.array:null,i=t.maxDepth,n=t.verbose,o=t.maxLeafTris,r=t.strategy,a=t.onProgress,h=Re(e),d=c._indirectBuffer;let E=!1;const l=new Float32Array(6),u=new Float32Array(6),C=ur(e,l),T=t.indirect?mr:Tr,m=[],f=t.indirect?vn(e):bn(e);if(f.length===1){const p=f[0],F=new qe;F.boundingData=l,Er(C,p.offset,p.count,u),A(F,p.offset,p.count,u),m.push(F)}else for(let p of f){const F=new qe;F.boundingData=new Float32Array(6),Ds(C,p.offset,p.count,F.boundingData,u),A(F,p.offset,p.count,u),m.push(F)}return m;function R(p){a&&a(p/h)}function A(p,F,g,_=null,S=0){if(!E&&S>=i&&(E=!0,n&&(console.warn(`MeshBVH: Max depth of ${i} reached when generating BVH. Consider increasing maxDepth.`),console.warn(e))),g<=o||S>=i)return R(F+g),p.offset=F,p.count=g,p;const w=pr(p.boundingData,_,C,F,g,r);if(w.axis===-1)return R(F+g),p.offset=F,p.count=g,p;const y=T(d,s,C,F,g,w);if(y===F||y===F+g)R(F+g),p.offset=F,p.count=g;else{p.splitAxis=w.axis;const L=new qe,P=F,U=y-F;p.left=L,L.boundingData=new Float32Array(6),Ds(C,P,U,L.boundingData,u),A(L,P,U,u,S+1);const x=new qe,Y=y,z=g-U;p.right=x,x.boundingData=new Float32Array(6),Ds(C,Y,z,x.boundingData,u),A(x,Y,z,u,S+1)}return p}}function Fr(c,t){const e=c.geometry;t.indirect&&(c._indirectBuffer=fr(e,t.useSharedArrayBuffer),lr(e)&&!t.verbose&&console.warn('MeshBVH: Provided geometry contains groups that do not fully span the vertex contents while using the "indirect" option. BVH may incorrectly report intersections on unrendered portions of the geometry.')),c._indirectBuffer||cr(e,t);const s=Rr(c,t);let i,n,o;const r=[],a=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;for(let E=0;E<s.length;E++){const l=s[E];let u=h(l);const C=new a(Ts*u);i=new Float32Array(C),n=new Uint32Array(C),o=new Uint16Array(C),d(0,l),r.push(C)}c._roots=r;return;function h(E){return E.count?1:1+h(E.left)+h(E.right)}function d(E,l){const u=E/4,C=E/2,T=!!l.count,m=l.boundingData;for(let f=0;f<6;f++)i[u+f]=m[f];if(T){const f=l.offset,R=l.count;return n[u+6]=f,o[C+14]=R,o[C+15]=_s,E+Ts}else{const f=l.left,R=l.right,A=l.splitAxis;let p;if(p=d(E+Ts,f),p/4>Math.pow(2,32))throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return n[u+6]=p/4,p=d(p,R),n[u+7]=A,p}}}class Pt{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,e){let s=1/0,i=-1/0;for(let n=0,o=t.length;n<o;n++){const r=t[n][e];s=r<s?r:s,i=r>i?r:i}this.min=s,this.max=i}setFromPoints(t,e){let s=1/0,i=-1/0;for(let n=0,o=e.length;n<o;n++){const r=e[n],a=t.dot(r);s=a<s?a:s,i=a>i?a:i}this.min=s,this.max=i}isSeparated(t){return this.min>t.max||t.min>this.max}}Pt.prototype.setFromBox=function(){const c=new O;return function(t,e){const s=e.min,i=e.max;let n=1/0,o=-1/0;for(let r=0;r<=1;r++)for(let a=0;a<=1;a++)for(let h=0;h<=1;h++){c.x=s.x*r+i.x*(1-r),c.y=s.y*a+i.y*(1-a),c.z=s.z*h+i.z*(1-h);const d=t.dot(c);n=Math.min(d,n),o=Math.max(d,o)}this.min=n,this.max=o}}();const Ar=function(){const c=new O,t=new O,e=new O;return function(s,i,n){const o=s.start,r=c,a=i.start,h=t;e.subVectors(o,a),c.subVectors(s.end,s.start),t.subVectors(i.end,i.start);const d=e.dot(h),E=h.dot(r),l=h.dot(h),u=e.dot(r),C=r.dot(r)*l-E*E;let T,m;C!==0?T=(d*E-u*l)/C:T=0,m=(d+T*E)/l,n.x=T,n.y=m}}(),Si=function(){const c=new At,t=new O,e=new O;return function(s,i,n,o){Ar(s,i,c);let r=c.x,a=c.y;if(r>=0&&r<=1&&a>=0&&a<=1){s.at(r,n),i.at(a,o);return}else if(r>=0&&r<=1){a<0?i.at(0,o):i.at(1,o),s.closestPointToPoint(o,!0,n);return}else if(a>=0&&a<=1){r<0?s.at(0,n):s.at(1,n),i.closestPointToPoint(n,!0,o);return}else{let h;r<0?h=s.start:h=s.end;let d;a<0?d=i.start:d=i.end;const E=t,l=e;if(s.closestPointToPoint(d,!0,t),i.closestPointToPoint(h,!0,e),E.distanceToSquared(d)<=l.distanceToSquared(h)){n.copy(E),o.copy(d);return}else{n.copy(h),o.copy(l);return}}}}(),gr=function(){const c=new O,t=new O,e=new fe,s=new Ft;return function(i,n){const{radius:o,center:r}=i,{a,b:h,c:d}=n;if(s.start=a,s.end=h,s.closestPointToPoint(r,!0,c).distanceTo(r)<=o||(s.start=a,s.end=d,s.closestPointToPoint(r,!0,c).distanceTo(r)<=o)||(s.start=h,s.end=d,s.closestPointToPoint(r,!0,c).distanceTo(r)<=o))return!0;const E=n.getPlane(e);if(Math.abs(E.distanceToPoint(r))<=o){const l=E.projectPoint(r,t);if(n.containsPoint(l))return!0}return!1}}(),Or=1e-15;function xs(c){return Math.abs(c)<Or}class gt extends Ie{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new O),this.satBounds=new Array(4).fill().map(()=>new Pt),this.points=[this.a,this.b,this.c],this.sphere=new Os,this.plane=new fe,this.needsUpdate=!0}intersectsSphere(t){return gr(t,this)}update(){const t=this.a,e=this.b,s=this.c,i=this.points,n=this.satAxes,o=this.satBounds,r=n[0],a=o[0];this.getNormal(r),a.setFromPoints(r,i);const h=n[1],d=o[1];h.subVectors(t,e),d.setFromPoints(h,i);const E=n[2],l=o[2];E.subVectors(e,s),l.setFromPoints(E,i);const u=n[3],C=o[3];u.subVectors(s,t),C.setFromPoints(u,i),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(r,t),this.needsUpdate=!1}}gt.prototype.closestPointToSegment=function(){const c=new O,t=new O,e=new Ft;return function(s,i=null,n=null){const{start:o,end:r}=s,a=this.points;let h,d=1/0;for(let E=0;E<3;E++){const l=(E+1)%3;e.start.copy(a[E]),e.end.copy(a[l]),Si(e,s,c,t),h=c.distanceToSquared(t),h<d&&(d=h,i&&i.copy(c),n&&n.copy(t))}return this.closestPointToPoint(o,c),h=o.distanceToSquared(c),h<d&&(d=h,i&&i.copy(c),n&&n.copy(o)),this.closestPointToPoint(r,c),h=r.distanceToSquared(c),h<d&&(d=h,i&&i.copy(c),n&&n.copy(r)),Math.sqrt(d)}}();gt.prototype.intersectsTriangle=function(){const c=new gt,t=new Array(3),e=new Array(3),s=new Pt,i=new Pt,n=new O,o=new O,r=new O,a=new O,h=new O,d=new Ft,E=new Ft,l=new Ft,u=new O;function C(T,m,f){const R=T.points;let A=0,p=-1;for(let F=0;F<3;F++){const{start:g,end:_}=d;g.copy(R[F]),_.copy(R[(F+1)%3]),d.delta(o);const S=xs(m.distanceToPoint(g));if(xs(m.normal.dot(o))&&S){f.copy(d),A=2;break}const w=m.intersectLine(d,u);if(!w&&S&&u.copy(g),(w||S)&&!xs(u.distanceTo(_))){if(A<=1)(A===1?f.start:f.end).copy(u),S&&(p=A);else if(A>=2){(p===1?f.start:f.end).copy(u),A=2;break}if(A++,A===2&&p===-1)break}}return A}return function(T,m=null,f=!1){this.needsUpdate&&this.update(),T.isExtendedTriangle?T.needsUpdate&&T.update():(c.copy(T),c.update(),T=c);const R=this.plane,A=T.plane;if(Math.abs(R.normal.dot(A.normal))>1-1e-10){const p=this.satBounds,F=this.satAxes;e[0]=T.a,e[1]=T.b,e[2]=T.c;for(let S=0;S<4;S++){const w=p[S],y=F[S];if(s.setFromPoints(y,e),w.isSeparated(s))return!1}const g=T.satBounds,_=T.satAxes;t[0]=this.a,t[1]=this.b,t[2]=this.c;for(let S=0;S<4;S++){const w=g[S],y=_[S];if(s.setFromPoints(y,t),w.isSeparated(s))return!1}for(let S=0;S<4;S++){const w=F[S];for(let y=0;y<4;y++){const L=_[y];if(n.crossVectors(w,L),s.setFromPoints(n,t),i.setFromPoints(n,e),s.isSeparated(i))return!1}}return m&&(f||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),m.start.set(0,0,0),m.end.set(0,0,0)),!0}else{const p=C(this,A,E);if(p===1&&T.containsPoint(E.end))return m&&(m.start.copy(E.end),m.end.copy(E.end)),!0;if(p!==2)return!1;const F=C(T,R,l);if(F===1&&this.containsPoint(l.end))return m&&(m.start.copy(l.end),m.end.copy(l.end)),!0;if(F!==2)return!1;if(E.delta(r),l.delta(a),r.dot(a)<0){let P=l.start;l.start=l.end,l.end=P}const g=E.start.dot(r),_=E.end.dot(r),S=l.start.dot(r),w=l.end.dot(r),y=_<S,L=g<w;return g!==w&&S!==_&&y===L?!1:(m&&(h.subVectors(E.start,l.start),h.dot(r)>0?m.start.copy(E.start):m.start.copy(l.start),h.subVectors(E.end,l.end),h.dot(r)<0?m.end.copy(E.end):m.end.copy(l.end)),!0)}}}();gt.prototype.distanceToPoint=function(){const c=new O;return function(t){return this.closestPointToPoint(t,c),t.distanceTo(c)}}();gt.prototype.distanceToTriangle=function(){const c=new O,t=new O,e=["a","b","c"],s=new Ft,i=new Ft;return function(n,o=null,r=null){const a=o||r?s:null;if(this.intersectsTriangle(n,a))return(o||r)&&(o&&a.getCenter(o),r&&a.getCenter(r)),0;let h=1/0;for(let d=0;d<3;d++){let E;const l=e[d],u=n[l];this.closestPointToPoint(u,c),E=u.distanceToSquared(c),E<h&&(h=E,o&&o.copy(c),r&&r.copy(u));const C=this[l];n.closestPointToPoint(C,c),E=C.distanceToSquared(c),E<h&&(h=E,o&&o.copy(C),r&&r.copy(c))}for(let d=0;d<3;d++){const E=e[d],l=e[(d+1)%3];s.set(this[E],this[l]);for(let u=0;u<3;u++){const C=e[u],T=e[(u+1)%3];i.set(n[C],n[T]),Si(s,i,c,t);const m=c.distanceToSquared(t);m<h&&(h=m,o&&o.copy(c),r&&r.copy(t))}}return Math.sqrt(h)}}();class at{constructor(t,e,s){this.isOrientedBox=!0,this.min=new O,this.max=new O,this.matrix=new H,this.invMatrix=new H,this.points=new Array(8).fill().map(()=>new O),this.satAxes=new Array(3).fill().map(()=>new O),this.satBounds=new Array(3).fill().map(()=>new Pt),this.alignedSatBounds=new Array(3).fill().map(()=>new Pt),this.needsUpdate=!1,t&&this.min.copy(t),e&&this.max.copy(e),s&&this.matrix.copy(s)}set(t,e,s){this.min.copy(t),this.max.copy(e),this.matrix.copy(s),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}at.prototype.update=function(){return function(){const c=this.matrix,t=this.min,e=this.max,s=this.points;for(let a=0;a<=1;a++)for(let h=0;h<=1;h++)for(let d=0;d<=1;d++){const E=1*a|2*h|4*d,l=s[E];l.x=a?e.x:t.x,l.y=h?e.y:t.y,l.z=d?e.z:t.z,l.applyMatrix4(c)}const i=this.satBounds,n=this.satAxes,o=s[0];for(let a=0;a<3;a++){const h=n[a],d=i[a],E=1<<a,l=s[E];h.subVectors(o,l),d.setFromPoints(h,s)}const r=this.alignedSatBounds;r[0].setFromPointsField(s,"x"),r[1].setFromPointsField(s,"y"),r[2].setFromPointsField(s,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}();at.prototype.intersectsBox=function(){const c=new Pt;return function(t){this.needsUpdate&&this.update();const e=t.min,s=t.max,i=this.satBounds,n=this.satAxes,o=this.alignedSatBounds;if(c.min=e.x,c.max=s.x,o[0].isSeparated(c)||(c.min=e.y,c.max=s.y,o[1].isSeparated(c))||(c.min=e.z,c.max=s.z,o[2].isSeparated(c)))return!1;for(let r=0;r<3;r++){const a=n[r],h=i[r];if(c.setFromBox(a,t),h.isSeparated(c))return!1}return!0}}();at.prototype.intersectsTriangle=function(){const c=new gt,t=new Array(3),e=new Pt,s=new Pt,i=new O;return function(n){this.needsUpdate&&this.update(),n.isExtendedTriangle?n.needsUpdate&&n.update():(c.copy(n),c.update(),n=c);const o=this.satBounds,r=this.satAxes;t[0]=n.a,t[1]=n.b,t[2]=n.c;for(let E=0;E<3;E++){const l=o[E],u=r[E];if(e.setFromPoints(u,t),l.isSeparated(e))return!1}const a=n.satBounds,h=n.satAxes,d=this.points;for(let E=0;E<3;E++){const l=a[E],u=h[E];if(e.setFromPoints(u,d),l.isSeparated(e))return!1}for(let E=0;E<3;E++){const l=r[E];for(let u=0;u<4;u++){const C=h[u];if(i.crossVectors(l,C),e.setFromPoints(i,t),s.setFromPoints(i,d),e.isSeparated(s))return!1}}return!0}}();at.prototype.closestPointToPoint=function(){return function(c,t){return this.needsUpdate&&this.update(),t.copy(c).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),t}}();at.prototype.distanceToPoint=function(){const c=new O;return function(t){return this.closestPointToPoint(t,c),t.distanceTo(c)}}();at.prototype.distanceToBox=function(){const c=["x","y","z"],t=new Array(12).fill().map(()=>new Ft),e=new Array(12).fill().map(()=>new Ft),s=new O,i=new O;return function(n,o=0,r=null,a=null){if(this.needsUpdate&&this.update(),this.intersectsBox(n))return(r||a)&&(n.getCenter(i),this.closestPointToPoint(i,s),n.closestPointToPoint(s,i),r&&r.copy(s),a&&a.copy(i)),0;const h=o*o,d=n.min,E=n.max,l=this.points;let u=1/0;for(let T=0;T<8;T++){const m=l[T];i.copy(m).clamp(d,E);const f=m.distanceToSquared(i);if(f<u&&(u=f,r&&r.copy(m),a&&a.copy(i),f<h))return Math.sqrt(f)}let C=0;for(let T=0;T<3;T++)for(let m=0;m<=1;m++)for(let f=0;f<=1;f++){const R=(T+1)%3,A=(T+2)%3,p=m<<R|f<<A,F=1<<T|m<<R|f<<A,g=l[p],_=l[F];t[C].set(g,_);const S=c[T],w=c[R],y=c[A],L=e[C],P=L.start,U=L.end;P[S]=d[S],P[w]=m?d[w]:E[w],P[y]=f?d[y]:E[w],U[S]=E[S],U[w]=m?d[w]:E[w],U[y]=f?d[y]:E[w],C++}for(let T=0;T<=1;T++)for(let m=0;m<=1;m++)for(let f=0;f<=1;f++){i.x=T?E.x:d.x,i.y=m?E.y:d.y,i.z=f?E.z:d.z,this.closestPointToPoint(i,s);const R=i.distanceToSquared(s);if(R<u&&(u=R,r&&r.copy(s),a&&a.copy(i),R<h))return Math.sqrt(R)}for(let T=0;T<12;T++){const m=t[T];for(let f=0;f<12;f++){const R=e[f];Si(m,R,s,i);const A=s.distanceToSquared(i);if(A<u&&(u=A,r&&r.copy(s),a&&a.copy(i),A<h))return Math.sqrt(A)}}return Math.sqrt(u)}}();class Ni{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return t.length===0?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}class _r extends Ni{constructor(){super(()=>new gt)}}const ut=new _r;function ct(c,t){return t[c+15]===65535}function lt(c,t){return t[c+6]}function It(c,t){return t[c+14]}function pt(c){return c+8}function Ct(c,t){return t[c+6]}function Bn(c,t){return t[c+7]}class Sr{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const t=[];let e=null;this.setBuffer=s=>{e&&t.push(e),e=s,this.float32Array=new Float32Array(s),this.uint16Array=new Uint16Array(s),this.uint32Array=new Uint32Array(s)},this.clearBuffer=()=>{e=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,t.length!==0&&this.setBuffer(t.pop())}}}const Z=new Sr;let Bt,pe;const Jt=[],Ke=new Ni(()=>new st);function Nr(c,t,e,s,i,n){Bt=Ke.getPrimitive(),pe=Ke.getPrimitive(),Jt.push(Bt,pe),Z.setBuffer(c._roots[t]);const o=ti(0,c.geometry,e,s,i,n);Z.clearBuffer(),Ke.releasePrimitive(Bt),Ke.releasePrimitive(pe),Jt.pop(),Jt.pop();const r=Jt.length;return r>0&&(pe=Jt[r-1],Bt=Jt[r-2]),o}function ti(c,t,e,s,i=null,n=0,o=0){const{float32Array:r,uint16Array:a,uint32Array:h}=Z;let d=c*2;if(ct(d,a)){const E=lt(c,h),l=It(d,a);return j(c,r,Bt),s(E,l,!1,o,n+c,Bt)}else{let E=function(L){const{uint16Array:P,uint32Array:U}=Z;let x=L*2;for(;!ct(x,P);)L=pt(L),x=L*2;return lt(L,U)},l=function(L){const{uint16Array:P,uint32Array:U}=Z;let x=L*2;for(;!ct(x,P);)L=Ct(L,U),x=L*2;return lt(L,U)+It(x,P)};const u=pt(c),C=Ct(c,h);let T=u,m=C,f,R,A,p;if(i&&(A=Bt,p=pe,j(T,r,A),j(m,r,p),f=i(A),R=i(p),R<f)){T=C,m=u;const L=f;f=R,R=L,A=p}A||(A=Bt,j(T,r,A));const F=ct(T*2,a),g=e(A,F,f,o+1,n+T);let _;if(g===zi){const L=E(T),P=l(T)-L;_=s(L,P,!0,o+1,n+T,A)}else _=g&&ti(T,t,e,s,i,n,o+1);if(_)return!0;p=pe,j(m,r,p);const S=ct(m*2,a),w=e(p,S,R,o+1,n+m);let y;if(w===zi){const L=E(m),P=l(m)-L;y=s(L,P,!0,o+1,n+m,p)}else y=w&&ti(m,t,e,s,i,n,o+1);return!!y}}const _e=new O,vs=new O;function wr(c,t,e={},s=0,i=1/0){const n=s*s,o=i*i;let r=1/0,a=null;if(c.shapecast({boundsTraverseOrder:d=>(_e.copy(t).clamp(d.min,d.max),_e.distanceToSquared(t)),intersectsBounds:(d,E,l)=>l<r&&l<o,intersectsTriangle:(d,E)=>{d.closestPointToPoint(t,_e);const l=t.distanceToSquared(_e);return l<r&&(vs.copy(_e),r=l,a=E),l<n}}),r===1/0)return null;const h=Math.sqrt(r);return e.point?e.point.copy(vs):e.point=vs.clone(),e.distance=h,e.faceIndex=a,e}const te=new O,ee=new O,se=new O,$e=new At,Je=new At,ts=new At,Xi=new O,ki=new O,Zi=new O,es=new O;function yr(c,t,e,s,i,n){let o;return n===er?o=c.intersectTriangle(s,e,t,!0,i):o=c.intersectTriangle(t,e,s,n!==He,i),o===null?null:{distance:c.origin.distanceTo(i),point:i.clone()}}function Lr(c,t,e,s,i,n,o,r,a){te.fromBufferAttribute(t,n),ee.fromBufferAttribute(t,o),se.fromBufferAttribute(t,r);const h=yr(c,te,ee,se,es,a);if(h){s&&($e.fromBufferAttribute(s,n),Je.fromBufferAttribute(s,o),ts.fromBufferAttribute(s,r),h.uv=Ie.getInterpolation(es,te,ee,se,$e,Je,ts,new At)),i&&($e.fromBufferAttribute(i,n),Je.fromBufferAttribute(i,o),ts.fromBufferAttribute(i,r),h.uv1=Ie.getInterpolation(es,te,ee,se,$e,Je,ts,new At)),e&&(Xi.fromBufferAttribute(e,n),ki.fromBufferAttribute(e,o),Zi.fromBufferAttribute(e,r),h.normal=Ie.getInterpolation(es,te,ee,se,Xi,ki,Zi,new O),h.normal.dot(c.direction)>0&&h.normal.multiplyScalar(-1));const d={a:n,b:o,c:r,normal:new O,materialIndex:0};Ie.getNormal(te,ee,se,d.normal),h.face=d,h.faceIndex=n}return h}function Ss(c,t,e,s,i){const n=s*3;let o=n+0,r=n+1,a=n+2;const h=c.index;c.index&&(o=h.getX(o),r=h.getX(r),a=h.getX(a));const{position:d,normal:E,uv:l,uv1:u}=c.attributes,C=Lr(e,d,E,l,u,o,r,a,t);return C?(C.faceIndex=s,i&&i.push(C),C):null}function K(c,t,e,s){const i=c.a,n=c.b,o=c.c;let r=t,a=t+1,h=t+2;e&&(r=e.getX(r),a=e.getX(a),h=e.getX(h)),i.x=s.getX(r),i.y=s.getY(r),i.z=s.getZ(r),n.x=s.getX(a),n.y=s.getY(a),n.z=s.getZ(a),o.x=s.getX(h),o.y=s.getY(h),o.z=s.getZ(h)}function Pr(c,t,e,s,i,n){const{geometry:o,_indirectBuffer:r}=c;for(let a=s,h=s+i;a<h;a++)Ss(o,t,e,a,n)}function Mr(c,t,e,s,i){const{geometry:n,_indirectBuffer:o}=c;let r=1/0,a=null;for(let h=s,d=s+i;h<d;h++){let E;E=Ss(n,t,e,h),E&&E.distance<r&&(a=E,r=E.distance)}return a}function Ur(c,t,e,s,i,n,o){const{geometry:r}=e,{index:a}=r,h=r.attributes.position;for(let d=c,E=t+c;d<E;d++){let l;if(l=d,K(o,l*3,a,h),o.needsUpdate=!0,s(o,l,i,n))return!0}return!1}function Dr(c,t=null){t&&Array.isArray(t)&&(t=new Set(t));const e=c.geometry,s=e.index?e.index.array:null,i=e.attributes.position;let n,o,r,a,h=0;const d=c._roots;for(let l=0,u=d.length;l<u;l++)n=d[l],o=new Uint32Array(n),r=new Uint16Array(n),a=new Float32Array(n),E(0,h),h+=n.byteLength;function E(l,u,C=!1){const T=l*2;if(r[T+15]===_s){const m=o[l+6],f=r[T+14];let R=1/0,A=1/0,p=1/0,F=-1/0,g=-1/0,_=-1/0;for(let S=3*m,w=3*(m+f);S<w;S++){let y=s[S];const L=i.getX(y),P=i.getY(y),U=i.getZ(y);L<R&&(R=L),L>F&&(F=L),P<A&&(A=P),P>g&&(g=P),U<p&&(p=U),U>_&&(_=U)}return a[l+0]!==R||a[l+1]!==A||a[l+2]!==p||a[l+3]!==F||a[l+4]!==g||a[l+5]!==_?(a[l+0]=R,a[l+1]=A,a[l+2]=p,a[l+3]=F,a[l+4]=g,a[l+5]=_,!0):!1}else{const m=l+8,f=o[l+6],R=m+u,A=f+u;let p=C,F=!1,g=!1;t?p||(F=t.has(R),g=t.has(A),p=!F&&!g):(F=!0,g=!0);const _=p||F,S=p||g;let w=!1;_&&(w=E(m,u,p));let y=!1;S&&(y=E(f,u,p));const L=w||y;if(L)for(let P=0;P<3;P++){const U=m+P,x=f+P,Y=a[U],z=a[U+3],tt=a[x],W=a[x+3];a[l+P]=Y<tt?Y:tt,a[l+P+3]=z>W?z:W}return L}}}const Qi=new st;function Yt(c,t,e,s){return j(c,t,Qi),e.intersectBox(Qi,s)}function xr(c,t,e,s,i,n){const{geometry:o,_indirectBuffer:r}=c;for(let a=s,h=s+i;a<h;a++){let d=r?r[a]:a;Ss(o,t,e,d,n)}}function vr(c,t,e,s,i){const{geometry:n,_indirectBuffer:o}=c;let r=1/0,a=null;for(let h=s,d=s+i;h<d;h++){let E;E=Ss(n,t,e,o?o[h]:h),E&&E.distance<r&&(a=E,r=E.distance)}return a}function br(c,t,e,s,i,n,o){const{geometry:r}=e,{index:a}=r,h=r.attributes.position;for(let d=c,E=t+c;d<E;d++){let l;if(l=e.resolveTriangleIndex(d),K(o,l*3,a,h),o.needsUpdate=!0,s(o,l,i,n))return!0}return!1}const ji=new O;function Br(c,t,e,s,i){Z.setBuffer(c._roots[t]),ei(0,c,e,s,i),Z.clearBuffer()}function ei(c,t,e,s,i){const{float32Array:n,uint16Array:o,uint32Array:r}=Z,a=c*2;if(ct(a,o)){const h=lt(c,r),d=It(a,o);Pr(t,e,s,h,d,i)}else{const h=pt(c);Yt(h,n,s,ji)&&ei(h,t,e,s,i);const d=Ct(c,r);Yt(d,n,s,ji)&&ei(d,t,e,s,i)}}const qi=new O,Yr=["x","y","z"];function zr(c,t,e,s){Z.setBuffer(c._roots[t]);const i=si(0,c,e,s);return Z.clearBuffer(),i}function si(c,t,e,s){const{float32Array:i,uint16Array:n,uint32Array:o}=Z;let r=c*2;if(ct(r,n)){const a=lt(c,o),h=It(r,n);return Mr(t,e,s,a,h)}else{const a=Bn(c,o),h=Yr[a],d=s.direction[h]>=0;let E,l;d?(E=pt(c),l=Ct(c,o)):(E=Ct(c,o),l=pt(c));const u=Yt(E,i,s,qi)?si(E,t,e,s):null;if(u){const T=u.point[h];if(d?T<=i[l+a]:T>=i[l+a+3])return u}const C=Yt(l,i,s,qi)?si(l,t,e,s):null;return u&&C?u.distance<=C.distance?u:C:u||C||null}}const ss=new st,ie=new gt,ne=new gt,Se=new H,Ki=new at,is=new at;function Gr(c,t,e,s){Z.setBuffer(c._roots[t]);const i=ii(0,c,e,s);return Z.clearBuffer(),i}function ii(c,t,e,s,i=null){const{float32Array:n,uint16Array:o,uint32Array:r}=Z;let a=c*2;if(i===null&&(e.boundingBox||e.computeBoundingBox(),Ki.set(e.boundingBox.min,e.boundingBox.max,s),i=Ki),ct(a,o)){const h=t.geometry,d=h.index,E=h.attributes.position,l=e.index,u=e.attributes.position,C=lt(c,r),T=It(a,o);if(Se.copy(s).invert(),e.boundsTree)return j(c,n,is),is.matrix.copy(Se),is.needsUpdate=!0,e.boundsTree.shapecast({intersectsBounds:m=>is.intersectsBox(m),intersectsTriangle:m=>{m.a.applyMatrix4(s),m.b.applyMatrix4(s),m.c.applyMatrix4(s),m.needsUpdate=!0;for(let f=C*3,R=(T+C)*3;f<R;f+=3)if(K(ne,f,d,E),ne.needsUpdate=!0,m.intersectsTriangle(ne))return!0;return!1}});for(let m=C*3,f=(T+C)*3;m<f;m+=3){K(ie,m,d,E),ie.a.applyMatrix4(Se),ie.b.applyMatrix4(Se),ie.c.applyMatrix4(Se),ie.needsUpdate=!0;for(let R=0,A=l.count;R<A;R+=3)if(K(ne,R,l,u),ne.needsUpdate=!0,ie.intersectsTriangle(ne))return!0}}else{const h=c+8,d=r[c+6];return j(h,n,ss),!!(i.intersectsBox(ss)&&ii(h,t,e,s,i)||(j(d,n,ss),i.intersectsBox(ss)&&ii(d,t,e,s,i)))}}const ns=new H,bs=new at,Ne=new at,Vr=new O,Hr=new O,Wr=new O,Xr=new O;function kr(c,t,e,s={},i={},n=0,o=1/0){t.boundingBox||t.computeBoundingBox(),bs.set(t.boundingBox.min,t.boundingBox.max,e),bs.needsUpdate=!0;const r=c.geometry,a=r.attributes.position,h=r.index,d=t.attributes.position,E=t.index,l=ut.getPrimitive(),u=ut.getPrimitive();let C=Vr,T=Hr,m=null,f=null;i&&(m=Wr,f=Xr);let R=1/0,A=null,p=null;return ns.copy(e).invert(),Ne.matrix.copy(ns),c.shapecast({boundsTraverseOrder:F=>bs.distanceToBox(F),intersectsBounds:(F,g,_)=>_<R&&_<o?(g&&(Ne.min.copy(F.min),Ne.max.copy(F.max),Ne.needsUpdate=!0),!0):!1,intersectsRange:(F,g)=>{if(t.boundsTree)return t.boundsTree.shapecast({boundsTraverseOrder:_=>Ne.distanceToBox(_),intersectsBounds:(_,S,w)=>w<R&&w<o,intersectsRange:(_,S)=>{for(let w=_,y=_+S;w<y;w++){K(u,3*w,E,d),u.a.applyMatrix4(e),u.b.applyMatrix4(e),u.c.applyMatrix4(e),u.needsUpdate=!0;for(let L=F,P=F+g;L<P;L++){K(l,3*L,h,a),l.needsUpdate=!0;const U=l.distanceToTriangle(u,C,m);if(U<R&&(T.copy(C),f&&f.copy(m),R=U,A=L,p=w),U<n)return!0}}}});{const _=Re(t);for(let S=0,w=_;S<w;S++){K(u,3*S,E,d),u.a.applyMatrix4(e),u.b.applyMatrix4(e),u.c.applyMatrix4(e),u.needsUpdate=!0;for(let y=F,L=F+g;y<L;y++){K(l,3*y,h,a),l.needsUpdate=!0;const P=l.distanceToTriangle(u,C,m);if(P<R&&(T.copy(C),f&&f.copy(m),R=P,A=y,p=S),P<n)return!0}}}}}),ut.releasePrimitive(l),ut.releasePrimitive(u),R===1/0?null:(s.point?s.point.copy(T):s.point=T.clone(),s.distance=R,s.faceIndex=A,i&&(i.point?i.point.copy(f):i.point=f.clone(),i.point.applyMatrix4(ns),T.applyMatrix4(ns),i.distance=T.sub(i.point).length(),i.faceIndex=p),s)}function Zr(c,t=null){t&&Array.isArray(t)&&(t=new Set(t));const e=c.geometry,s=e.index?e.index.array:null,i=e.attributes.position;let n,o,r,a,h=0;const d=c._roots;for(let l=0,u=d.length;l<u;l++)n=d[l],o=new Uint32Array(n),r=new Uint16Array(n),a=new Float32Array(n),E(0,h),h+=n.byteLength;function E(l,u,C=!1){const T=l*2;if(r[T+15]===_s){const m=o[l+6],f=r[T+14];let R=1/0,A=1/0,p=1/0,F=-1/0,g=-1/0,_=-1/0;for(let S=m,w=m+f;S<w;S++){const y=3*c.resolveTriangleIndex(S);for(let L=0;L<3;L++){let P=y+L;P=s?s[P]:P;const U=i.getX(P),x=i.getY(P),Y=i.getZ(P);U<R&&(R=U),U>F&&(F=U),x<A&&(A=x),x>g&&(g=x),Y<p&&(p=Y),Y>_&&(_=Y)}}return a[l+0]!==R||a[l+1]!==A||a[l+2]!==p||a[l+3]!==F||a[l+4]!==g||a[l+5]!==_?(a[l+0]=R,a[l+1]=A,a[l+2]=p,a[l+3]=F,a[l+4]=g,a[l+5]=_,!0):!1}else{const m=l+8,f=o[l+6],R=m+u,A=f+u;let p=C,F=!1,g=!1;t?p||(F=t.has(R),g=t.has(A),p=!F&&!g):(F=!0,g=!0);const _=p||F,S=p||g;let w=!1;_&&(w=E(m,u,p));let y=!1;S&&(y=E(f,u,p));const L=w||y;if(L)for(let P=0;P<3;P++){const U=m+P,x=f+P,Y=a[U],z=a[U+3],tt=a[x],W=a[x+3];a[l+P]=Y<tt?Y:tt,a[l+P+3]=z>W?z:W}return L}}}const $i=new O;function Qr(c,t,e,s,i){Z.setBuffer(c._roots[t]),ni(0,c,e,s,i),Z.clearBuffer()}function ni(c,t,e,s,i){const{float32Array:n,uint16Array:o,uint32Array:r}=Z,a=c*2;if(ct(a,o)){const h=lt(c,r),d=It(a,o);xr(t,e,s,h,d,i)}else{const h=pt(c);Yt(h,n,s,$i)&&ni(h,t,e,s,i);const d=Ct(c,r);Yt(d,n,s,$i)&&ni(d,t,e,s,i)}}const Ji=new O,jr=["x","y","z"];function qr(c,t,e,s){Z.setBuffer(c._roots[t]);const i=oi(0,c,e,s);return Z.clearBuffer(),i}function oi(c,t,e,s){const{float32Array:i,uint16Array:n,uint32Array:o}=Z;let r=c*2;if(ct(r,n)){const a=lt(c,o),h=It(r,n);return vr(t,e,s,a,h)}else{const a=Bn(c,o),h=jr[a],d=s.direction[h]>=0;let E,l;d?(E=pt(c),l=Ct(c,o)):(E=Ct(c,o),l=pt(c));const u=Yt(E,i,s,Ji)?oi(E,t,e,s):null;if(u){const T=u.point[h];if(d?T<=i[l+a]:T>=i[l+a+3])return u}const C=Yt(l,i,s,Ji)?oi(l,t,e,s):null;return u&&C?u.distance<=C.distance?u:C:u||C||null}}const os=new st,oe=new gt,re=new gt,we=new H,tn=new at,rs=new at;function Kr(c,t,e,s){Z.setBuffer(c._roots[t]);const i=ri(0,c,e,s);return Z.clearBuffer(),i}function ri(c,t,e,s,i=null){const{float32Array:n,uint16Array:o,uint32Array:r}=Z;let a=c*2;if(i===null&&(e.boundingBox||e.computeBoundingBox(),tn.set(e.boundingBox.min,e.boundingBox.max,s),i=tn),ct(a,o)){const h=t.geometry,d=h.index,E=h.attributes.position,l=e.index,u=e.attributes.position,C=lt(c,r),T=It(a,o);if(we.copy(s).invert(),e.boundsTree)return j(c,n,rs),rs.matrix.copy(we),rs.needsUpdate=!0,e.boundsTree.shapecast({intersectsBounds:m=>rs.intersectsBox(m),intersectsTriangle:m=>{m.a.applyMatrix4(s),m.b.applyMatrix4(s),m.c.applyMatrix4(s),m.needsUpdate=!0;for(let f=C,R=T+C;f<R;f++)if(K(re,3*t.resolveTriangleIndex(f),d,E),re.needsUpdate=!0,m.intersectsTriangle(re))return!0;return!1}});for(let m=C,f=T+C;m<f;m++){const R=t.resolveTriangleIndex(m);K(oe,3*R,d,E),oe.a.applyMatrix4(we),oe.b.applyMatrix4(we),oe.c.applyMatrix4(we),oe.needsUpdate=!0;for(let A=0,p=l.count;A<p;A+=3)if(K(re,A,l,u),re.needsUpdate=!0,oe.intersectsTriangle(re))return!0}}else{const h=c+8,d=r[c+6];return j(h,n,os),!!(i.intersectsBox(os)&&ri(h,t,e,s,i)||(j(d,n,os),i.intersectsBox(os)&&ri(d,t,e,s,i)))}}const as=new H,Bs=new at,ye=new at,$r=new O,Jr=new O,ta=new O,ea=new O;function sa(c,t,e,s={},i={},n=0,o=1/0){t.boundingBox||t.computeBoundingBox(),Bs.set(t.boundingBox.min,t.boundingBox.max,e),Bs.needsUpdate=!0;const r=c.geometry,a=r.attributes.position,h=r.index,d=t.attributes.position,E=t.index,l=ut.getPrimitive(),u=ut.getPrimitive();let C=$r,T=Jr,m=null,f=null;i&&(m=ta,f=ea);let R=1/0,A=null,p=null;return as.copy(e).invert(),ye.matrix.copy(as),c.shapecast({boundsTraverseOrder:F=>Bs.distanceToBox(F),intersectsBounds:(F,g,_)=>_<R&&_<o?(g&&(ye.min.copy(F.min),ye.max.copy(F.max),ye.needsUpdate=!0),!0):!1,intersectsRange:(F,g)=>{if(t.boundsTree){const _=t.boundsTree;return _.shapecast({boundsTraverseOrder:S=>ye.distanceToBox(S),intersectsBounds:(S,w,y)=>y<R&&y<o,intersectsRange:(S,w)=>{for(let y=S,L=S+w;y<L;y++){const P=_.resolveTriangleIndex(y);K(u,3*P,E,d),u.a.applyMatrix4(e),u.b.applyMatrix4(e),u.c.applyMatrix4(e),u.needsUpdate=!0;for(let U=F,x=F+g;U<x;U++){const Y=c.resolveTriangleIndex(U);K(l,3*Y,h,a),l.needsUpdate=!0;const z=l.distanceToTriangle(u,C,m);if(z<R&&(T.copy(C),f&&f.copy(m),R=z,A=U,p=y),z<n)return!0}}}})}else{const _=Re(t);for(let S=0,w=_;S<w;S++){K(u,3*S,E,d),u.a.applyMatrix4(e),u.b.applyMatrix4(e),u.c.applyMatrix4(e),u.needsUpdate=!0;for(let y=F,L=F+g;y<L;y++){const P=c.resolveTriangleIndex(y);K(l,3*P,h,a),l.needsUpdate=!0;const U=l.distanceToTriangle(u,C,m);if(U<R&&(T.copy(C),f&&f.copy(m),R=U,A=y,p=S),U<n)return!0}}}}}),ut.releasePrimitive(l),ut.releasePrimitive(u),R===1/0?null:(s.point?s.point.copy(T):s.point=T.clone(),s.distance=R,s.faceIndex=A,i&&(i.point?i.point.copy(f):i.point=f.clone(),i.point.applyMatrix4(as),T.applyMatrix4(as),i.distance=T.sub(i.point).length(),i.faceIndex=p),s)}function ia(){return typeof SharedArrayBuffer<"u"}const Ye=new Z.constructor,gs=new Z.constructor,bt=new Ni(()=>new st),ae=new st,he=new st,Ys=new st,zs=new st;let Gs=!1;function na(c,t,e,s){if(Gs)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");Gs=!0;const i=c._roots,n=t._roots;let o,r=0,a=0;const h=new H().copy(e).invert();for(let d=0,E=i.length;d<E;d++){Ye.setBuffer(i[d]),a=0;const l=bt.getPrimitive();j(0,Ye.float32Array,l),l.applyMatrix4(h);for(let u=0,C=n.length;u<C&&(gs.setBuffer(n[d]),o=Tt(0,0,e,h,s,r,a,0,0,l),gs.clearBuffer(),a+=n[u].length,!o);u++);if(bt.releasePrimitive(l),Ye.clearBuffer(),r+=i[d].length,o)break}return Gs=!1,o}function Tt(c,t,e,s,i,n=0,o=0,r=0,a=0,h=null,d=!1){let E,l;d?(E=gs,l=Ye):(E=Ye,l=gs);const u=E.float32Array,C=E.uint32Array,T=E.uint16Array,m=l.float32Array,f=l.uint32Array,R=l.uint16Array,A=c*2,p=t*2,F=ct(A,T),g=ct(p,R);let _=!1;if(g&&F)d?_=i(lt(t,f),It(t*2,R),lt(c,C),It(c*2,T),a,o+t,r,n+c):_=i(lt(c,C),It(c*2,T),lt(t,f),It(t*2,R),r,n+c,a,o+t);else if(g){const S=bt.getPrimitive();j(t,m,S),S.applyMatrix4(e);const w=pt(c),y=Ct(c,C);j(w,u,ae),j(y,u,he);const L=S.intersectsBox(ae),P=S.intersectsBox(he);_=L&&Tt(t,w,s,e,i,o,n,a,r+1,S,!d)||P&&Tt(t,y,s,e,i,o,n,a,r+1,S,!d),bt.releasePrimitive(S)}else{const S=pt(t),w=Ct(t,f);j(S,m,Ys),j(w,m,zs);const y=h.intersectsBox(Ys),L=h.intersectsBox(zs);if(y&&L)_=Tt(c,S,e,s,i,n,o,r,a+1,h,d)||Tt(c,w,e,s,i,n,o,r,a+1,h,d);else if(y)if(F)_=Tt(c,S,e,s,i,n,o,r,a+1,h,d);else{const P=bt.getPrimitive();P.copy(Ys).applyMatrix4(e);const U=pt(c),x=Ct(c,C);j(U,u,ae),j(x,u,he);const Y=P.intersectsBox(ae),z=P.intersectsBox(he);_=Y&&Tt(S,U,s,e,i,o,n,a,r+1,P,!d)||z&&Tt(S,x,s,e,i,o,n,a,r+1,P,!d),bt.releasePrimitive(P)}else if(L)if(F)_=Tt(c,w,e,s,i,n,o,r,a+1,h,d);else{const P=bt.getPrimitive();P.copy(zs).applyMatrix4(e);const U=pt(c),x=Ct(c,C);j(U,u,ae),j(x,u,he);const Y=P.intersectsBox(ae),z=P.intersectsBox(he);_=Y&&Tt(w,U,s,e,i,o,n,a,r+1,P,!d)||z&&Tt(w,x,s,e,i,o,n,a,r+1,P,!d),bt.releasePrimitive(P)}}return _}const hs=new at,en=new st;class wi{static serialize(t,e={}){e={cloneBuffers:!0,...e};const s=t.geometry,i=t._roots,n=t._indirectBuffer,o=s.getIndex();let r;return e.cloneBuffers?r={roots:i.map(a=>a.slice()),index:o.array.slice(),indirectBuffer:n?n.slice():null}:r={roots:i,index:o.array,indirectBuffer:n},r}static deserialize(t,e,s={}){s={setIndex:!0,indirect:!!t.indirectBuffer,...s};const{index:i,roots:n,indirectBuffer:o}=t,r=new wi(e,{...s,[Us]:!0});if(r._roots=n,r._indirectBuffer=o||null,s.setIndex){const a=e.getIndex();if(a===null){const h=new Ge(t.index,1,!1);e.setIndex(h)}else a.array!==i&&(a.array.set(i),a.needsUpdate=!0)}return r}get indirect(){return!!this._indirectBuffer}constructor(t,e={}){if(t.isBufferGeometry){if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(e=Object.assign({strategy:xn,maxDepth:40,maxLeafTris:10,verbose:!0,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,[Us]:!1},e),e.useSharedArrayBuffer&&!ia())throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=t,this._roots=null,this._indirectBuffer=null,e[Us]||(Fr(this,e),!t.boundingBox&&e.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new st)));const{_indirectBuffer:s}=this;this.resolveTriangleIndex=e.indirect?i=>s[i]:i=>i}refit(t=null){return(this.indirect?Zr:Dr)(this,t)}traverse(t,e=0){const s=this._roots[e],i=new Uint32Array(s),n=new Uint16Array(s);o(0);function o(r,a=0){const h=r*2,d=n[h+15]===_s;if(d){const E=i[r+6],l=n[h+14];t(a,d,new Float32Array(s,r*4,6),E,l)}else{const E=r+Ts/4,l=i[r+6],u=i[r+7];t(a,d,new Float32Array(s,r*4,6),u)||(o(E,a+1),o(l,a+1))}}}raycast(t,e=Bi){const s=this._roots,i=this.geometry,n=[],o=e.isMaterial,r=Array.isArray(e),a=i.groups,h=o?e.side:e,d=this.indirect?Qr:Br;for(let E=0,l=s.length;E<l;E++){const u=r?e[a[E].materialIndex].side:h,C=n.length;if(d(this,E,u,t,n),r){const T=a[E].materialIndex;for(let m=C,f=n.length;m<f;m++)n[m].face.materialIndex=T}}return n}raycastFirst(t,e=Bi){const s=this._roots,i=this.geometry,n=e.isMaterial,o=Array.isArray(e);let r=null;const a=i.groups,h=n?e.side:e,d=this.indirect?qr:zr;for(let E=0,l=s.length;E<l;E++){const u=o?e[a[E].materialIndex].side:h,C=d(this,E,u,t);C!=null&&(r==null||C.distance<r.distance)&&(r=C,o&&(C.face.materialIndex=a[E].materialIndex))}return r}intersectsGeometry(t,e){let s=!1;const i=this._roots,n=this.indirect?Kr:Gr;for(let o=0,r=i.length;o<r&&(s=n(this,o,t,e),!s);o++);return s}shapecast(t){const e=ut.getPrimitive(),s=this.indirect?br:Ur;let{boundsTraverseOrder:i,intersectsBounds:n,intersectsRange:o,intersectsTriangle:r}=t;if(o&&r){const E=o;o=(l,u,C,T,m)=>E(l,u,C,T,m)?!0:s(l,u,this,r,C,T,e)}else o||(r?o=(E,l,u,C)=>s(E,l,this,r,u,C,e):o=(E,l,u)=>u);let a=!1,h=0;const d=this._roots;for(let E=0,l=d.length;E<l;E++){const u=d[E];if(a=Nr(this,E,n,o,i,h),a)break;h+=u.byteLength}return ut.releasePrimitive(e),a}bvhcast(t,e,s){let{intersectsRanges:i,intersectsTriangles:n}=s;const o=ut.getPrimitive(),r=this.geometry.index,a=this.geometry.attributes.position,h=this.indirect?C=>{const T=this.resolveTriangleIndex(C);K(o,T*3,r,a)}:C=>{K(o,C*3,r,a)},d=ut.getPrimitive(),E=t.geometry.index,l=t.geometry.attributes.position,u=t.indirect?C=>{const T=t.resolveTriangleIndex(C);K(d,T*3,E,l)}:C=>{K(d,C*3,E,l)};if(n){const C=(T,m,f,R,A,p,F,g)=>{for(let _=f,S=f+R;_<S;_++){u(_),d.a.applyMatrix4(e),d.b.applyMatrix4(e),d.c.applyMatrix4(e),d.needsUpdate=!0;for(let w=T,y=T+m;w<y;w++)if(h(w),o.needsUpdate=!0,n(o,d,w,_,A,p,F,g))return!0}return!1};if(i){const T=i;i=function(m,f,R,A,p,F,g,_){return T(m,f,R,A,p,F,g,_)?!0:C(m,f,R,A,p,F,g,_)}}else i=C}return na(this,t,e,i)}intersectsBox(t,e){return hs.set(t.min,t.max,e),hs.needsUpdate=!0,this.shapecast({intersectsBounds:s=>hs.intersectsBox(s),intersectsTriangle:s=>hs.intersectsTriangle(s)})}intersectsSphere(t){return this.shapecast({intersectsBounds:e=>t.intersectsBox(e),intersectsTriangle:e=>e.intersectsSphere(t)})}closestPointToGeometry(t,e,s={},i={},n=0,o=1/0){return(this.indirect?sa:kr)(this,t,e,s,i,n,o)}closestPointToPoint(t,e={},s=0,i=1/0){return wr(this,t,e,s,i)}getBoundingBox(t){return t.makeEmpty(),this._roots.forEach(e=>{j(0,new Float32Array(e),en),t.union(en)}),t}}function sn(c,t,e){return c===null||(c.point.applyMatrix4(t.matrixWorld),c.distance=c.point.distanceTo(e.ray.origin),c.object=t,c.distance<e.near||c.distance>e.far)?null:c}const Vs=new Zo,nn=new H,oa=D.prototype.raycast;function ra(c,t){if(this.geometry.boundsTree){if(this.material===void 0)return;nn.copy(this.matrixWorld).invert(),Vs.copy(c.ray).applyMatrix4(nn);const e=this.geometry.boundsTree;if(c.firstHitOnly===!0){const s=sn(e.raycastFirst(Vs,this.material),this,c);s&&t.push(s)}else{const s=e.raycast(Vs,this.material);for(let i=0,n=s.length;i<n;i++){const o=sn(s[i],this,c);o&&t.push(o)}}}else oa.call(this,c,t)}function aa(c){return this.boundsTree=new wi(this,c),this.boundsTree}function ha(){this.boundsTree=null}class M{constructor(){I(this,"trigger",t=>{const e=this.handlers.slice(0);for(const s of e)s(t)}),I(this,"handlers",[])}add(t){this.handlers.push(t)}remove(t){this.handlers=this.handlers.filter(e=>e!==t)}reset(){this.handlers.length=0}}class ms{constructor(){I(this,"trigger",async t=>{const e=this.handlers.slice(0);for(const s of e)await s(t)}),I(this,"handlers",[])}add(t){this.handlers.push(t)}remove(t){this.handlers=this.handlers.filter(e=>e!==t)}reset(){this.handlers.length=0}}class yi{constructor(t){I(this,"isDisposeable",()=>"dispose"in this&&"onDisposed"in this),I(this,"isResizeable",()=>"resize"in this&&"getSize"in this),I(this,"isUpdateable",()=>"onAfterUpdate"in this&&"onBeforeUpdate"in this&&"update"in this),I(this,"isHideable",()=>"visible"in this),I(this,"isConfigurable",()=>"setup"in this&&"config"in this&&"onSetup"in this),this.components=t}}class J extends yi{}class Li extends yi{constructor(t){super(t),I(this,"worlds",new Map),I(this,"onWorldChanged",new M),I(this,"currentWorld",null),this.onWorldChanged.add(({world:e,action:s})=>{s==="removed"&&this.worlds.delete(e.uuid)})}}class ca extends Li{constructor(){super(...arguments),I(this,"hasCameraControls",()=>"controls"in this)}}class la extends Li{constructor(){super(...arguments),I(this,"onAfterUpdate",new M),I(this,"onBeforeUpdate",new M),I(this,"onDisposed",new M),I(this,"onResize",new M),I(this,"onClippingPlanesUpdated",new M),I(this,"clippingPlanes",[])}updateClippingPlanes(){this.onClippingPlanesUpdated.trigger()}setPlane(t,e,s){e.isLocal=s;const i=this.clippingPlanes.indexOf(e);t&&i===-1?this.clippingPlanes.push(e):!t&&i>-1&&this.clippingPlanes.splice(i,1),this.three.clippingPlanes=this.clippingPlanes.filter(n=>!n.isLocal)}}const Yn=class ai extends J{constructor(t){super(t),I(this,"_disposedComponents",new Set),I(this,"enabled",!0),t.add(ai.uuid,this)}get(){return this._disposedComponents}destroy(t,e=!0,s=!0){t.removeFromParent();const i=t;i.dispose&&i.dispose(),this.disposeGeometryAndMaterials(t,e),s&&i.children&&i.children.length&&this.disposeChildren(i),t.children.length=0}disposeGeometry(t){t.boundsTree&&t.disposeBoundsTree&&t.disposeBoundsTree(),t.dispose()}disposeGeometryAndMaterials(t,e){const s=t;s.geometry&&this.disposeGeometry(s.geometry),e&&s.material&&ai.disposeMaterial(s),s.material=[],s.geometry=null}disposeChildren(t){for(const e of t.children)this.destroy(e)}static disposeMaterial(t){if(t.material)if(Array.isArray(t.material))for(const e of t.material)e.dispose();else t.material.dispose()}};I(Yn,"uuid","76e9cd8e-ad8f-4753-9ef6-cbc60f7247fe");let me=Yn;class da extends Li{constructor(t){super(t),I(this,"onDisposed",new M)}dispose(){const t=this.components.get(me);for(const e of this.three.children){const s=e;s.geometry&&t.destroy(s)}this.three.children=[],this.onDisposed.trigger(),this.onDisposed.reset()}}const fs=0,Ea=1,ua=new O,on=new Ft,Hs=new fe,rn=new O,cs=new Ie;class Ia{constructor(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new an,this.unassigned=new an,this.vertices=[]}setFromPoints(t){if(t.length>=4){this.makeEmpty();for(let e=0,s=t.length;e<s;e++)this.vertices.push(new pa(t[e]));this.compute()}return this}setFromObject(t){const e=[];return t.updateMatrixWorld(!0),t.traverse(function(s){const i=s.geometry;if(i!==void 0){const n=i.attributes.position;if(n!==void 0)for(let o=0,r=n.count;o<r;o++){const a=new O;a.fromBufferAttribute(n,o).applyMatrix4(s.matrixWorld),e.push(a)}}}),this.setFromPoints(e)}containsPoint(t){const e=this.faces;for(let s=0,i=e.length;s<i;s++)if(e[s].distanceToPoint(t)>this.tolerance)return!1;return!0}intersectRay(t,e){const s=this.faces;let i=-1/0,n=1/0;for(let o=0,r=s.length;o<r;o++){const a=s[o],h=a.distanceToPoint(t.origin),d=a.normal.dot(t.direction);if(h>0&&d>=0)return null;const E=d!==0?-h/d:0;if(!(E<=0)&&(d>0?n=Math.min(E,n):i=Math.max(E,i),i>n))return null}return i!==-1/0?t.at(i,e):t.at(n,e),e}intersectsRay(t){return this.intersectRay(t,ua)!==null}makeEmpty(){return this.faces=[],this.vertices=[],this}addVertexToFace(t,e){return t.face=e,e.outside===null?this.assigned.append(t):this.assigned.insertBefore(e.outside,t),e.outside=t,this}removeVertexFromFace(t,e){return t===e.outside&&(t.next!==null&&t.next.face===e?e.outside=t.next:e.outside=null),this.assigned.remove(t),this}removeAllVerticesFromFace(t){if(t.outside!==null){const e=t.outside;let s=t.outside;for(;s.next!==null&&s.next.face===t;)s=s.next;return this.assigned.removeSubList(e,s),e.prev=s.next=null,t.outside=null,e}}deleteFaceVertices(t,e){const s=this.removeAllVerticesFromFace(t);if(s!==void 0)if(e===void 0)this.unassigned.appendChain(s);else{let i=s;do{const n=i.next;e.distanceToPoint(i.point)>this.tolerance?this.addVertexToFace(i,e):this.unassigned.append(i),i=n}while(i!==null)}return this}resolveUnassignedPoints(t){if(this.unassigned.isEmpty()===!1){let e=this.unassigned.first();do{const s=e.next;let i=this.tolerance,n=null;for(let o=0;o<t.length;o++){const r=t[o];if(r.mark===fs){const a=r.distanceToPoint(e.point);if(a>i&&(i=a,n=r),i>1e3*this.tolerance)break}}n!==null&&this.addVertexToFace(e,n),e=s}while(e!==null)}return this}computeExtremes(){const t=new O,e=new O,s=[],i=[];for(let n=0;n<3;n++)s[n]=i[n]=this.vertices[0];t.copy(this.vertices[0].point),e.copy(this.vertices[0].point);for(let n=0,o=this.vertices.length;n<o;n++){const r=this.vertices[n],a=r.point;for(let h=0;h<3;h++)a.getComponent(h)<t.getComponent(h)&&(t.setComponent(h,a.getComponent(h)),s[h]=r);for(let h=0;h<3;h++)a.getComponent(h)>e.getComponent(h)&&(e.setComponent(h,a.getComponent(h)),i[h]=r)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(t.x),Math.abs(e.x))+Math.max(Math.abs(t.y),Math.abs(e.y))+Math.max(Math.abs(t.z),Math.abs(e.z))),{min:s,max:i}}computeInitialHull(){const t=this.vertices,e=this.computeExtremes(),s=e.min,i=e.max;let n=0,o=0;for(let l=0;l<3;l++){const u=i[l].point.getComponent(l)-s[l].point.getComponent(l);u>n&&(n=u,o=l)}const r=s[o],a=i[o];let h,d;n=0,on.set(r.point,a.point);for(let l=0,u=this.vertices.length;l<u;l++){const C=t[l];if(C!==r&&C!==a){on.closestPointToPoint(C.point,!0,rn);const T=rn.distanceToSquared(C.point);T>n&&(n=T,h=C)}}n=-1,Hs.setFromCoplanarPoints(r.point,a.point,h.point);for(let l=0,u=this.vertices.length;l<u;l++){const C=t[l];if(C!==r&&C!==a&&C!==h){const T=Math.abs(Hs.distanceToPoint(C.point));T>n&&(n=T,d=C)}}const E=[];if(Hs.distanceToPoint(d.point)<0){E.push(ft.create(r,a,h),ft.create(d,a,r),ft.create(d,h,a),ft.create(d,r,h));for(let l=0;l<3;l++){const u=(l+1)%3;E[l+1].getEdge(2).setTwin(E[0].getEdge(u)),E[l+1].getEdge(1).setTwin(E[u+1].getEdge(0))}}else{E.push(ft.create(r,h,a),ft.create(d,r,a),ft.create(d,a,h),ft.create(d,h,r));for(let l=0;l<3;l++){const u=(l+1)%3;E[l+1].getEdge(2).setTwin(E[0].getEdge((3-l)%3)),E[l+1].getEdge(0).setTwin(E[u+1].getEdge(1))}}for(let l=0;l<4;l++)this.faces.push(E[l]);for(let l=0,u=t.length;l<u;l++){const C=t[l];if(C!==r&&C!==a&&C!==h&&C!==d){n=this.tolerance;let T=null;for(let m=0;m<4;m++){const f=this.faces[m].distanceToPoint(C.point);f>n&&(n=f,T=this.faces[m])}T!==null&&this.addVertexToFace(C,T)}}return this}reindexFaces(){const t=[];for(let e=0;e<this.faces.length;e++){const s=this.faces[e];s.mark===fs&&t.push(s)}return this.faces=t,this}nextVertexToAdd(){if(this.assigned.isEmpty()===!1){let t,e=0;const s=this.assigned.first().face;let i=s.outside;do{const n=s.distanceToPoint(i.point);n>e&&(e=n,t=i),i=i.next}while(i!==null&&i.face===s);return t}}computeHorizon(t,e,s,i){this.deleteFaceVertices(s),s.mark=Ea;let n;e===null?n=e=s.getEdge(0):n=e.next;do{const o=n.twin,r=o.face;r.mark===fs&&(r.distanceToPoint(t)>this.tolerance?this.computeHorizon(t,o,r,i):i.push(n)),n=n.next}while(n!==e);return this}addAdjoiningFace(t,e){const s=ft.create(t,e.tail(),e.head());return this.faces.push(s),s.getEdge(-1).setTwin(e.twin),s.getEdge(0)}addNewFaces(t,e){this.newFaces=[];let s=null,i=null;for(let n=0;n<e.length;n++){const o=e[n],r=this.addAdjoiningFace(t,o);s===null?s=r:r.next.setTwin(i),this.newFaces.push(r.face),i=r}return s.next.setTwin(i),this}addVertexToHull(t){const e=[];return this.unassigned.clear(),this.removeVertexFromFace(t,t.face),this.computeHorizon(t.point,null,t.face,e),this.addNewFaces(t,e),this.resolveUnassignedPoints(this.newFaces),this}cleanup(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this}compute(){let t;for(this.computeInitialHull();(t=this.nextVertexToAdd())!==void 0;)this.addVertexToHull(t);return this.reindexFaces(),this.cleanup(),this}}class ft{constructor(){this.normal=new O,this.midpoint=new O,this.area=0,this.constant=0,this.outside=null,this.mark=fs,this.edge=null}static create(t,e,s){const i=new ft,n=new Ws(t,i),o=new Ws(e,i),r=new Ws(s,i);return n.next=r.prev=o,o.next=n.prev=r,r.next=o.prev=n,i.edge=n,i.compute()}getEdge(t){let e=this.edge;for(;t>0;)e=e.next,t--;for(;t<0;)e=e.prev,t++;return e}compute(){const t=this.edge.tail(),e=this.edge.head(),s=this.edge.next.head();return cs.set(t.point,e.point,s.point),cs.getNormal(this.normal),cs.getMidpoint(this.midpoint),this.area=cs.getArea(),this.constant=this.normal.dot(this.midpoint),this}distanceToPoint(t){return this.normal.dot(t)-this.constant}}class Ws{constructor(t,e){this.vertex=t,this.prev=null,this.next=null,this.twin=null,this.face=e}head(){return this.vertex}tail(){return this.prev?this.prev.vertex:null}length(){const t=this.head(),e=this.tail();return e!==null?e.point.distanceTo(t.point):-1}lengthSquared(){const t=this.head(),e=this.tail();return e!==null?e.point.distanceToSquared(t.point):-1}setTwin(t){return this.twin=t,t.twin=this,this}}class pa{constructor(t){this.point=t,this.prev=null,this.next=null,this.face=null}}class an{constructor(){this.head=null,this.tail=null}first(){return this.head}last(){return this.tail}clear(){return this.head=this.tail=null,this}insertBefore(t,e){return e.prev=t.prev,e.next=t,e.prev===null?this.head=e:e.prev.next=e,t.prev=e,this}insertAfter(t,e){return e.prev=t,e.next=t.next,e.next===null?this.tail=e:e.next.prev=e,t.next=e,this}append(t){return this.head===null?this.head=t:this.tail.next=t,t.prev=this.tail,t.next=null,this.tail=t,this}appendChain(t){for(this.head===null?this.head=t:this.tail.next=t,t.prev=this.tail;t.next!==null;)t=t.next;return this.tail=t,this}remove(t){return t.prev===null?this.head=t.next:t.prev.next=t.next,t.next===null?this.tail=t.prev:t.next.prev=t.prev,this}removeSubList(t,e){return t.prev===null?this.head=e.next:t.prev.next=e.next,e.next===null?this.tail=t.prev:e.next.prev=t.prev,this}isEmpty(){return this.head===null}}const hi=[2,2,1],ci=[1,0,0];function Nt(c,t){return c*3+t}function Ca(c){const t=c.elements;let e=0;for(let s=0;s<9;s++)e+=t[s]*t[s];return Math.sqrt(e)}function Ta(c){const t=c.elements;let e=0;for(let s=0;s<3;s++){const i=t[Nt(hi[s],ci[s])];e+=2*i*i}return Math.sqrt(e)}function ma(c,t){let e=0,s=1;const i=c.elements;for(let h=0;h<3;h++){const d=Math.abs(i[Nt(hi[h],ci[h])]);d>e&&(e=d,s=h)}let n=1,o=0;const r=ci[s],a=hi[s];if(Math.abs(i[Nt(a,r)])>Number.EPSILON){const h=i[Nt(a,a)],d=i[Nt(r,r)],E=i[Nt(a,r)],l=(h-d)/2/E;let u;l<0?u=-1/(-l+Math.sqrt(1+l*l)):u=1/(l+Math.sqrt(1+l*l)),n=1/Math.sqrt(1+u*u),o=u*n}return t.identity(),t.elements[Nt(r,r)]=n,t.elements[Nt(a,a)]=n,t.elements[Nt(a,r)]=o,t.elements[Nt(r,a)]=-o,t}function fa(c,t){let e=0,s=0;const i=10;t.unitary.identity(),t.diagonal.copy(c);const n=t.unitary,o=t.diagonal,r=new Zt,a=new Zt,h=Number.EPSILON*Ca(o);for(;s<i&&Ta(o)>h;)ma(o,r),a.copy(r).transpose(),o.multiply(r),o.premultiply(a),n.multiply(r),++e>2&&(s++,e=0);return t}function Ra(c){const t=[];for(let $=0;$<c.length-2;$+=3){const Vt=c[$],q=c[$+1],$t=c[$+2];t.push(new O(Vt,q,$t))}const e=new Ia;e.setFromPoints(t);const s={unitary:new Zt,diagonal:new Zt},i=e.faces,n=[],o=[];for(let $=0,Vt=i.length;$<Vt;$++){const q=i[$];let $t=q.edge;n.length=0;do n.push($t),$t=$t.next;while($t!==q.edge);const Oo=n.length-2;for(let Xe=1,_o=Oo;Xe<=_o;Xe++){const ws=n[0].vertex,ys=n[Xe+0].vertex,Ls=n[Xe+1].vertex;o.push(ws.point.x,ws.point.y,ws.point.z),o.push(ys.point.x,ys.point.y,ys.point.z),o.push(Ls.point.x,Ls.point.y,Ls.point.z)}}const r=new O,a=new O,h=new O,d=new O,E=new O,l=new O,u=new O,C=new O;let T=0,m=0,f=0,R=0,A=0,p=0,F=0;for(let $=0,Vt=o.length;$<Vt;$+=9){r.fromArray(o,$),a.fromArray(o,$+3),h.fromArray(o,$+6),u.set(0,0,0),u.add(r).add(a).add(h).divideScalar(3),d.subVectors(a,r),E.subVectors(h,r);const q=l.crossVectors(d,E).length()/2;C.add(l.copy(u).multiplyScalar(q)),T+=q,m+=(9*u.x*u.x+r.x*r.x+a.x*a.x+h.x*h.x)*(q/12),f+=(9*u.x*u.y+r.x*r.y+a.x*a.y+h.x*h.y)*(q/12),R+=(9*u.x*u.z+r.x*r.z+a.x*a.z+h.x*h.z)*(q/12),A+=(9*u.y*u.y+r.y*r.y+a.y*a.y+h.y*h.y)*(q/12),p+=(9*u.y*u.z+r.y*r.z+a.y*a.z+h.y*h.z)*(q/12),F+=(9*u.z*u.z+r.z*r.z+a.z*a.z+h.z*h.z)*(q/12)}C.divideScalar(T),m/=T,f/=T,R/=T,A/=T,p/=T,F/=T,m-=C.x*C.x,f-=C.x*C.y,R-=C.x*C.z,A-=C.y*C.y,p-=C.y*C.z,F-=C.z*C.z;const g=new Zt;g.elements[0]=m,g.elements[1]=f,g.elements[2]=R,g.elements[3]=f,g.elements[4]=A,g.elements[5]=p,g.elements[6]=R,g.elements[7]=p,g.elements[8]=F,fa(g,s);const _=s.unitary,S=new O,w=new O,y=new O;_.extractBasis(S,w,y);let L=-1/0,P=-1/0,U=-1/0,x=1/0,Y=1/0,z=1/0;for(let $=0,Vt=t.length;$<Vt;$++){const q=t[$];L=Math.max(S.dot(q),L),P=Math.max(w.dot(q),P),U=Math.max(y.dot(q),U),x=Math.min(S.dot(q),x),Y=Math.min(w.dot(q),Y),z=Math.min(y.dot(q),z)}S.multiplyScalar(.5*(x+L)),w.multiplyScalar(.5*(Y+P)),y.multiplyScalar(.5*(z+U));const tt=new O,W=new O,Mt=new Zt;tt.add(S).add(w).add(y),W.x=L-x,W.y=P-Y,W.z=U-z,W.multiplyScalar(.5),Mt.copy(_);const{x:zt,y:Gt,z:We}=W,Fe=new H;Fe.makeScale(zt*2,Gt*2,We*2);const Di=new H;Di.makeTranslation(-zt,-Gt,-We);const xi=new H;xi.makeTranslation(tt.x,tt.y,tt.z);const vi=new H;vi.setFromMatrix3(Mt);const Ae=new H;return Ae.multiply(xi),Ae.multiply(vi),Ae.multiply(Di),Ae.multiply(Fe),{center:tt,halfSizes:W,rotation:Mt,transformation:Ae}}function Fa(c,t,e){const s=[c[0]-t[0],c[1]-t[1],c[2]-t[2]];return e[0]*s[0]+e[1]*s[1]+e[2]*s[2]>0}class hn{static isTransparent(t){return t.transparent&&t.opacity<1}}const li=class et{static create(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,s=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return`${et._lut[t&255]+et._lut[t>>8&255]+et._lut[t>>16&255]+et._lut[t>>24&255]}-${et._lut[e&255]}${et._lut[e>>8&255]}-${et._lut[e>>16&15|64]}${et._lut[e>>24&255]}-${et._lut[s&63|128]}${et._lut[s>>8&255]}-${et._lut[s>>16&255]}${et._lut[s>>24&255]}${et._lut[i&255]}${et._lut[i>>8&255]}${et._lut[i>>16&255]}${et._lut[i>>24&255]}`.toLowerCase()}static validate(t){if(!et._pattern.test(t))throw new Error(`${t} is not a valid UUID v4.

- If you're the tool creator, you can take one from https://www.uuidgenerator.net/.

- If you're using a platform tool, verify the uuid isn't misspelled or contact the tool creator.`)}};I(li,"_pattern",/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/),I(li,"_lut",["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"]);let Pi=li;const zn=class Gn{constructor(){I(this,"onDisposed",new M),I(this,"list",new Map),I(this,"enabled",!1),I(this,"_clock"),I(this,"update",()=>{if(!this.enabled)return;const t=this._clock.getDelta();for(const[e,s]of this.list)s.enabled&&s.isUpdateable()&&s.update(t);requestAnimationFrame(this.update)}),this._clock=new Do,Gn.setupBVH()}add(t,e){if(this.list.has(t))throw new Error("You're trying to add a component that already exists in the components instance. Use Components.get() instead.");Pi.validate(t),this.list.set(t,e)}get(t){const e=t.uuid;if(!this.list.has(e)){const s=new t(this);return this.list.has(e)||this.add(e,s),s}return this.list.get(e)}init(){this.enabled=!0,this._clock.start(),this.update()}dispose(){this.enabled=!1;for(const[t,e]of this.list)e.enabled=!1,e.isDisposeable()&&e.dispose();this._clock.stop(),this.onDisposed.trigger(),this.onDisposed.reset()}static setupBVH(){ze.prototype.computeBoundsTree=aa,ze.prototype.disposeBoundsTree=ha,D.prototype.raycast=ra}};I(zn,"release","2.1.11");let Aa=zn;class ga{constructor(t){I(this,"_event"),I(this,"_position",new At),I(this,"onDisposed",new M),I(this,"updateMouseInfo",e=>{this._event=e}),this.dom=t,this.setupEvents(!0)}get position(){if(this._event){const t=this.dom.getBoundingClientRect();this._position.x=this.getPositionX(t,this._event),this._position.y=this.getPositionY(t,this._event)}return this._position}dispose(){this.setupEvents(!1),this.onDisposed.trigger(),this.onDisposed.reset()}getPositionY(t,e){return-((e.clientY-t.top)/(t.bottom-t.top))*2+1}getPositionX(t,e){return(e.clientX-t.left)/(t.right-t.left)*2-1}setupEvents(t){t?this.dom.addEventListener("pointermove",this.updateMouseInfo):this.dom.removeEventListener("pointermove",this.updateMouseInfo)}}class Oa{constructor(t,e){I(this,"enabled",!0),I(this,"components"),I(this,"onDisposed",new M),I(this,"mouse"),I(this,"three",new pi),I(this,"world");const s=e.renderer;if(!s)throw new Error("A renderer is needed for the raycaster to work!");this.world=e,this.mouse=new ga(s.three.domElement),this.components=t}dispose(){this.mouse.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}castRay(t=Array.from(this.world.meshes)){if(!this.world)throw new Error("A world is needed to cast rays!");const e=this.world.camera.three;return this.three.setFromCamera(this.mouse.position,e),this.intersect(t)}castRayFromVector(t,e,s=Array.from(this.world.meshes)){return this.three.set(t,e),this.intersect(s)}intersect(t=Array.from(this.world.meshes)){const e=this.three.intersectObjects(t),s=this.filterClippingPlanes(e);return s.length>0?s[0]:null}filterClippingPlanes(t){if(!this.world.renderer)throw new Error("Renderer not found!");const e=this.world.renderer.three;if(!e.clippingPlanes)return t;const s=e.clippingPlanes;return t.length<=0||!s||(s==null?void 0:s.length)<=0?t:t.filter(i=>s.every(n=>n.distanceToPoint(i.point)>0))}}const Vn=class Hn extends J{constructor(t){super(t),I(this,"enabled",!0),I(this,"list",new Map),I(this,"onDisposed",new M),t.add(Hn.uuid,this)}get(t){if(this.list.has(t.uuid))return this.list.get(t.uuid);const e=new Oa(this.components,t);return this.list.set(t.uuid,e),t.onDisposed.add(()=>{this.delete(t)}),e}delete(t){const e=this.list.get(t.uuid);e&&e.dispose(),this.list.delete(t.uuid)}dispose(){for(const[t,e]of this.list)e.dispose();this.list.clear(),this.onDisposed.trigger()}};I(Vn,"uuid","d5d8bdf0-db25-4952-b951-b643af207ace");let cn=Vn;class _a extends yi{constructor(){super(...arguments),I(this,"meshes",new Set),I(this,"onAfterUpdate",new M),I(this,"onBeforeUpdate",new M),I(this,"onDisposed",new M),I(this,"isDisposing",!1),I(this,"enabled",!0),I(this,"uuid",Pi.create()),I(this,"name"),I(this,"_scene"),I(this,"_camera"),I(this,"_renderer",null)}get scene(){if(!this._scene)throw new Error("No scene initialized!");return this._scene}set scene(t){this._scene=t,t.worlds.set(this.uuid,this),t.currentWorld=this,t.onWorldChanged.trigger({world:this,action:"added"})}get camera(){if(!this._camera)throw new Error("No camera initialized!");return this._camera}set camera(t){this._camera=t,t.worlds.set(this.uuid,this),t.currentWorld=this,t.onWorldChanged.trigger({world:this,action:"added"})}get renderer(){return this._renderer}set renderer(t){this._renderer=t,t&&(t.worlds.set(this.uuid,this),t.currentWorld=this,t.onWorldChanged.trigger({world:this,action:"added"}))}update(t){this.enabled&&(!this._scene||!this._camera||(this.scene.currentWorld=this,this.camera.currentWorld=this,this.renderer&&(this.renderer.currentWorld=this),this.onBeforeUpdate.trigger(),this.scene.isUpdateable()&&this.scene.update(t),this.camera.isUpdateable()&&this.camera.update(t),this.renderer&&this.renderer.update(t),this.onAfterUpdate.trigger()))}dispose(t=!0){if(this.enabled=!1,this.isDisposing=!0,this.scene.onWorldChanged.trigger({world:this,action:"removed"}),this.camera.onWorldChanged.trigger({world:this,action:"removed"}),this.renderer&&this.renderer.onWorldChanged.trigger({world:this,action:"removed"}),t){const e=this.components.get(me);this.scene.dispose(),this.camera.isDisposeable()&&this.camera.dispose(),this.renderer&&this.renderer.dispose();for(const s of this.meshes)e.destroy(s);this.meshes.clear()}this._scene=null,this._camera=null,this._renderer=null,this.onDisposed.trigger()}}class ah extends da{constructor(t){super(t),I(this,"isSetup",!1),I(this,"three"),I(this,"onSetup",new M),I(this,"config",{directionalLight:{color:new Qt("white"),intensity:1.5,position:new O(5,10,3)},ambientLight:{color:new Qt("white"),intensity:1}}),this.three=new Ci,this.three.background=new Qt(2107698)}setup(t){this.config={...this.config,...t};const e=new No(this.config.directionalLight.color,this.config.directionalLight.intensity);e.position.copy(this.config.directionalLight.position);const s=new wo(this.config.ambientLight.color,this.config.ambientLight.intensity);this.three.add(e,s),this.isSetup=!0,this.onSetup.trigger(this)}}class hh extends la{constructor(t,e,s){super(t),I(this,"enabled",!0),I(this,"container"),I(this,"three"),I(this,"_canvas"),I(this,"_parameters"),I(this,"_resizeObserver",null),I(this,"onContainerUpdated",new M),I(this,"_resizing",!1),I(this,"resize",o=>{if(this._resizing)return;this._resizing=!0,this.onContainerUpdated.trigger();const r=o?o.x:this.container.clientWidth,a=o?o.y:this.container.clientHeight;this.three.setSize(r,a),this.onResize.trigger(new At(r,a)),this._resizing=!1}),I(this,"resizeEvent",()=>{this.resize()}),I(this,"onContextLost",o=>{o.preventDefault(),this.enabled=!1}),I(this,"onContextBack",()=>{this.three.setRenderTarget(null),this.three.dispose(),this.three=new Fs({canvas:this._canvas,antialias:!0,alpha:!0,...this._parameters}),this.enabled=!0}),this.container=e,this._parameters=s,this.three=new Fs({antialias:!0,alpha:!0,...s}),this.three.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.setupRenderer(),this.setupEvents(!0),this.resize(),this._canvas=this.three.domElement;const i=this.three.getContext(),{canvas:n}=i;n.addEventListener("webglcontextlost",this.onContextLost,!1),n.addEventListener("webglcontextrestored",this.onContextBack,!1)}update(){if(!this.enabled||!this.currentWorld)return;this.onBeforeUpdate.trigger(this);const t=this.currentWorld.scene.three,e=this.currentWorld.camera.three;this.three.render(t,e),this.onAfterUpdate.trigger(this)}dispose(){this.enabled=!1,this.setupEvents(!1),this.three.domElement.remove(),this.three.dispose(),this.onResize.reset(),this.onAfterUpdate.reset(),this.onBeforeUpdate.reset(),this.onDisposed.trigger(),this.onDisposed.reset()}getSize(){return new At(this.three.domElement.clientWidth,this.three.domElement.clientHeight)}setupEvents(t){const e=this.three.domElement.parentElement;if(!e)throw new Error("This renderer needs to have an HTML container!");this._resizeObserver&&(this._resizeObserver.disconnect(),this._resizeObserver=null),window.removeEventListener("resize",this.resizeEvent),t&&(this._resizeObserver=new ResizeObserver(this.resizeEvent),this._resizeObserver.observe(e),window.addEventListener("resize",this.resizeEvent))}setupRenderer(){this.three.localClippingEnabled=!0,this.container&&this.container.appendChild(this.three.domElement),this.onContainerUpdated.trigger()}}/*!
 * camera-controls
 * https://github.com/yomotsu/camera-controls
 * (c) 2017 @yomotsu
 * Released under the MIT License.
 */const b={LEFT:1,RIGHT:2,MIDDLE:4},N=Object.freeze({NONE:0,ROTATE:1,TRUCK:2,OFFSET:4,DOLLY:8,ZOOM:16,TOUCH_ROTATE:32,TOUCH_TRUCK:64,TOUCH_OFFSET:128,TOUCH_DOLLY:256,TOUCH_ZOOM:512,TOUCH_DOLLY_TRUCK:1024,TOUCH_DOLLY_OFFSET:2048,TOUCH_DOLLY_ROTATE:4096,TOUCH_ZOOM_TRUCK:8192,TOUCH_ZOOM_OFFSET:16384,TOUCH_ZOOM_ROTATE:32768}),ce={NONE:0,IN:1,OUT:-1};function Ht(c){return c.isPerspectiveCamera}function vt(c){return c.isOrthographicCamera}const le=Math.PI*2,ln=Math.PI/2,Wn=1e-5,Le=Math.PI/180;function mt(c,t,e){return Math.max(t,Math.min(e,c))}function k(c,t=Wn){return Math.abs(c)<t}function V(c,t,e=Wn){return k(c-t,e)}function dn(c,t){return Math.round(c/t)*t}function Pe(c){return isFinite(c)?c:c<0?-Number.MAX_VALUE:Number.MAX_VALUE}function Me(c){return Math.abs(c)<Number.MAX_VALUE?c:c*(1/0)}function ls(c,t,e,s,i=1/0,n){s=Math.max(1e-4,s);const o=2/s,r=o*n,a=1/(1+r+.48*r*r+.235*r*r*r);let h=c-t;const d=t,E=i*s;h=mt(h,-E,E),t=c-h;const l=(e.value+o*h)*n;e.value=(e.value-o*l)*a;let u=t+(h+l)*a;return d-c>0==u>d&&(u=d,e.value=(u-d)/n),u}function En(c,t,e,s,i=1/0,n,o){s=Math.max(1e-4,s);const r=2/s,a=r*n,h=1/(1+a+.48*a*a+.235*a*a*a);let d=t.x,E=t.y,l=t.z,u=c.x-d,C=c.y-E,T=c.z-l;const m=d,f=E,R=l,A=i*s,p=A*A,F=u*u+C*C+T*T;if(F>p){const Y=Math.sqrt(F);u=u/Y*A,C=C/Y*A,T=T/Y*A}d=c.x-u,E=c.y-C,l=c.z-T;const g=(e.x+r*u)*n,_=(e.y+r*C)*n,S=(e.z+r*T)*n;e.x=(e.x-r*g)*h,e.y=(e.y-r*_)*h,e.z=(e.z-r*S)*h,o.x=d+(u+g)*h,o.y=E+(C+_)*h,o.z=l+(T+S)*h;const w=m-c.x,y=f-c.y,L=R-c.z,P=o.x-m,U=o.y-f,x=o.z-R;return w*P+y*U+L*x>0&&(o.x=m,o.y=f,o.z=R,e.x=(o.x-m)/n,e.y=(o.y-f)/n,e.z=(o.z-R)/n),o}function Xs(c,t){t.set(0,0),c.forEach(e=>{t.x+=e.clientX,t.y+=e.clientY}),t.x/=c.length,t.y/=c.length}function ks(c,t){return vt(c)?(console.warn(`${t} is not supported in OrthographicCamera`),!0):!1}class Sa{constructor(){this._listeners={}}addEventListener(t,e){const s=this._listeners;s[t]===void 0&&(s[t]=[]),s[t].indexOf(e)===-1&&s[t].push(e)}hasEventListener(t,e){const s=this._listeners;return s[t]!==void 0&&s[t].indexOf(e)!==-1}removeEventListener(t,e){const s=this._listeners[t];if(s!==void 0){const i=s.indexOf(e);i!==-1&&s.splice(i,1)}}removeAllEventListeners(t){if(!t){this._listeners={};return}Array.isArray(this._listeners[t])&&(this._listeners[t].length=0)}dispatchEvent(t){const e=this._listeners[t.type];if(e!==void 0){t.target=this;const s=e.slice(0);for(let i=0,n=s.length;i<n;i++)s[i].call(this,t)}}}const Na="2.7.3",ds=1/8,Xn=typeof window<"u",wa=Xn&&/Mac/.test(navigator.platform),ya=!(Xn&&"PointerEvent"in window);let v,un,Es,Zs,ht,B,G,de,Ue,Ot,_t,Wt,In,pn,dt,De,Ee,Cn,Qs,Tn,js,qs,us;class ot extends Sa{static install(t){v=t.THREE,un=Object.freeze(new v.Vector3(0,0,0)),Es=Object.freeze(new v.Vector3(0,1,0)),Zs=Object.freeze(new v.Vector3(0,0,1)),ht=new v.Vector2,B=new v.Vector3,G=new v.Vector3,de=new v.Vector3,Ue=new v.Vector3,Ot=new v.Vector3,_t=new v.Vector3,Wt=new v.Vector3,In=new v.Vector3,pn=new v.Vector3,dt=new v.Spherical,De=new v.Spherical,Ee=new v.Box3,Cn=new v.Box3,Qs=new v.Sphere,Tn=new v.Quaternion,js=new v.Quaternion,qs=new v.Matrix4,us=new v.Raycaster}static get ACTION(){return N}constructor(t,e){super(),this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.minDistance=Number.EPSILON,this.maxDistance=1/0,this.infinityDolly=!1,this.minZoom=.01,this.maxZoom=1/0,this.smoothTime=.25,this.draggingSmoothTime=.125,this.maxSpeed=1/0,this.azimuthRotateSpeed=1,this.polarRotateSpeed=1,this.dollySpeed=1,this.dollyDragInverted=!1,this.truckSpeed=2,this.dollyToCursor=!1,this.dragToOffset=!1,this.verticalDragToForward=!1,this.boundaryFriction=0,this.restThreshold=.01,this.colliderMeshes=[],this.cancel=()=>{},this._enabled=!0,this._state=N.NONE,this._viewport=null,this._changedDolly=0,this._changedZoom=0,this._hasRested=!0,this._boundaryEnclosesCamera=!1,this._needsUpdate=!0,this._updatedLastTime=!1,this._elementRect=new DOMRect,this._isDragging=!1,this._dragNeedsUpdate=!0,this._activePointers=[],this._lockedPointer=null,this._interactiveArea=new DOMRect(0,0,1,1),this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._isUserControllingOffset=!1,this._isUserControllingZoom=!1,this._lastDollyDirection=ce.NONE,this._thetaVelocity={value:0},this._phiVelocity={value:0},this._radiusVelocity={value:0},this._targetVelocity=new v.Vector3,this._focalOffsetVelocity=new v.Vector3,this._zoomVelocity={value:0},this._truckInternal=(p,F,g)=>{let _,S;if(Ht(this._camera)){const w=B.copy(this._camera.position).sub(this._target),y=this._camera.getEffectiveFOV()*Le,L=w.length()*Math.tan(y*.5);_=this.truckSpeed*p*L/this._elementRect.height,S=this.truckSpeed*F*L/this._elementRect.height}else if(vt(this._camera)){const w=this._camera;_=p*(w.right-w.left)/w.zoom/this._elementRect.width,S=F*(w.top-w.bottom)/w.zoom/this._elementRect.height}else return;this.verticalDragToForward?(g?this.setFocalOffset(this._focalOffsetEnd.x+_,this._focalOffsetEnd.y,this._focalOffsetEnd.z,!0):this.truck(_,0,!0),this.forward(-S,!0)):g?this.setFocalOffset(this._focalOffsetEnd.x+_,this._focalOffsetEnd.y+S,this._focalOffsetEnd.z,!0):this.truck(_,S,!0)},this._rotateInternal=(p,F)=>{const g=le*this.azimuthRotateSpeed*p/this._elementRect.height,_=le*this.polarRotateSpeed*F/this._elementRect.height;this.rotate(g,_,!0)},this._dollyInternal=(p,F,g)=>{const _=Math.pow(.95,-p*this.dollySpeed),S=this._sphericalEnd.radius,w=this._sphericalEnd.radius*_,y=mt(w,this.minDistance,this.maxDistance),L=y-w;this.infinityDolly&&this.dollyToCursor?this._dollyToNoClamp(w,!0):this.infinityDolly&&!this.dollyToCursor?(this.dollyInFixed(L,!0),this._dollyToNoClamp(y,!0)):this._dollyToNoClamp(y,!0),this.dollyToCursor&&(this._changedDolly+=(this.infinityDolly?w:y)-S,this._dollyControlCoord.set(F,g)),this._lastDollyDirection=Math.sign(-p)},this._zoomInternal=(p,F,g)=>{const _=Math.pow(.95,p*this.dollySpeed),S=this._zoom,w=this._zoom*_;this.zoomTo(w,!0),this.dollyToCursor&&(this._changedZoom+=w-S,this._dollyControlCoord.set(F,g))},typeof v>"u"&&console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information."),this._camera=t,this._yAxisUpSpace=new v.Quaternion().setFromUnitVectors(this._camera.up,Es),this._yAxisUpSpaceInverse=this._yAxisUpSpace.clone().invert(),this._state=N.NONE,this._target=new v.Vector3,this._targetEnd=this._target.clone(),this._focalOffset=new v.Vector3,this._focalOffsetEnd=this._focalOffset.clone(),this._spherical=new v.Spherical().setFromVector3(B.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)),this._sphericalEnd=this._spherical.clone(),this._lastDistance=this._spherical.radius,this._zoom=this._camera.zoom,this._zoomEnd=this._zoom,this._lastZoom=this._zoom,this._nearPlaneCorners=[new v.Vector3,new v.Vector3,new v.Vector3,new v.Vector3],this._updateNearPlaneCorners(),this._boundary=new v.Box3(new v.Vector3(-1/0,-1/0,-1/0),new v.Vector3(1/0,1/0,1/0)),this._cameraUp0=this._camera.up.clone(),this._target0=this._target.clone(),this._position0=this._camera.position.clone(),this._zoom0=this._zoom,this._focalOffset0=this._focalOffset.clone(),this._dollyControlCoord=new v.Vector2,this.mouseButtons={left:N.ROTATE,middle:N.DOLLY,right:N.TRUCK,wheel:Ht(this._camera)?N.DOLLY:vt(this._camera)?N.ZOOM:N.NONE},this.touches={one:N.TOUCH_ROTATE,two:Ht(this._camera)?N.TOUCH_DOLLY_TRUCK:vt(this._camera)?N.TOUCH_ZOOM_TRUCK:N.NONE,three:N.TOUCH_TRUCK};const s=new v.Vector2,i=new v.Vector2,n=new v.Vector2,o=p=>{if(!this._enabled||!this._domElement)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const _=this._domElement.getBoundingClientRect(),S=p.clientX/_.width,w=p.clientY/_.height;if(S<this._interactiveArea.left||S>this._interactiveArea.right||w<this._interactiveArea.top||w>this._interactiveArea.bottom)return}const F=p.pointerType!=="mouse"?null:(p.buttons&b.LEFT)===b.LEFT?b.LEFT:(p.buttons&b.MIDDLE)===b.MIDDLE?b.MIDDLE:(p.buttons&b.RIGHT)===b.RIGHT?b.RIGHT:null;if(F!==null){const _=this._findPointerByMouseButton(F);_&&this._disposePointer(_)}if((p.buttons&b.LEFT)===b.LEFT&&this._lockedPointer)return;const g={pointerId:p.pointerId,clientX:p.clientX,clientY:p.clientY,deltaX:0,deltaY:0,mouseButton:F};this._activePointers.push(g),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",d),this._domElement.ownerDocument.addEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",d),this._isDragging=!0,T(p)},r=p=>{if(!this._enabled||!this._domElement||this._lockedPointer)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const _=this._domElement.getBoundingClientRect(),S=p.clientX/_.width,w=p.clientY/_.height;if(S<this._interactiveArea.left||S>this._interactiveArea.right||w<this._interactiveArea.top||w>this._interactiveArea.bottom)return}const F=(p.buttons&b.LEFT)===b.LEFT?b.LEFT:(p.buttons&b.MIDDLE)===b.MIDDLE?b.MIDDLE:(p.buttons&b.RIGHT)===b.RIGHT?b.RIGHT:null;if(F!==null){const _=this._findPointerByMouseButton(F);_&&this._disposePointer(_)}const g={pointerId:1,clientX:p.clientX,clientY:p.clientY,deltaX:0,deltaY:0,mouseButton:(p.buttons&b.LEFT)===b.LEFT?b.LEFT:(p.buttons&b.MIDDLE)===b.LEFT?b.MIDDLE:(p.buttons&b.RIGHT)===b.LEFT?b.RIGHT:null};this._activePointers.push(g),this._domElement.ownerDocument.removeEventListener("mousemove",h),this._domElement.ownerDocument.removeEventListener("mouseup",E),this._domElement.ownerDocument.addEventListener("mousemove",h),this._domElement.ownerDocument.addEventListener("mouseup",E),this._isDragging=!0,T(p)},a=p=>{p.cancelable&&p.preventDefault();const F=p.pointerId,g=this._lockedPointer||this._findPointerById(F);if(g){if(g.clientX=p.clientX,g.clientY=p.clientY,g.deltaX=p.movementX,g.deltaY=p.movementY,this._state=0,p.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else(!this._isDragging&&this._lockedPointer||this._isDragging&&(p.buttons&b.LEFT)===b.LEFT)&&(this._state=this._state|this.mouseButtons.left),this._isDragging&&(p.buttons&b.MIDDLE)===b.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),this._isDragging&&(p.buttons&b.RIGHT)===b.RIGHT&&(this._state=this._state|this.mouseButtons.right);m()}},h=p=>{const F=this._lockedPointer||this._findPointerById(1);F&&(F.clientX=p.clientX,F.clientY=p.clientY,F.deltaX=p.movementX,F.deltaY=p.movementY,this._state=0,(this._lockedPointer||(p.buttons&b.LEFT)===b.LEFT)&&(this._state=this._state|this.mouseButtons.left),(p.buttons&b.MIDDLE)===b.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(p.buttons&b.RIGHT)===b.RIGHT&&(this._state=this._state|this.mouseButtons.right),m())},d=p=>{const F=this._findPointerById(p.pointerId);if(!(F&&F===this._lockedPointer)){if(F&&this._disposePointer(F),p.pointerType==="touch")switch(this._activePointers.length){case 0:this._state=N.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else this._state=N.NONE;f()}},E=()=>{const p=this._findPointerById(1);p&&p===this._lockedPointer||(p&&this._disposePointer(p),this._state=N.NONE,f())};let l=-1;const u=p=>{if(!this._domElement||!this._enabled||this.mouseButtons.wheel===N.NONE)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const w=this._domElement.getBoundingClientRect(),y=p.clientX/w.width,L=p.clientY/w.height;if(y<this._interactiveArea.left||y>this._interactiveArea.right||L<this._interactiveArea.top||L>this._interactiveArea.bottom)return}if(p.preventDefault(),this.dollyToCursor||this.mouseButtons.wheel===N.ROTATE||this.mouseButtons.wheel===N.TRUCK){const w=performance.now();l-w<1e3&&this._getClientRect(this._elementRect),l=w}const F=wa?-1:-3,g=p.deltaMode===1?p.deltaY/F:p.deltaY/(F*10),_=this.dollyToCursor?(p.clientX-this._elementRect.x)/this._elementRect.width*2-1:0,S=this.dollyToCursor?(p.clientY-this._elementRect.y)/this._elementRect.height*-2+1:0;switch(this.mouseButtons.wheel){case N.ROTATE:{this._rotateInternal(p.deltaX,p.deltaY),this._isUserControllingRotate=!0;break}case N.TRUCK:{this._truckInternal(p.deltaX,p.deltaY,!1),this._isUserControllingTruck=!0;break}case N.OFFSET:{this._truckInternal(p.deltaX,p.deltaY,!0),this._isUserControllingOffset=!0;break}case N.DOLLY:{this._dollyInternal(-g,_,S),this._isUserControllingDolly=!0;break}case N.ZOOM:{this._zoomInternal(-g,_,S),this._isUserControllingZoom=!0;break}}this.dispatchEvent({type:"control"})},C=p=>{if(!(!this._domElement||!this._enabled)){if(this.mouseButtons.right===ot.ACTION.NONE){const F=p instanceof PointerEvent?p.pointerId:0,g=this._findPointerById(F);g&&this._disposePointer(g),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",d),this._domElement.ownerDocument.removeEventListener("mousemove",h),this._domElement.ownerDocument.removeEventListener("mouseup",E);return}p.preventDefault()}},T=p=>{if(this._enabled){if(Xs(this._activePointers,ht),this._getClientRect(this._elementRect),s.copy(ht),i.copy(ht),this._activePointers.length>=2){const F=ht.x-this._activePointers[1].clientX,g=ht.y-this._activePointers[1].clientY,_=Math.sqrt(F*F+g*g);n.set(0,_);const S=(this._activePointers[0].clientX+this._activePointers[1].clientX)*.5,w=(this._activePointers[0].clientY+this._activePointers[1].clientY)*.5;i.set(S,w)}if(this._state=0,!p)this._lockedPointer&&(this._state=this._state|this.mouseButtons.left);else if("pointerType"in p&&p.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else!this._lockedPointer&&(p.buttons&b.LEFT)===b.LEFT&&(this._state=this._state|this.mouseButtons.left),(p.buttons&b.MIDDLE)===b.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(p.buttons&b.RIGHT)===b.RIGHT&&(this._state=this._state|this.mouseButtons.right);((this._state&N.ROTATE)===N.ROTATE||(this._state&N.TOUCH_ROTATE)===N.TOUCH_ROTATE||(this._state&N.TOUCH_DOLLY_ROTATE)===N.TOUCH_DOLLY_ROTATE||(this._state&N.TOUCH_ZOOM_ROTATE)===N.TOUCH_ZOOM_ROTATE)&&(this._sphericalEnd.theta=this._spherical.theta,this._sphericalEnd.phi=this._spherical.phi,this._thetaVelocity.value=0,this._phiVelocity.value=0),((this._state&N.TRUCK)===N.TRUCK||(this._state&N.TOUCH_TRUCK)===N.TOUCH_TRUCK||(this._state&N.TOUCH_DOLLY_TRUCK)===N.TOUCH_DOLLY_TRUCK||(this._state&N.TOUCH_ZOOM_TRUCK)===N.TOUCH_ZOOM_TRUCK)&&(this._targetEnd.copy(this._target),this._targetVelocity.set(0,0,0)),((this._state&N.DOLLY)===N.DOLLY||(this._state&N.TOUCH_DOLLY)===N.TOUCH_DOLLY||(this._state&N.TOUCH_DOLLY_TRUCK)===N.TOUCH_DOLLY_TRUCK||(this._state&N.TOUCH_DOLLY_OFFSET)===N.TOUCH_DOLLY_OFFSET||(this._state&N.TOUCH_DOLLY_ROTATE)===N.TOUCH_DOLLY_ROTATE)&&(this._sphericalEnd.radius=this._spherical.radius,this._radiusVelocity.value=0),((this._state&N.ZOOM)===N.ZOOM||(this._state&N.TOUCH_ZOOM)===N.TOUCH_ZOOM||(this._state&N.TOUCH_ZOOM_TRUCK)===N.TOUCH_ZOOM_TRUCK||(this._state&N.TOUCH_ZOOM_OFFSET)===N.TOUCH_ZOOM_OFFSET||(this._state&N.TOUCH_ZOOM_ROTATE)===N.TOUCH_ZOOM_ROTATE)&&(this._zoomEnd=this._zoom,this._zoomVelocity.value=0),((this._state&N.OFFSET)===N.OFFSET||(this._state&N.TOUCH_OFFSET)===N.TOUCH_OFFSET||(this._state&N.TOUCH_DOLLY_OFFSET)===N.TOUCH_DOLLY_OFFSET||(this._state&N.TOUCH_ZOOM_OFFSET)===N.TOUCH_ZOOM_OFFSET)&&(this._focalOffsetEnd.copy(this._focalOffset),this._focalOffsetVelocity.set(0,0,0)),this.dispatchEvent({type:"controlstart"})}},m=()=>{if(!this._enabled||!this._dragNeedsUpdate)return;this._dragNeedsUpdate=!1,Xs(this._activePointers,ht);const p=this._domElement&&document.pointerLockElement===this._domElement?this._lockedPointer||this._activePointers[0]:null,F=p?-p.deltaX:i.x-ht.x,g=p?-p.deltaY:i.y-ht.y;if(i.copy(ht),((this._state&N.ROTATE)===N.ROTATE||(this._state&N.TOUCH_ROTATE)===N.TOUCH_ROTATE||(this._state&N.TOUCH_DOLLY_ROTATE)===N.TOUCH_DOLLY_ROTATE||(this._state&N.TOUCH_ZOOM_ROTATE)===N.TOUCH_ZOOM_ROTATE)&&(this._rotateInternal(F,g),this._isUserControllingRotate=!0),(this._state&N.DOLLY)===N.DOLLY||(this._state&N.ZOOM)===N.ZOOM){const _=this.dollyToCursor?(s.x-this._elementRect.x)/this._elementRect.width*2-1:0,S=this.dollyToCursor?(s.y-this._elementRect.y)/this._elementRect.height*-2+1:0,w=this.dollyDragInverted?-1:1;(this._state&N.DOLLY)===N.DOLLY?(this._dollyInternal(w*g*ds,_,S),this._isUserControllingDolly=!0):(this._zoomInternal(w*g*ds,_,S),this._isUserControllingZoom=!0)}if((this._state&N.TOUCH_DOLLY)===N.TOUCH_DOLLY||(this._state&N.TOUCH_ZOOM)===N.TOUCH_ZOOM||(this._state&N.TOUCH_DOLLY_TRUCK)===N.TOUCH_DOLLY_TRUCK||(this._state&N.TOUCH_ZOOM_TRUCK)===N.TOUCH_ZOOM_TRUCK||(this._state&N.TOUCH_DOLLY_OFFSET)===N.TOUCH_DOLLY_OFFSET||(this._state&N.TOUCH_ZOOM_OFFSET)===N.TOUCH_ZOOM_OFFSET||(this._state&N.TOUCH_DOLLY_ROTATE)===N.TOUCH_DOLLY_ROTATE||(this._state&N.TOUCH_ZOOM_ROTATE)===N.TOUCH_ZOOM_ROTATE){const _=ht.x-this._activePointers[1].clientX,S=ht.y-this._activePointers[1].clientY,w=Math.sqrt(_*_+S*S),y=n.y-w;n.set(0,w);const L=this.dollyToCursor?(i.x-this._elementRect.x)/this._elementRect.width*2-1:0,P=this.dollyToCursor?(i.y-this._elementRect.y)/this._elementRect.height*-2+1:0;(this._state&N.TOUCH_DOLLY)===N.TOUCH_DOLLY||(this._state&N.TOUCH_DOLLY_ROTATE)===N.TOUCH_DOLLY_ROTATE||(this._state&N.TOUCH_DOLLY_TRUCK)===N.TOUCH_DOLLY_TRUCK||(this._state&N.TOUCH_DOLLY_OFFSET)===N.TOUCH_DOLLY_OFFSET?(this._dollyInternal(y*ds,L,P),this._isUserControllingDolly=!0):(this._zoomInternal(y*ds,L,P),this._isUserControllingZoom=!0)}((this._state&N.TRUCK)===N.TRUCK||(this._state&N.TOUCH_TRUCK)===N.TOUCH_TRUCK||(this._state&N.TOUCH_DOLLY_TRUCK)===N.TOUCH_DOLLY_TRUCK||(this._state&N.TOUCH_ZOOM_TRUCK)===N.TOUCH_ZOOM_TRUCK)&&(this._truckInternal(F,g,!1),this._isUserControllingTruck=!0),((this._state&N.OFFSET)===N.OFFSET||(this._state&N.TOUCH_OFFSET)===N.TOUCH_OFFSET||(this._state&N.TOUCH_DOLLY_OFFSET)===N.TOUCH_DOLLY_OFFSET||(this._state&N.TOUCH_ZOOM_OFFSET)===N.TOUCH_ZOOM_OFFSET)&&(this._truckInternal(F,g,!0),this._isUserControllingOffset=!0),this.dispatchEvent({type:"control"})},f=()=>{Xs(this._activePointers,ht),i.copy(ht),this._dragNeedsUpdate=!1,(this._activePointers.length===0||this._activePointers.length===1&&this._activePointers[0]===this._lockedPointer)&&(this._isDragging=!1),this._activePointers.length===0&&this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("mousemove",h),this._domElement.ownerDocument.removeEventListener("pointerup",d),this._domElement.ownerDocument.removeEventListener("mouseup",E),this.dispatchEvent({type:"controlend"}))};this.lockPointer=()=>{!this._enabled||!this._domElement||(this.cancel(),this._lockedPointer={pointerId:-1,clientX:0,clientY:0,deltaX:0,deltaY:0,mouseButton:null},this._activePointers.push(this._lockedPointer),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",d),this._domElement.requestPointerLock(),this._domElement.ownerDocument.addEventListener("pointerlockchange",R),this._domElement.ownerDocument.addEventListener("pointerlockerror",A),this._domElement.ownerDocument.addEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",d),T())},this.unlockPointer=()=>{this._lockedPointer!==null&&(this._disposePointer(this._lockedPointer),this._lockedPointer=null),document.exitPointerLock(),this.cancel(),this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointerlockchange",R),this._domElement.ownerDocument.removeEventListener("pointerlockerror",A))};const R=()=>{this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement||this.unlockPointer()},A=()=>{this.unlockPointer()};this._addAllEventListeners=p=>{this._domElement=p,this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none",this._domElement.addEventListener("pointerdown",o),ya&&this._domElement.addEventListener("mousedown",r),this._domElement.addEventListener("pointercancel",d),this._domElement.addEventListener("wheel",u,{passive:!1}),this._domElement.addEventListener("contextmenu",C)},this._removeAllEventListeners=()=>{this._domElement&&(this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect="",this._domElement.removeEventListener("pointerdown",o),this._domElement.removeEventListener("mousedown",r),this._domElement.removeEventListener("pointercancel",d),this._domElement.removeEventListener("wheel",u,{passive:!1}),this._domElement.removeEventListener("contextmenu",C),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("mousemove",h),this._domElement.ownerDocument.removeEventListener("pointerup",d),this._domElement.ownerDocument.removeEventListener("mouseup",E),this._domElement.ownerDocument.removeEventListener("pointerlockchange",R),this._domElement.ownerDocument.removeEventListener("pointerlockerror",A))},this.cancel=()=>{this._state!==N.NONE&&(this._state=N.NONE,this._activePointers.length=0,f())},e&&this.connect(e),this.update(0)}get camera(){return this._camera}set camera(t){this._camera=t,this.updateCameraUp(),this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0}get enabled(){return this._enabled}set enabled(t){this._enabled=t,this._domElement&&(t?(this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none"):(this.cancel(),this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect=""))}get active(){return!this._hasRested}get currentAction(){return this._state}get distance(){return this._spherical.radius}set distance(t){this._spherical.radius===t&&this._sphericalEnd.radius===t||(this._spherical.radius=t,this._sphericalEnd.radius=t,this._needsUpdate=!0)}get azimuthAngle(){return this._spherical.theta}set azimuthAngle(t){this._spherical.theta===t&&this._sphericalEnd.theta===t||(this._spherical.theta=t,this._sphericalEnd.theta=t,this._needsUpdate=!0)}get polarAngle(){return this._spherical.phi}set polarAngle(t){this._spherical.phi===t&&this._sphericalEnd.phi===t||(this._spherical.phi=t,this._sphericalEnd.phi=t,this._needsUpdate=!0)}get boundaryEnclosesCamera(){return this._boundaryEnclosesCamera}set boundaryEnclosesCamera(t){this._boundaryEnclosesCamera=t,this._needsUpdate=!0}set interactiveArea(t){this._interactiveArea.width=mt(t.width,0,1),this._interactiveArea.height=mt(t.height,0,1),this._interactiveArea.x=mt(t.x,0,1-this._interactiveArea.width),this._interactiveArea.y=mt(t.y,0,1-this._interactiveArea.height)}addEventListener(t,e){super.addEventListener(t,e)}removeEventListener(t,e){super.removeEventListener(t,e)}rotate(t,e,s=!1){return this.rotateTo(this._sphericalEnd.theta+t,this._sphericalEnd.phi+e,s)}rotateAzimuthTo(t,e=!1){return this.rotateTo(t,this._sphericalEnd.phi,e)}rotatePolarTo(t,e=!1){return this.rotateTo(this._sphericalEnd.theta,t,e)}rotateTo(t,e,s=!1){this._isUserControllingRotate=!1;const i=mt(t,this.minAzimuthAngle,this.maxAzimuthAngle),n=mt(e,this.minPolarAngle,this.maxPolarAngle);this._sphericalEnd.theta=i,this._sphericalEnd.phi=n,this._sphericalEnd.makeSafe(),this._needsUpdate=!0,s||(this._spherical.theta=this._sphericalEnd.theta,this._spherical.phi=this._sphericalEnd.phi);const o=!s||V(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&V(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold);return this._createOnRestPromise(o)}dolly(t,e=!1){return this.dollyTo(this._sphericalEnd.radius-t,e)}dollyTo(t,e=!1){return this._isUserControllingDolly=!1,this._lastDollyDirection=ce.NONE,this._changedDolly=0,this._dollyToNoClamp(mt(t,this.minDistance,this.maxDistance),e)}_dollyToNoClamp(t,e=!1){const s=this._sphericalEnd.radius;if(this.colliderMeshes.length>=1){const n=this._collisionTest(),o=V(n,this._spherical.radius);if(!(s>t)&&o)return Promise.resolve();this._sphericalEnd.radius=Math.min(t,n)}else this._sphericalEnd.radius=t;this._needsUpdate=!0,e||(this._spherical.radius=this._sphericalEnd.radius);const i=!e||V(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(i)}dollyInFixed(t,e=!1){this._targetEnd.add(this._getCameraDirection(Ue).multiplyScalar(t)),e||this._target.copy(this._targetEnd);const s=!e||V(this._target.x,this._targetEnd.x,this.restThreshold)&&V(this._target.y,this._targetEnd.y,this.restThreshold)&&V(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(s)}zoom(t,e=!1){return this.zoomTo(this._zoomEnd+t,e)}zoomTo(t,e=!1){this._isUserControllingZoom=!1,this._zoomEnd=mt(t,this.minZoom,this.maxZoom),this._needsUpdate=!0,e||(this._zoom=this._zoomEnd);const s=!e||V(this._zoom,this._zoomEnd,this.restThreshold);return this._changedZoom=0,this._createOnRestPromise(s)}pan(t,e,s=!1){return console.warn("`pan` has been renamed to `truck`"),this.truck(t,e,s)}truck(t,e,s=!1){this._camera.updateMatrix(),Ot.setFromMatrixColumn(this._camera.matrix,0),_t.setFromMatrixColumn(this._camera.matrix,1),Ot.multiplyScalar(t),_t.multiplyScalar(-e);const i=B.copy(Ot).add(_t),n=G.copy(this._targetEnd).add(i);return this.moveTo(n.x,n.y,n.z,s)}forward(t,e=!1){B.setFromMatrixColumn(this._camera.matrix,0),B.crossVectors(this._camera.up,B),B.multiplyScalar(t);const s=G.copy(this._targetEnd).add(B);return this.moveTo(s.x,s.y,s.z,e)}elevate(t,e=!1){return B.copy(this._camera.up).multiplyScalar(t),this.moveTo(this._targetEnd.x+B.x,this._targetEnd.y+B.y,this._targetEnd.z+B.z,e)}moveTo(t,e,s,i=!1){this._isUserControllingTruck=!1;const n=B.set(t,e,s).sub(this._targetEnd);this._encloseToBoundary(this._targetEnd,n,this.boundaryFriction),this._needsUpdate=!0,i||this._target.copy(this._targetEnd);const o=!i||V(this._target.x,this._targetEnd.x,this.restThreshold)&&V(this._target.y,this._targetEnd.y,this.restThreshold)&&V(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(o)}lookInDirectionOf(t,e,s,i=!1){const n=B.set(t,e,s).sub(this._targetEnd).normalize().multiplyScalar(-this._sphericalEnd.radius);return this.setPosition(n.x,n.y,n.z,i)}fitToBox(t,e,{cover:s=!1,paddingLeft:i=0,paddingRight:n=0,paddingBottom:o=0,paddingTop:r=0}={}){const a=[],h=t.isBox3?Ee.copy(t):Ee.setFromObject(t);h.isEmpty()&&(console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"),Promise.resolve());const d=dn(this._sphericalEnd.theta,ln),E=dn(this._sphericalEnd.phi,ln);a.push(this.rotateTo(d,E,e));const l=B.setFromSpherical(this._sphericalEnd).normalize(),u=Tn.setFromUnitVectors(l,Zs),C=V(Math.abs(l.y),1);C&&u.multiply(js.setFromAxisAngle(Es,d)),u.multiply(this._yAxisUpSpaceInverse);const T=Cn.makeEmpty();G.copy(h.min).applyQuaternion(u),T.expandByPoint(G),G.copy(h.min).setX(h.max.x).applyQuaternion(u),T.expandByPoint(G),G.copy(h.min).setY(h.max.y).applyQuaternion(u),T.expandByPoint(G),G.copy(h.max).setZ(h.min.z).applyQuaternion(u),T.expandByPoint(G),G.copy(h.min).setZ(h.max.z).applyQuaternion(u),T.expandByPoint(G),G.copy(h.max).setY(h.min.y).applyQuaternion(u),T.expandByPoint(G),G.copy(h.max).setX(h.min.x).applyQuaternion(u),T.expandByPoint(G),G.copy(h.max).applyQuaternion(u),T.expandByPoint(G),T.min.x-=i,T.min.y-=o,T.max.x+=n,T.max.y+=r,u.setFromUnitVectors(Zs,l),C&&u.premultiply(js.invert()),u.premultiply(this._yAxisUpSpace);const m=T.getSize(B),f=T.getCenter(G).applyQuaternion(u);if(Ht(this._camera)){const R=this.getDistanceToFitBox(m.x,m.y,m.z,s);a.push(this.moveTo(f.x,f.y,f.z,e)),a.push(this.dollyTo(R,e)),a.push(this.setFocalOffset(0,0,0,e))}else if(vt(this._camera)){const R=this._camera,A=R.right-R.left,p=R.top-R.bottom,F=s?Math.max(A/m.x,p/m.y):Math.min(A/m.x,p/m.y);a.push(this.moveTo(f.x,f.y,f.z,e)),a.push(this.zoomTo(F,e)),a.push(this.setFocalOffset(0,0,0,e))}return Promise.all(a)}fitToSphere(t,e){const s=[],i=t instanceof v.Sphere?Qs.copy(t):ot.createBoundingSphere(t,Qs);if(s.push(this.moveTo(i.center.x,i.center.y,i.center.z,e)),Ht(this._camera)){const n=this.getDistanceToFitSphere(i.radius);s.push(this.dollyTo(n,e))}else if(vt(this._camera)){const n=this._camera.right-this._camera.left,o=this._camera.top-this._camera.bottom,r=2*i.radius,a=Math.min(n/r,o/r);s.push(this.zoomTo(a,e))}return s.push(this.setFocalOffset(0,0,0,e)),Promise.all(s)}setLookAt(t,e,s,i,n,o,r=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=ce.NONE,this._changedDolly=0;const a=G.set(i,n,o),h=B.set(t,e,s);this._targetEnd.copy(a),this._sphericalEnd.setFromVector3(h.sub(a).applyQuaternion(this._yAxisUpSpace)),this.normalizeRotations(),this._needsUpdate=!0,r||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const d=!r||V(this._target.x,this._targetEnd.x,this.restThreshold)&&V(this._target.y,this._targetEnd.y,this.restThreshold)&&V(this._target.z,this._targetEnd.z,this.restThreshold)&&V(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&V(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&V(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(d)}lerpLookAt(t,e,s,i,n,o,r,a,h,d,E,l,u,C=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=ce.NONE,this._changedDolly=0;const T=B.set(i,n,o),m=G.set(t,e,s);dt.setFromVector3(m.sub(T).applyQuaternion(this._yAxisUpSpace));const f=de.set(d,E,l),R=G.set(r,a,h);De.setFromVector3(R.sub(f).applyQuaternion(this._yAxisUpSpace)),this._targetEnd.copy(T.lerp(f,u));const A=De.theta-dt.theta,p=De.phi-dt.phi,F=De.radius-dt.radius;this._sphericalEnd.set(dt.radius+F*u,dt.phi+p*u,dt.theta+A*u),this.normalizeRotations(),this._needsUpdate=!0,C||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const g=!C||V(this._target.x,this._targetEnd.x,this.restThreshold)&&V(this._target.y,this._targetEnd.y,this.restThreshold)&&V(this._target.z,this._targetEnd.z,this.restThreshold)&&V(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&V(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&V(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(g)}setPosition(t,e,s,i=!1){return this.setLookAt(t,e,s,this._targetEnd.x,this._targetEnd.y,this._targetEnd.z,i)}setTarget(t,e,s,i=!1){const n=this.getPosition(B),o=this.setLookAt(n.x,n.y,n.z,t,e,s,i);return this._sphericalEnd.phi=mt(this._sphericalEnd.phi,this.minPolarAngle,this.maxPolarAngle),o}setFocalOffset(t,e,s,i=!1){this._isUserControllingOffset=!1,this._focalOffsetEnd.set(t,e,s),this._needsUpdate=!0,i||this._focalOffset.copy(this._focalOffsetEnd);const n=!i||V(this._focalOffset.x,this._focalOffsetEnd.x,this.restThreshold)&&V(this._focalOffset.y,this._focalOffsetEnd.y,this.restThreshold)&&V(this._focalOffset.z,this._focalOffsetEnd.z,this.restThreshold);return this._createOnRestPromise(n)}setOrbitPoint(t,e,s){this._camera.updateMatrixWorld(),Ot.setFromMatrixColumn(this._camera.matrixWorldInverse,0),_t.setFromMatrixColumn(this._camera.matrixWorldInverse,1),Wt.setFromMatrixColumn(this._camera.matrixWorldInverse,2);const i=B.set(t,e,s),n=i.distanceTo(this._camera.position),o=i.sub(this._camera.position);Ot.multiplyScalar(o.x),_t.multiplyScalar(o.y),Wt.multiplyScalar(o.z),B.copy(Ot).add(_t).add(Wt),B.z=B.z+n,this.dollyTo(n,!1),this.setFocalOffset(-B.x,B.y,-B.z,!1),this.moveTo(t,e,s,!1)}setBoundary(t){if(!t){this._boundary.min.set(-1/0,-1/0,-1/0),this._boundary.max.set(1/0,1/0,1/0),this._needsUpdate=!0;return}this._boundary.copy(t),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._needsUpdate=!0}setViewport(t,e,s,i){if(t===null){this._viewport=null;return}this._viewport=this._viewport||new v.Vector4,typeof t=="number"?this._viewport.set(t,e,s,i):this._viewport.copy(t)}getDistanceToFitBox(t,e,s,i=!1){if(ks(this._camera,"getDistanceToFitBox"))return this._spherical.radius;const n=t/e,o=this._camera.getEffectiveFOV()*Le,r=this._camera.aspect;return((i?n>r:n<r)?e:t/r)*.5/Math.tan(o*.5)+s*.5}getDistanceToFitSphere(t){if(ks(this._camera,"getDistanceToFitSphere"))return this._spherical.radius;const e=this._camera.getEffectiveFOV()*Le,s=Math.atan(Math.tan(e*.5)*this._camera.aspect)*2,i=1<this._camera.aspect?e:s;return t/Math.sin(i*.5)}getTarget(t,e=!0){return(t&&t.isVector3?t:new v.Vector3).copy(e?this._targetEnd:this._target)}getPosition(t,e=!0){return(t&&t.isVector3?t:new v.Vector3).setFromSpherical(e?this._sphericalEnd:this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(e?this._targetEnd:this._target)}getSpherical(t,e=!0){return(t&&t instanceof v.Spherical?t:new v.Spherical).copy(e?this._sphericalEnd:this._spherical)}getFocalOffset(t,e=!0){return(t&&t.isVector3?t:new v.Vector3).copy(e?this._focalOffsetEnd:this._focalOffset)}normalizeRotations(){this._sphericalEnd.theta=this._sphericalEnd.theta%le,this._sphericalEnd.theta<0&&(this._sphericalEnd.theta+=le),this._spherical.theta+=le*Math.round((this._sphericalEnd.theta-this._spherical.theta)/le)}reset(t=!1){if(!V(this._camera.up.x,this._cameraUp0.x)||!V(this._camera.up.y,this._cameraUp0.y)||!V(this._camera.up.z,this._cameraUp0.z)){this._camera.up.copy(this._cameraUp0);const s=this.getPosition(B);this.updateCameraUp(),this.setPosition(s.x,s.y,s.z)}const e=[this.setLookAt(this._position0.x,this._position0.y,this._position0.z,this._target0.x,this._target0.y,this._target0.z,t),this.setFocalOffset(this._focalOffset0.x,this._focalOffset0.y,this._focalOffset0.z,t),this.zoomTo(this._zoom0,t)];return Promise.all(e)}saveState(){this._cameraUp0.copy(this._camera.up),this.getTarget(this._target0),this.getPosition(this._position0),this._zoom0=this._zoom,this._focalOffset0.copy(this._focalOffset)}updateCameraUp(){this._yAxisUpSpace.setFromUnitVectors(this._camera.up,Es),this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert()}applyCameraUp(){const t=B.subVectors(this._target,this._camera.position).normalize(),e=G.crossVectors(t,this._camera.up);this._camera.up.crossVectors(e,t).normalize(),this._camera.updateMatrixWorld();const s=this.getPosition(B);this.updateCameraUp(),this.setPosition(s.x,s.y,s.z)}update(t){const e=this._sphericalEnd.theta-this._spherical.theta,s=this._sphericalEnd.phi-this._spherical.phi,i=this._sphericalEnd.radius-this._spherical.radius,n=In.subVectors(this._targetEnd,this._target),o=pn.subVectors(this._focalOffsetEnd,this._focalOffset),r=this._zoomEnd-this._zoom;if(k(e))this._thetaVelocity.value=0,this._spherical.theta=this._sphericalEnd.theta;else{const d=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.theta=ls(this._spherical.theta,this._sphericalEnd.theta,this._thetaVelocity,d,1/0,t),this._needsUpdate=!0}if(k(s))this._phiVelocity.value=0,this._spherical.phi=this._sphericalEnd.phi;else{const d=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.phi=ls(this._spherical.phi,this._sphericalEnd.phi,this._phiVelocity,d,1/0,t),this._needsUpdate=!0}if(k(i))this._radiusVelocity.value=0,this._spherical.radius=this._sphericalEnd.radius;else{const d=this._isUserControllingDolly?this.draggingSmoothTime:this.smoothTime;this._spherical.radius=ls(this._spherical.radius,this._sphericalEnd.radius,this._radiusVelocity,d,this.maxSpeed,t),this._needsUpdate=!0}if(k(n.x)&&k(n.y)&&k(n.z))this._targetVelocity.set(0,0,0),this._target.copy(this._targetEnd);else{const d=this._isUserControllingTruck?this.draggingSmoothTime:this.smoothTime;En(this._target,this._targetEnd,this._targetVelocity,d,this.maxSpeed,t,this._target),this._needsUpdate=!0}if(k(o.x)&&k(o.y)&&k(o.z))this._focalOffsetVelocity.set(0,0,0),this._focalOffset.copy(this._focalOffsetEnd);else{const d=this._isUserControllingOffset?this.draggingSmoothTime:this.smoothTime;En(this._focalOffset,this._focalOffsetEnd,this._focalOffsetVelocity,d,this.maxSpeed,t,this._focalOffset),this._needsUpdate=!0}if(k(r))this._zoomVelocity.value=0,this._zoom=this._zoomEnd;else{const d=this._isUserControllingZoom?this.draggingSmoothTime:this.smoothTime;this._zoom=ls(this._zoom,this._zoomEnd,this._zoomVelocity,d,1/0,t)}if(this.dollyToCursor){if(Ht(this._camera)&&this._changedDolly!==0){const d=this._spherical.radius-this._lastDistance,E=this._camera,l=this._getCameraDirection(Ue),u=B.copy(l).cross(E.up).normalize();u.lengthSq()===0&&(u.x=1);const C=G.crossVectors(u,l),T=this._sphericalEnd.radius*Math.tan(E.getEffectiveFOV()*Le*.5),m=(this._sphericalEnd.radius-d-this._sphericalEnd.radius)/this._sphericalEnd.radius,f=de.copy(this._targetEnd).add(u.multiplyScalar(this._dollyControlCoord.x*T*E.aspect)).add(C.multiplyScalar(this._dollyControlCoord.y*T)),R=B.copy(this._targetEnd).lerp(f,m),A=this._lastDollyDirection===ce.IN&&this._spherical.radius<=this.minDistance,p=this._lastDollyDirection===ce.OUT&&this.maxDistance<=this._spherical.radius;if(this.infinityDolly&&(A||p)){this._sphericalEnd.radius-=d,this._spherical.radius-=d;const g=G.copy(l).multiplyScalar(-d);R.add(g)}this._boundary.clampPoint(R,R);const F=G.subVectors(R,this._targetEnd);this._targetEnd.copy(R),this._target.add(F),this._changedDolly-=d,k(this._changedDolly)&&(this._changedDolly=0)}else if(vt(this._camera)&&this._changedZoom!==0){const d=this._zoom-this._lastZoom,E=this._camera,l=B.set(this._dollyControlCoord.x,this._dollyControlCoord.y,(E.near+E.far)/(E.near-E.far)).unproject(E),u=G.set(0,0,-1).applyQuaternion(E.quaternion),C=de.copy(l).add(u.multiplyScalar(-l.dot(E.up))),T=-(this._zoom-d-this._zoom)/this._zoom,m=this._getCameraDirection(Ue),f=this._targetEnd.dot(m),R=B.copy(this._targetEnd).lerp(C,T),A=R.dot(m),p=m.multiplyScalar(A-f);R.sub(p),this._boundary.clampPoint(R,R);const F=G.subVectors(R,this._targetEnd);this._targetEnd.copy(R),this._target.add(F),this._changedZoom-=d,k(this._changedZoom)&&(this._changedZoom=0)}}this._camera.zoom!==this._zoom&&(this._camera.zoom=this._zoom,this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0),this._dragNeedsUpdate=!0;const a=this._collisionTest();this._spherical.radius=Math.min(this._spherical.radius,a),this._spherical.makeSafe(),this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target),this._camera.lookAt(this._target),(!k(this._focalOffset.x)||!k(this._focalOffset.y)||!k(this._focalOffset.z))&&(this._camera.updateMatrixWorld(),Ot.setFromMatrixColumn(this._camera.matrix,0),_t.setFromMatrixColumn(this._camera.matrix,1),Wt.setFromMatrixColumn(this._camera.matrix,2),Ot.multiplyScalar(this._focalOffset.x),_t.multiplyScalar(-this._focalOffset.y),Wt.multiplyScalar(this._focalOffset.z),B.copy(Ot).add(_t).add(Wt),this._camera.position.add(B)),this._boundaryEnclosesCamera&&this._encloseToBoundary(this._camera.position.copy(this._target),B.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse),1);const h=this._needsUpdate;return h&&!this._updatedLastTime?(this._hasRested=!1,this.dispatchEvent({type:"wake"}),this.dispatchEvent({type:"update"})):h?(this.dispatchEvent({type:"update"}),k(e,this.restThreshold)&&k(s,this.restThreshold)&&k(i,this.restThreshold)&&k(n.x,this.restThreshold)&&k(n.y,this.restThreshold)&&k(n.z,this.restThreshold)&&k(o.x,this.restThreshold)&&k(o.y,this.restThreshold)&&k(o.z,this.restThreshold)&&k(r,this.restThreshold)&&!this._hasRested&&(this._hasRested=!0,this.dispatchEvent({type:"rest"}))):!h&&this._updatedLastTime&&this.dispatchEvent({type:"sleep"}),this._lastDistance=this._spherical.radius,this._lastZoom=this._zoom,this._updatedLastTime=h,this._needsUpdate=!1,h}toJSON(){return JSON.stringify({enabled:this._enabled,minDistance:this.minDistance,maxDistance:Pe(this.maxDistance),minZoom:this.minZoom,maxZoom:Pe(this.maxZoom),minPolarAngle:this.minPolarAngle,maxPolarAngle:Pe(this.maxPolarAngle),minAzimuthAngle:Pe(this.minAzimuthAngle),maxAzimuthAngle:Pe(this.maxAzimuthAngle),smoothTime:this.smoothTime,draggingSmoothTime:this.draggingSmoothTime,dollySpeed:this.dollySpeed,truckSpeed:this.truckSpeed,dollyToCursor:this.dollyToCursor,verticalDragToForward:this.verticalDragToForward,target:this._targetEnd.toArray(),position:B.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),zoom:this._zoomEnd,focalOffset:this._focalOffsetEnd.toArray(),target0:this._target0.toArray(),position0:this._position0.toArray(),zoom0:this._zoom0,focalOffset0:this._focalOffset0.toArray()})}fromJSON(t,e=!1){const s=JSON.parse(t);this.enabled=s.enabled,this.minDistance=s.minDistance,this.maxDistance=Me(s.maxDistance),this.minZoom=s.minZoom,this.maxZoom=Me(s.maxZoom),this.minPolarAngle=s.minPolarAngle,this.maxPolarAngle=Me(s.maxPolarAngle),this.minAzimuthAngle=Me(s.minAzimuthAngle),this.maxAzimuthAngle=Me(s.maxAzimuthAngle),this.smoothTime=s.smoothTime,this.draggingSmoothTime=s.draggingSmoothTime,this.dollySpeed=s.dollySpeed,this.truckSpeed=s.truckSpeed,this.dollyToCursor=s.dollyToCursor,this.verticalDragToForward=s.verticalDragToForward,this._target0.fromArray(s.target0),this._position0.fromArray(s.position0),this._zoom0=s.zoom0,this._focalOffset0.fromArray(s.focalOffset0),this.moveTo(s.target[0],s.target[1],s.target[2],e),dt.setFromVector3(B.fromArray(s.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)),this.rotateTo(dt.theta,dt.phi,e),this.dollyTo(dt.radius,e),this.zoomTo(s.zoom,e),this.setFocalOffset(s.focalOffset[0],s.focalOffset[1],s.focalOffset[2],e),this._needsUpdate=!0}connect(t){if(this._domElement){console.warn("camera-controls is already connected.");return}t.setAttribute("data-camera-controls-version",Na),this._addAllEventListeners(t),this._getClientRect(this._elementRect)}disconnect(){this.cancel(),this._removeAllEventListeners(),this._domElement&&(this._domElement.removeAttribute("data-camera-controls-version"),this._domElement=void 0)}dispose(){this.removeAllEventListeners(),this.disconnect()}_getTargetDirection(t){return t.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse)}_getCameraDirection(t){return this._getTargetDirection(t).negate()}_findPointerById(t){return this._activePointers.find(e=>e.pointerId===t)}_findPointerByMouseButton(t){return this._activePointers.find(e=>e.mouseButton===t)}_disposePointer(t){this._activePointers.splice(this._activePointers.indexOf(t),1)}_encloseToBoundary(t,e,s){const i=e.lengthSq();if(i===0)return t;const n=G.copy(e).add(t),o=this._boundary.clampPoint(n,de).sub(n),r=o.lengthSq();if(r===0)return t.add(e);if(r===i)return t;if(s===0)return t.add(e).add(o);{const a=1+s*r/e.dot(o);return t.add(G.copy(e).multiplyScalar(a)).add(o.multiplyScalar(1-s))}}_updateNearPlaneCorners(){if(Ht(this._camera)){const t=this._camera,e=t.near,s=t.getEffectiveFOV()*Le,i=Math.tan(s*.5)*e,n=i*t.aspect;this._nearPlaneCorners[0].set(-n,-i,0),this._nearPlaneCorners[1].set(n,-i,0),this._nearPlaneCorners[2].set(n,i,0),this._nearPlaneCorners[3].set(-n,i,0)}else if(vt(this._camera)){const t=this._camera,e=1/t.zoom,s=t.left*e,i=t.right*e,n=t.top*e,o=t.bottom*e;this._nearPlaneCorners[0].set(s,n,0),this._nearPlaneCorners[1].set(i,n,0),this._nearPlaneCorners[2].set(i,o,0),this._nearPlaneCorners[3].set(s,o,0)}}_collisionTest(){let t=1/0;if(!(this.colliderMeshes.length>=1)||ks(this._camera,"_collisionTest"))return t;const e=this._getTargetDirection(Ue);qs.lookAt(un,e,this._camera.up);for(let s=0;s<4;s++){const i=G.copy(this._nearPlaneCorners[s]);i.applyMatrix4(qs);const n=de.addVectors(this._target,i);us.set(n,e),us.far=this._spherical.radius+1;const o=us.intersectObjects(this.colliderMeshes);o.length!==0&&o[0].distance<t&&(t=o[0].distance)}return t}_getClientRect(t){if(!this._domElement)return;const e=this._domElement.getBoundingClientRect();return t.x=e.left,t.y=e.top,this._viewport?(t.x+=this._viewport.x,t.y+=e.height-this._viewport.w-this._viewport.y,t.width=this._viewport.z,t.height=this._viewport.w):(t.width=e.width,t.height=e.height),t}_createOnRestPromise(t){return t?Promise.resolve():(this._hasRested=!1,this.dispatchEvent({type:"transitionstart"}),new Promise(e=>{const s=()=>{this.removeEventListener("rest",s),e()};this.addEventListener("rest",s)}))}_addAllEventListeners(t){}_removeAllEventListeners(){}get dampingFactor(){return console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead."),0}set dampingFactor(t){console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.")}get draggingDampingFactor(){return console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead."),0}set draggingDampingFactor(t){console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.")}static createBoundingSphere(t,e=new v.Sphere){const s=e,i=s.center;Ee.makeEmpty(),t.traverseVisible(o=>{o.isMesh&&Ee.expandByObject(o)}),Ee.getCenter(i);let n=0;return t.traverseVisible(o=>{if(!o.isMesh)return;const r=o,a=r.geometry.clone();a.applyMatrix4(r.matrixWorld);const h=a.attributes.position;for(let d=0,E=h.count;d<E;d++)B.fromBufferAttribute(h,d),n=Math.max(n,i.distanceToSquared(B))}),s.radius=Math.sqrt(n),s}}class Ve extends ca{constructor(t){super(t),I(this,"onBeforeUpdate",new M),I(this,"onAfterUpdate",new M),I(this,"onAspectUpdated",new M),I(this,"onDisposed",new M),I(this,"three"),I(this,"_allControls",new Map),I(this,"updateAspect",()=>{var e;if(!(!this.currentWorld||!this.currentWorld.renderer)){if(this.three instanceof Ti){this.onAspectUpdated.trigger();return}if((e=this.currentWorld.renderer)!=null&&e.isResizeable()){const s=this.currentWorld.renderer.getSize();this.three.aspect=s.width/s.height,this.three.updateProjectionMatrix(),this.onAspectUpdated.trigger()}}}),this.three=this.setupCamera(),this.setupEvents(!0),this.onWorldChanged.add(({action:e,world:s})=>{if(e==="added"){const i=this.newCameraControls();this._allControls.set(s.uuid,i)}if(e==="removed"){const i=this._allControls.get(s.uuid);i&&(i.dispose(),this._allControls.delete(s.uuid))}})}get controls(){if(!this.currentWorld)throw new Error("This camera needs a world to work!");const t=this._allControls.get(this.currentWorld.uuid);if(!t)throw new Error("Controls not found!");return t}get enabled(){return this.currentWorld===null?!1:this.controls.enabled}set enabled(t){this.currentWorld!==null&&(this.controls.enabled=t)}dispose(){this.setupEvents(!1),this.onAspectUpdated.reset(),this.onBeforeUpdate.reset(),this.onAfterUpdate.reset(),this.three.removeFromParent(),this.onDisposed.trigger(),this.onDisposed.reset();for(const[t,e]of this._allControls)e.dispose()}update(t){this.enabled&&(this.onBeforeUpdate.trigger(this),this.controls.update(t),this.onAfterUpdate.trigger(this))}setupCamera(){const t=window.innerWidth/window.innerHeight,e=new yo(60,t,1,1e3);return e.position.set(50,50,50),e.lookAt(new O(0,0,0)),e}newCameraControls(){if(!this.currentWorld)throw new Error("This camera needs a world to work!");if(!this.currentWorld.renderer)throw new Error("This camera needs a renderer to work!");ot.install({THREE:Ve.getSubsetOfThree()});const{domElement:t}=this.currentWorld.renderer.three,e=new ot(this.three,t);return e.smoothTime=.2,e.dollyToCursor=!0,e.infinityDolly=!0,e}setupEvents(t){t?window.addEventListener("resize",this.updateAspect):window.removeEventListener("resize",this.updateAspect)}static getSubsetOfThree(){return{MOUSE:Lo,Vector2:At,Vector3:O,Vector4:Po,Quaternion:Rt,Matrix4:H,Spherical:Mo,Box3:st,Sphere:Os,Raycaster:pi,MathUtils:_n}}}const kn=class Zn extends J{constructor(t){super(t),I(this,"onAfterUpdate",new M),I(this,"onBeforeUpdate",new M),I(this,"onDisposed",new M),I(this,"onWorldCreated",new M),I(this,"onWorldDeleted",new M),I(this,"list",new Map),I(this,"enabled",!0),t.add(Zn.uuid,this)}create(){const t=new _a(this.components),e=t.uuid;if(this.list.has(e))throw new Error("There is already a world with this name!");return this.list.set(e,t),this.onWorldCreated.trigger(t),t}delete(t){if(!this.list.has(t.uuid))throw new Error("The provided world is not found in the list!");const e=t.uuid;this.list.delete(t.uuid),t.dispose(),this.onWorldDeleted.trigger(e)}dispose(){this.enabled=!1;for(const[t,e]of this.list)e.dispose();this.list.clear(),this.onDisposed.trigger()}update(t){if(this.enabled)for(const[e,s]of this.list)s.update(t)}};I(kn,"uuid","fdb61dc4-2ec1-4966-b83d-54ea795fad4a");let La=kn;class Pa{constructor(t,e,s){I(this,"onDisposed",new M),I(this,"world"),I(this,"components"),I(this,"three"),I(this,"_fade",3),I(this,"updateZoom",()=>{this.world.camera instanceof Ve&&(this.material.uniforms.uZoom.value=this.world.camera.three.zoom)}),this.world=e;const{color:i,size1:n,size2:o,distance:r}=s;this.components=t;const a=new _i(2,2,1,1),h=new Yo({side:He,uniforms:{uSize1:{value:n},uSize2:{value:o},uColor:{value:i},uDistance:{value:r},uFade:{value:this._fade},uZoom:{value:1}},transparent:!0,vertexShader:`
            
            varying vec3 worldPosition;
            
            uniform float uDistance;
            
            void main() {
            
                    vec3 pos = position.xzy * uDistance;
                    pos.xz += cameraPosition.xz;
                    
                    worldPosition = pos;
                    
                    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);
            
            }
            `,fragmentShader:`
            
            varying vec3 worldPosition;
            
            uniform float uZoom;
            uniform float uFade;
            uniform float uSize1;
            uniform float uSize2;
            uniform vec3 uColor;
            uniform float uDistance;
                
                
                
                float getGrid(float size) {
                
                    vec2 r = worldPosition.xz / size;
                    
                    
                    vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);
                    float line = min(grid.x, grid.y);
                    
                
                    return 1.0 - min(line, 1.0);
                }
                
            void main() {
            
                    
                    float d = 1.0 - min(distance(cameraPosition.xz, worldPosition.xz) / uDistance, 1.0);
                    
                    float g1 = getGrid(uSize1);
                    float g2 = getGrid(uSize2);
                    
                    // Ortho camera fades the grid away when zooming out
                    float minZoom = step(0.2, uZoom);
                    float zoomFactor = pow(min(uZoom, 1.), 2.) * minZoom;
                    
                    gl_FragColor = vec4(uColor.rgb, mix(g2, g1, g1) * pow(d, uFade));
                    gl_FragColor.a = mix(0.5 * gl_FragColor.a, gl_FragColor.a, g2) * zoomFactor;
                    
                    if ( gl_FragColor.a <= 0.0 ) discard;
                    
            
            }
            
            `,extensions:{derivatives:!0}});this.three=new D(a,h),this.three.frustumCulled=!1,e.scene.three.add(this.three),this.setupEvents(!0)}get visible(){return this.three.visible}set visible(t){t?this.world.scene.three.add(this.three):this.three.removeFromParent()}get material(){return this.three.material}get fade(){return this._fade===3}set fade(t){this._fade=t?3:0,this.material.uniforms.uFade.value=this._fade}dispose(){this.setupEvents(!1),this.components.get(me).destroy(this.three),this.onDisposed.trigger(),this.onDisposed.reset(),this.world=null,this.components=null}setupEvents(t){if(this.world.isDisposing||!(this.world.camera instanceof Ve))return;const e=this.world.camera.controls;t?e.addEventListener("update",this.updateZoom):e.removeEventListener("update",this.updateZoom)}}const Qn=class jn extends J{constructor(t){super(t),I(this,"list",new Map),I(this,"config",{color:new Qt(12303291),size1:1,size2:10,distance:500}),I(this,"onDisposed",new M),I(this,"enabled",!0),t.add(jn.uuid,this)}create(t){if(this.list.has(t.uuid))throw new Error("This world already has a grid!");const e=new Pa(this.components,t,this.config);return this.list.set(t.uuid,e),t.onDisposed.add(()=>{this.delete(t)}),e}delete(t){const e=this.list.get(t.uuid);e&&e.dispose(),this.list.delete(t.uuid)}dispose(){for(const[t,e]of this.list)e.dispose();this.list.clear(),this.onDisposed.trigger(),this.onDisposed.reset()}};I(Qn,"uuid","d1e814d5-b81c-4452-87a2-f039375e0489");let ch=Qn;const Xt=new pi,nt=new O,xt=new O,Q=new Rt,mn={X:new O(1,0,0),Y:new O(0,1,0),Z:new O(0,0,1)},Ks={type:"change"},fn={type:"mouseDown"},Rn={type:"mouseUp",mode:null},Fn={type:"objectChange"};class Ma extends As{constructor(t,e){super(),e===void 0&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),e=document),this.isTransformControls=!0,this.visible=!1,this.domElement=e,this.domElement.style.touchAction="none";const s=new Ba;this._gizmo=s,this.add(s);const i=new Ya;this._plane=i,this.add(i);const n=this;function o(R,A){let p=A;Object.defineProperty(n,R,{get:function(){return p!==void 0?p:A},set:function(F){p!==F&&(p=F,i[R]=F,s[R]=F,n.dispatchEvent({type:R+"-changed",value:F}),n.dispatchEvent(Ks))}}),n[R]=A,i[R]=A,s[R]=A}o("camera",t),o("object",void 0),o("enabled",!0),o("axis",null),o("mode","translate"),o("translationSnap",null),o("rotationSnap",null),o("scaleSnap",null),o("space","world"),o("size",1),o("dragging",!1),o("showX",!0),o("showY",!0),o("showZ",!0);const r=new O,a=new O,h=new Rt,d=new Rt,E=new O,l=new Rt,u=new O,C=new O,T=new O,m=0,f=new O;o("worldPosition",r),o("worldPositionStart",a),o("worldQuaternion",h),o("worldQuaternionStart",d),o("cameraPosition",E),o("cameraQuaternion",l),o("pointStart",u),o("pointEnd",C),o("rotationAxis",T),o("rotationAngle",m),o("eye",f),this._offset=new O,this._startNorm=new O,this._endNorm=new O,this._cameraScale=new O,this._parentPosition=new O,this._parentQuaternion=new Rt,this._parentQuaternionInv=new Rt,this._parentScale=new O,this._worldScaleStart=new O,this._worldQuaternionInv=new Rt,this._worldScale=new O,this._positionStart=new O,this._quaternionStart=new Rt,this._scaleStart=new O,this._getPointer=Ua.bind(this),this._onPointerDown=xa.bind(this),this._onPointerHover=Da.bind(this),this._onPointerMove=va.bind(this),this._onPointerUp=ba.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(){this.object!==void 0&&(this.object.updateMatrixWorld(),this.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.camera.isOrthographicCamera?this.camera.getWorldDirection(this.eye).negate():this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(this)}pointerHover(t){if(this.object===void 0||this.dragging===!0)return;Xt.setFromCamera(t,this.camera);const e=$s(this._gizmo.picker[this.mode],Xt);e?this.axis=e.object.name:this.axis=null}pointerDown(t){if(!(this.object===void 0||this.dragging===!0||t.button!==0)&&this.axis!==null){Xt.setFromCamera(t,this.camera);const e=$s(this._plane,Xt,!0);e&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(e.point).sub(this.worldPositionStart)),this.dragging=!0,fn.mode=this.mode,this.dispatchEvent(fn)}}pointerMove(t){const e=this.axis,s=this.mode,i=this.object;let n=this.space;if(s==="scale"?n="local":(e==="E"||e==="XYZE"||e==="XYZ")&&(n="world"),i===void 0||e===null||this.dragging===!1||t.button!==-1)return;Xt.setFromCamera(t,this.camera);const o=$s(this._plane,Xt,!0);if(o){if(this.pointEnd.copy(o.point).sub(this.worldPositionStart),s==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),n==="local"&&e!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),e.indexOf("X")===-1&&(this._offset.x=0),e.indexOf("Y")===-1&&(this._offset.y=0),e.indexOf("Z")===-1&&(this._offset.z=0),n==="local"&&e!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),i.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(n==="local"&&(i.position.applyQuaternion(Q.copy(this._quaternionStart).invert()),e.search("X")!==-1&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),e.search("Y")!==-1&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),e.search("Z")!==-1&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.position.applyQuaternion(this._quaternionStart)),n==="world"&&(i.parent&&i.position.add(nt.setFromMatrixPosition(i.parent.matrixWorld)),e.search("X")!==-1&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),e.search("Y")!==-1&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),e.search("Z")!==-1&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.parent&&i.position.sub(nt.setFromMatrixPosition(i.parent.matrixWorld))));else if(s==="scale"){if(e.search("XYZ")!==-1){let r=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(r*=-1),xt.set(r,r,r)}else nt.copy(this.pointStart),xt.copy(this.pointEnd),nt.applyQuaternion(this._worldQuaternionInv),xt.applyQuaternion(this._worldQuaternionInv),xt.divide(nt),e.search("X")===-1&&(xt.x=1),e.search("Y")===-1&&(xt.y=1),e.search("Z")===-1&&(xt.z=1);i.scale.copy(this._scaleStart).multiply(xt),this.scaleSnap&&(e.search("X")!==-1&&(i.scale.x=Math.round(i.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),e.search("Y")!==-1&&(i.scale.y=Math.round(i.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),e.search("Z")!==-1&&(i.scale.z=Math.round(i.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(s==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const r=20/this.worldPosition.distanceTo(nt.setFromMatrixPosition(this.camera.matrixWorld));let a=!1;e==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(nt.copy(this.rotationAxis).cross(this.eye))*r):(e==="X"||e==="Y"||e==="Z")&&(this.rotationAxis.copy(mn[e]),nt.copy(mn[e]),n==="local"&&nt.applyQuaternion(this.worldQuaternion),nt.cross(this.eye),nt.length()===0?a=!0:this.rotationAngle=this._offset.dot(nt.normalize())*r),(e==="E"||a)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),n==="local"&&e!=="E"&&e!=="XYZE"?(i.quaternion.copy(this._quaternionStart),i.quaternion.multiply(Q.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),i.quaternion.copy(Q.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),i.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(Ks),this.dispatchEvent(Fn)}}pointerUp(t){t.button===0&&(this.dragging&&this.axis!==null&&(Rn.mode=this.mode,this.dispatchEvent(Rn)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse(function(t){t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()})}attach(t){return this.object=t,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(Ks),this.dispatchEvent(Fn),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Xt}getMode(){return this.mode}setMode(t){this.mode=t}setTranslationSnap(t){this.translationSnap=t}setRotationSnap(t){this.rotationSnap=t}setScaleSnap(t){this.scaleSnap=t}setSize(t){this.size=t}setSpace(t){this.space=t}}function Ua(c){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:c.button};{const t=this.domElement.getBoundingClientRect();return{x:(c.clientX-t.left)/t.width*2-1,y:-(c.clientY-t.top)/t.height*2+1,button:c.button}}}function Da(c){if(this.enabled)switch(c.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(c));break}}function xa(c){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(c.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(c)),this.pointerDown(this._getPointer(c)))}function va(c){this.enabled&&this.pointerMove(this._getPointer(c))}function ba(c){this.enabled&&(this.domElement.releasePointerCapture(c.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(c)))}function $s(c,t,e){const s=t.intersectObject(c,!0);for(let i=0;i<s.length;i++)if(s[i].object.visible||e)return s[i];return!1}const Is=new So,X=new O(0,1,0),An=new O(0,0,0),gn=new H,ps=new Rt,Rs=new Rt,St=new O,On=new H,be=new O(1,0,0),kt=new O(0,1,0),Be=new O(0,0,1),Cs=new O,xe=new O,ve=new O;class Ba extends As{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const t=new Te({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),e=new Dn({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),s=t.clone();s.opacity=.15;const i=e.clone();i.opacity=.5;const n=t.clone();n.color.setHex(16711680);const o=t.clone();o.color.setHex(65280);const r=t.clone();r.color.setHex(255);const a=t.clone();a.color.setHex(16711680),a.opacity=.5;const h=t.clone();h.color.setHex(65280),h.opacity=.5;const d=t.clone();d.color.setHex(255),d.opacity=.5;const E=t.clone();E.opacity=.25;const l=t.clone();l.color.setHex(16776960),l.opacity=.25,t.clone().color.setHex(16776960);const u=t.clone();u.color.setHex(7895160);const C=new rt(0,.04,.1,12);C.translate(0,.05,0);const T=new it(.08,.08,.08);T.translate(0,.04,0);const m=new ze;m.setAttribute("position",new Yi([0,0,0,1,0,0],3));const f=new rt(.0075,.0075,.5,3);f.translate(0,.25,0);function R(x,Y){const z=new ge(x,.0075,3,64,Y*Math.PI*2);return z.rotateY(Math.PI/2),z.rotateX(Math.PI/2),z}function A(){const x=new ze;return x.setAttribute("position",new Yi([0,0,0,1,1,1],3)),x}const p={X:[[new D(C,n),[.5,0,0],[0,0,-Math.PI/2]],[new D(C,n),[-.5,0,0],[0,0,Math.PI/2]],[new D(f,n),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new D(C,o),[0,.5,0]],[new D(C,o),[0,-.5,0],[Math.PI,0,0]],[new D(f,o)]],Z:[[new D(C,r),[0,0,.5],[Math.PI/2,0,0]],[new D(C,r),[0,0,-.5],[-Math.PI/2,0,0]],[new D(f,r),null,[Math.PI/2,0,0]]],XYZ:[[new D(new Ze(.1,0),E.clone()),[0,0,0]]],XY:[[new D(new it(.15,.15,.01),d.clone()),[.15,.15,0]]],YZ:[[new D(new it(.15,.15,.01),a.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new D(new it(.15,.15,.01),h.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},F={X:[[new D(new rt(.2,0,.6,4),s),[.3,0,0],[0,0,-Math.PI/2]],[new D(new rt(.2,0,.6,4),s),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new D(new rt(.2,0,.6,4),s),[0,.3,0]],[new D(new rt(.2,0,.6,4),s),[0,-.3,0],[0,0,Math.PI]]],Z:[[new D(new rt(.2,0,.6,4),s),[0,0,.3],[Math.PI/2,0,0]],[new D(new rt(.2,0,.6,4),s),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new D(new Ze(.2,0),s)]],XY:[[new D(new it(.2,.2,.01),s),[.15,.15,0]]],YZ:[[new D(new it(.2,.2,.01),s),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new D(new it(.2,.2,.01),s),[.15,0,.15],[-Math.PI/2,0,0]]]},g={START:[[new D(new Ze(.01,2),i),null,null,null,"helper"]],END:[[new D(new Ze(.01,2),i),null,null,null,"helper"]],DELTA:[[new Ut(A(),i),null,null,null,"helper"]],X:[[new Ut(m,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Ut(m,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Ut(m,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},_={XYZE:[[new D(R(.5,1),u),null,[0,Math.PI/2,0]]],X:[[new D(R(.5,.5),n)]],Y:[[new D(R(.5,.5),o),null,[0,0,-Math.PI/2]]],Z:[[new D(R(.5,.5),r),null,[0,Math.PI/2,0]]],E:[[new D(R(.75,1),l),null,[0,Math.PI/2,0]]]},S={AXIS:[[new Ut(m,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},w={XYZE:[[new D(new Qo(.25,10,8),s)]],X:[[new D(new ge(.5,.1,4,24),s),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new D(new ge(.5,.1,4,24),s),[0,0,0],[Math.PI/2,0,0]]],Z:[[new D(new ge(.5,.1,4,24),s),[0,0,0],[0,0,-Math.PI/2]]],E:[[new D(new ge(.75,.1,2,24),s)]]},y={X:[[new D(T,n),[.5,0,0],[0,0,-Math.PI/2]],[new D(f,n),[0,0,0],[0,0,-Math.PI/2]],[new D(T,n),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new D(T,o),[0,.5,0]],[new D(f,o)],[new D(T,o),[0,-.5,0],[0,0,Math.PI]]],Z:[[new D(T,r),[0,0,.5],[Math.PI/2,0,0]],[new D(f,r),[0,0,0],[Math.PI/2,0,0]],[new D(T,r),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new D(new it(.15,.15,.01),d),[.15,.15,0]]],YZ:[[new D(new it(.15,.15,.01),a),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new D(new it(.15,.15,.01),h),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new D(new it(.1,.1,.1),E.clone())]]},L={X:[[new D(new rt(.2,0,.6,4),s),[.3,0,0],[0,0,-Math.PI/2]],[new D(new rt(.2,0,.6,4),s),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new D(new rt(.2,0,.6,4),s),[0,.3,0]],[new D(new rt(.2,0,.6,4),s),[0,-.3,0],[0,0,Math.PI]]],Z:[[new D(new rt(.2,0,.6,4),s),[0,0,.3],[Math.PI/2,0,0]],[new D(new rt(.2,0,.6,4),s),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new D(new it(.2,.2,.01),s),[.15,.15,0]]],YZ:[[new D(new it(.2,.2,.01),s),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new D(new it(.2,.2,.01),s),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new D(new it(.2,.2,.2),s),[0,0,0]]]},P={X:[[new Ut(m,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Ut(m,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Ut(m,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function U(x){const Y=new As;for(const z in x)for(let tt=x[z].length;tt--;){const W=x[z][tt][0].clone(),Mt=x[z][tt][1],zt=x[z][tt][2],Gt=x[z][tt][3],We=x[z][tt][4];W.name=z,W.tag=We,Mt&&W.position.set(Mt[0],Mt[1],Mt[2]),zt&&W.rotation.set(zt[0],zt[1],zt[2]),Gt&&W.scale.set(Gt[0],Gt[1],Gt[2]),W.updateMatrix();const Fe=W.geometry.clone();Fe.applyMatrix4(W.matrix),W.geometry=Fe,W.renderOrder=1/0,W.position.set(0,0,0),W.rotation.set(0,0,0),W.scale.set(1,1,1),Y.add(W)}return Y}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=U(p)),this.add(this.gizmo.rotate=U(_)),this.add(this.gizmo.scale=U(y)),this.add(this.picker.translate=U(F)),this.add(this.picker.rotate=U(w)),this.add(this.picker.scale=U(L)),this.add(this.helper.translate=U(g)),this.add(this.helper.rotate=U(S)),this.add(this.helper.scale=U(P)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(t){const e=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:Rs;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let s=[];s=s.concat(this.picker[this.mode].children),s=s.concat(this.gizmo[this.mode].children),s=s.concat(this.helper[this.mode].children);for(let i=0;i<s.length;i++){const n=s[i];n.visible=!0,n.rotation.set(0,0,0),n.position.copy(this.worldPosition);let o;if(this.camera.isOrthographicCamera?o=(this.camera.top-this.camera.bottom)/this.camera.zoom:o=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),n.scale.set(1,1,1).multiplyScalar(o*this.size/4),n.tag==="helper"){n.visible=!1,n.name==="AXIS"?(n.visible=!!this.axis,this.axis==="X"&&(Q.setFromEuler(Is.set(0,0,0)),n.quaternion.copy(e).multiply(Q),Math.abs(X.copy(be).applyQuaternion(e).dot(this.eye))>.9&&(n.visible=!1)),this.axis==="Y"&&(Q.setFromEuler(Is.set(0,0,Math.PI/2)),n.quaternion.copy(e).multiply(Q),Math.abs(X.copy(kt).applyQuaternion(e).dot(this.eye))>.9&&(n.visible=!1)),this.axis==="Z"&&(Q.setFromEuler(Is.set(0,Math.PI/2,0)),n.quaternion.copy(e).multiply(Q),Math.abs(X.copy(Be).applyQuaternion(e).dot(this.eye))>.9&&(n.visible=!1)),this.axis==="XYZE"&&(Q.setFromEuler(Is.set(0,Math.PI/2,0)),X.copy(this.rotationAxis),n.quaternion.setFromRotationMatrix(gn.lookAt(An,X,kt)),n.quaternion.multiply(Q),n.visible=this.dragging),this.axis==="E"&&(n.visible=!1)):n.name==="START"?(n.position.copy(this.worldPositionStart),n.visible=this.dragging):n.name==="END"?(n.position.copy(this.worldPosition),n.visible=this.dragging):n.name==="DELTA"?(n.position.copy(this.worldPositionStart),n.quaternion.copy(this.worldQuaternionStart),nt.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),nt.applyQuaternion(this.worldQuaternionStart.clone().invert()),n.scale.copy(nt),n.visible=this.dragging):(n.quaternion.copy(e),this.dragging?n.position.copy(this.worldPositionStart):n.position.copy(this.worldPosition),this.axis&&(n.visible=this.axis.search(n.name)!==-1));continue}n.quaternion.copy(e),this.mode==="translate"||this.mode==="scale"?(n.name==="X"&&Math.abs(X.copy(be).applyQuaternion(e).dot(this.eye))>.99&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),n.name==="Y"&&Math.abs(X.copy(kt).applyQuaternion(e).dot(this.eye))>.99&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),n.name==="Z"&&Math.abs(X.copy(Be).applyQuaternion(e).dot(this.eye))>.99&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),n.name==="XY"&&Math.abs(X.copy(Be).applyQuaternion(e).dot(this.eye))<.2&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),n.name==="YZ"&&Math.abs(X.copy(be).applyQuaternion(e).dot(this.eye))<.2&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),n.name==="XZ"&&Math.abs(X.copy(kt).applyQuaternion(e).dot(this.eye))<.2&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1)):this.mode==="rotate"&&(ps.copy(e),X.copy(this.eye).applyQuaternion(Q.copy(e).invert()),n.name.search("E")!==-1&&n.quaternion.setFromRotationMatrix(gn.lookAt(this.eye,An,kt)),n.name==="X"&&(Q.setFromAxisAngle(be,Math.atan2(-X.y,X.z)),Q.multiplyQuaternions(ps,Q),n.quaternion.copy(Q)),n.name==="Y"&&(Q.setFromAxisAngle(kt,Math.atan2(X.x,X.z)),Q.multiplyQuaternions(ps,Q),n.quaternion.copy(Q)),n.name==="Z"&&(Q.setFromAxisAngle(Be,Math.atan2(X.y,X.x)),Q.multiplyQuaternions(ps,Q),n.quaternion.copy(Q))),n.visible=n.visible&&(n.name.indexOf("X")===-1||this.showX),n.visible=n.visible&&(n.name.indexOf("Y")===-1||this.showY),n.visible=n.visible&&(n.name.indexOf("Z")===-1||this.showZ),n.visible=n.visible&&(n.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),n.material._color=n.material._color||n.material.color.clone(),n.material._opacity=n.material._opacity||n.material.opacity,n.material.color.copy(n.material._color),n.material.opacity=n.material._opacity,this.enabled&&this.axis&&(n.name===this.axis||this.axis.split("").some(function(r){return n.name===r}))&&(n.material.color.setHex(16776960),n.material.opacity=1)}super.updateMatrixWorld(t)}}class Ya extends D{constructor(){super(new _i(1e5,1e5,2,2),new Te({visible:!1,wireframe:!0,side:He,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(t){let e=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(e="local"),Cs.copy(be).applyQuaternion(e==="local"?this.worldQuaternion:Rs),xe.copy(kt).applyQuaternion(e==="local"?this.worldQuaternion:Rs),ve.copy(Be).applyQuaternion(e==="local"?this.worldQuaternion:Rs),X.copy(xe),this.mode){case"translate":case"scale":switch(this.axis){case"X":X.copy(this.eye).cross(Cs),St.copy(Cs).cross(X);break;case"Y":X.copy(this.eye).cross(xe),St.copy(xe).cross(X);break;case"Z":X.copy(this.eye).cross(ve),St.copy(ve).cross(X);break;case"XY":St.copy(ve);break;case"YZ":St.copy(Cs);break;case"XZ":X.copy(ve),St.copy(xe);break;case"XYZ":case"E":St.set(0,0,0);break}break;case"rotate":default:St.set(0,0,0)}St.length()===0?this.quaternion.copy(this.cameraQuaternion):(On.lookAt(nt.set(0,0,0),St,X),this.quaternion.setFromRotationMatrix(On)),super.updateMatrixWorld(t)}}class Mi{constructor(t,e,s,i,n,o=5,r=!0){if(I(this,"onDraggingStarted",new M),I(this,"onDraggingEnded",new M),I(this,"onDisposed",new M),I(this,"normal"),I(this,"origin"),I(this,"three",new fe),I(this,"components"),I(this,"world"),I(this,"type","default"),I(this,"_helper"),I(this,"_visible",!0),I(this,"_enabled",!0),I(this,"_controlsActive",!1),I(this,"_arrowBoundBox",new D),I(this,"_planeMesh"),I(this,"_controls"),I(this,"_hiddenMaterial",new Te({visible:!1})),I(this,"update",()=>{this._enabled&&this.three.setFromNormalAndCoplanarPoint(this.normal,this._helper.position)}),I(this,"changeDrag",a=>{this._visible=!a.value,this.preventCameraMovement(),this.notifyDraggingChanged(a)}),this.components=t,this.world=e,!e.renderer)throw new Error("The given world must have a renderer!");this.normal=i,this.origin=s,e.renderer.setPlane(!0,this.three),this._planeMesh=Mi.newPlaneMesh(o,n),this._helper=this.newHelper(),this._controls=this.newTransformControls(),this.three.setFromNormalAndCoplanarPoint(i,s),r&&this.toggleControls(!0)}get enabled(){return this._enabled}set enabled(t){if(!this.world.renderer)throw new Error("No renderer found for clipping plane!");this._enabled=t,this.world.renderer.setPlane(t,this.three)}get visible(){return this._visible}set visible(t){this._visible=t,this._controls.visible=t,this._helper.visible=t,this.toggleControls(t)}get meshes(){return[this._planeMesh,this._arrowBoundBox]}get planeMaterial(){return this._planeMesh.material}set planeMaterial(t){this._planeMesh.material=t}get size(){return this._planeMesh.scale.x}set size(t){this._planeMesh.scale.set(t,t,t)}get helper(){return this._helper}setFromNormalAndCoplanarPoint(t,e){this.reset(),this.normal.equals(t)||(this.normal.copy(t),this._helper.lookAt(t)),this.origin.copy(e),this._helper.position.copy(e),this._helper.updateMatrix(),this.update()}dispose(){this._enabled=!1,this.onDraggingStarted.reset(),this.onDraggingEnded.reset(),this._helper.removeFromParent(),this.world.renderer&&this.world.renderer.setPlane(!1,this.three),this._arrowBoundBox.removeFromParent(),this._arrowBoundBox.geometry.dispose(),this._planeMesh.geometry.dispose(),this._controls.removeFromParent(),this._controls.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}reset(){const t=new O(1,0,0),e=new O;this.normal.equals(t)||(this.normal.copy(t),this._helper.lookAt(t)),this.origin.copy(e),this._helper.position.copy(e),this._helper.updateMatrix()}toggleControls(t){if(t){if(this._controlsActive)return;this._controls.addEventListener("change",this.update),this._controls.addEventListener("dragging-changed",this.changeDrag)}else this._controls.removeEventListener("change",this.update),this._controls.removeEventListener("dragging-changed",this.changeDrag);this._controlsActive=t}newTransformControls(){if(!this.world.renderer)throw new Error("No renderer found for clipping plane!");const t=this.world.camera.three,e=this.world.renderer.three.domElement,s=new Ma(t,e);return this.initializeControls(s),this.world.scene.three.add(s),s}initializeControls(t){t.attach(this._helper),t.showX=!1,t.showY=!1,t.setSpace("local"),this.createArrowBoundingBox(),t.children[0].children[0].add(this._arrowBoundBox)}createArrowBoundingBox(){this._arrowBoundBox.geometry=new rt(.18,.18,1.2),this._arrowBoundBox.material=this._hiddenMaterial,this._arrowBoundBox.rotateX(Math.PI/2),this._arrowBoundBox.updateMatrix(),this._arrowBoundBox.geometry.applyMatrix4(this._arrowBoundBox.matrix)}notifyDraggingChanged(t){t.value?this.onDraggingStarted.trigger():this.onDraggingEnded.trigger()}preventCameraMovement(){this.world.camera.enabled=this._visible}newHelper(){const t=new As;return t.lookAt(this.normal),t.position.copy(this.origin),this._planeMesh.position.z+=.01,t.add(this._planeMesh),this.world.scene.three.add(t),t}static newPlaneMesh(t,e){const s=new _i(1),i=new D(s,e);return i.scale.set(t,t,t),i}}const qn=class di extends J{constructor(t){super(t),I(this,"onBeforeDrag",new M),I(this,"onAfterDrag",new M),I(this,"onBeforeCreate",new M),I(this,"onBeforeCancel",new M),I(this,"onAfterCancel",new M),I(this,"onBeforeDelete",new M),I(this,"onAfterCreate",new M),I(this,"onAfterDelete",new M),I(this,"onDisposed",new M),I(this,"orthogonalY",!1),I(this,"toleranceOrthogonalY",.7),I(this,"Type",Mi),I(this,"list",[]),I(this,"_material",new Te({color:12255487,side:He,transparent:!0,opacity:.2})),I(this,"_size",5),I(this,"_enabled",!1),I(this,"_visible",!0),I(this,"_onStartDragging",()=>{this.onBeforeDrag.trigger()}),I(this,"_onEndDragging",()=>{this.onAfterDrag.trigger()}),this.components.add(di.uuid,this)}get enabled(){return this._enabled}set enabled(t){this._enabled=t;for(const e of this.list)e.enabled=t;this.updateMaterialsAndPlanes()}get visible(){return this._visible}set visible(t){this._visible=t;for(const e of this.list)e.visible=t}get material(){return this._material}set material(t){this._material=t;for(const e of this.list)e.planeMaterial=t}get size(){return this._size}set size(t){this._size=t;for(const e of this.list)e.size=t}dispose(){this._enabled=!1;for(const t of this.list)t.dispose();this.list.length=0,this._material.dispose(),this.onBeforeCreate.reset(),this.onBeforeCancel.reset(),this.onBeforeDelete.reset(),this.onBeforeDrag.reset(),this.onAfterCreate.reset(),this.onAfterCancel.reset(),this.onAfterDelete.reset(),this.onAfterDrag.reset(),this.onDisposed.trigger(di.uuid),this.onDisposed.reset()}create(t){const e=this.components.get(cn).get(t).castRay();return e?this.createPlaneFromIntersection(t,e):null}createFromNormalAndCoplanarPoint(t,e,s){const i=this.newPlane(t,s,e);return this.updateMaterialsAndPlanes(),i}delete(t,e){e||(e=this.pickPlane(t)),e&&this.deletePlane(e)}deleteAll(t){const e=[...this.list];for(const s of e)if(!t||t.has(s.type)){this.delete(s.world,s);const i=this.list.indexOf(s);i!==-1&&this.list.splice(i,1)}}deletePlane(t){const e=this.list.indexOf(t);if(e!==-1){if(this.list.splice(e,1),!t.world.renderer)throw new Error("Renderer not found for this plane's world!");t.world.renderer.setPlane(!1,t.three),t.dispose(),this.updateMaterialsAndPlanes(),this.onAfterDelete.trigger(t)}}pickPlane(t){const e=this.components.get(cn).get(t),s=this.getAllPlaneMeshes(),i=e.castRay(s);if(i){const n=i.object;return this.list.find(o=>o.meshes.includes(n))}}getAllPlaneMeshes(){const t=[];for(const e of this.list)t.push(...e.meshes);return t}createPlaneFromIntersection(t,e){var s;if(!t.renderer)throw new Error("The given world must have a renderer!");const i=e.point.distanceTo(new O(0,0,0)),n=(s=e.face)==null?void 0:s.normal;if(!i||!n)return null;const o=this.getWorldNormal(e,n),r=this.newPlane(t,e.point,o.negate());return r.visible=this._visible,r.size=this._size,t.renderer.setPlane(!0,r.three),this.updateMaterialsAndPlanes(),r}getWorldNormal(t,e){const s=t.object;let i=t.object.matrixWorld.clone();if(s instanceof jt&&t.instanceId!==void 0){const r=new H;s.getMatrixAt(t.instanceId,r),i=r.multiply(i)}const n=new Zt().getNormalMatrix(i),o=e.clone().applyMatrix3(n).normalize();return this.normalizePlaneDirectionY(o),o}normalizePlaneDirectionY(t){this.orthogonalY&&(t.y>this.toleranceOrthogonalY&&(t.x=0,t.y=1,t.z=0),t.y<-this.toleranceOrthogonalY&&(t.x=0,t.y=-1,t.z=0))}newPlane(t,e,s){const i=new this.Type(this.components,t,e,s,this._material);return i.onDraggingStarted.add(this._onStartDragging),i.onDraggingEnded.add(this._onEndDragging),this.list.push(i),this.onAfterCreate.trigger(i),i}updateMaterialsAndPlanes(){const t=this.components.get(La);for(const[e,s]of t.list){if(!s.renderer)continue;s.renderer.updateClippingPlanes();const{clippingPlanes:i}=s.renderer;for(const n of s.meshes)if(n.material)if(Array.isArray(n.material))for(const o of n.material)o.clippingPlanes=i;else n.material.clippingPlanes=i}}};I(qn,"uuid","66290bc5-18c4-4cd1-9379-2e17a0617611");let lh=qn;function za(c,t,e,s){return new Promise((i,n)=>{function o(){const r=c.clientWaitSync(t,e,0);if(r===c.WAIT_FAILED){n();return}if(r===c.TIMEOUT_EXPIRED){setTimeout(o,s);return}i()}o()})}async function Ga(c,t,e,s,i,n,o){const r=c.fenceSync(c.SYNC_GPU_COMMANDS_COMPLETE,0);c.flush(),await za(c,r,0,10),c.deleteSync(r),c.bindBuffer(t,e),c.getBufferSubData(t,s,i,n,o),c.bindBuffer(t,null)}async function Va(c,t,e,s,i,n,o,r){const a=c.createBuffer();return c.bindBuffer(c.PIXEL_PACK_BUFFER,a),c.bufferData(c.PIXEL_PACK_BUFFER,r.byteLength,c.STREAM_READ),c.readPixels(t,e,s,i,n,o,0),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),await Ga(c,c.PIXEL_PACK_BUFFER,a,0,r),c.deleteBuffer(a),r}class Ha{constructor(t,e,s){if(I(this,"onDisposed",new M),I(this,"onViewUpdated",new ms),I(this,"enabled",!0),I(this,"needsUpdate",!1),I(this,"renderDebugFrame",!1),I(this,"components"),I(this,"world"),I(this,"renderer"),I(this,"autoUpdate",!0),I(this,"updateInterval",1e3),I(this,"worker"),I(this,"scene",new Ci),I(this,"_width",512),I(this,"_height",512),I(this,"_availableColor",1),I(this,"renderTarget"),I(this,"bufferSize"),I(this,"_buffer"),I(this,"_isWorkerBusy",!1),I(this,"updateVisibility",async o=>{if(!this.enabled||!this.needsUpdate&&!o||this._isWorkerBusy)return;this._isWorkerBusy=!0;const r=this.world.camera.three;r.updateMatrix(),this.renderer.setSize(this._width,this._height),this.renderer.setRenderTarget(this.renderTarget),this.renderer.render(this.scene,r);const a=this.renderer.getContext();await Va(a,0,0,this._width,this._height,a.RGBA,a.UNSIGNED_BYTE,this._buffer),this.renderer.setRenderTarget(null),this.renderDebugFrame&&this.renderer.render(this.scene,r),this.worker.postMessage({buffer:this._buffer}),this.needsUpdate=!1}),!e.renderer)throw new Error("The given world must have a renderer!");this.components=t,this.applySettings(s),this.world=e,this.renderer=new Fs,this.renderTarget=new jo(this._width,this._height),this.bufferSize=this._width*this._height*4,this._buffer=new Uint8Array(this.bufferSize),this.renderer.clippingPlanes=e.renderer.clippingPlanes;const i=`
      addEventListener("message", (event) => {
        const { buffer } = event.data;
        const colors = new Map();
        for (let i = 0; i < buffer.length; i += 4) {
          const r = buffer[i];
          const g = buffer[i + 1];
          const b = buffer[i + 2];
          const code = "" + r + "-" + g + "-" + b;
          if(colors.has(code)) {
            colors.set(code, colors.get(code) + 1);
          } else {
            colors.set(code, 1);
          }
        }
        postMessage({ colors });
      });
    `,n=new Blob([i],{type:"application/javascript"});this.worker=new Worker(URL.createObjectURL(n))}dispose(){this.enabled=!1;for(const t of this.scene.children)t.removeFromParent();this.onViewUpdated.reset(),this.worker.terminate(),this.renderer.dispose(),this.renderTarget.dispose(),this._buffer=null,this.onDisposed.reset()}getAvailableColor(){let t=BigInt(this._availableColor.toString());const e=[];do e.unshift(Number(t%256n)),t/=256n;while(t);for(;e.length!==3;)e.unshift(0);const[s,i,n]=e,o=`${s}-${i}-${n}`;return{r:s,g:i,b:n,code:o}}increaseColor(){if(this._availableColor===256*256*256){console.warn("Color can't be increased over 256 x 256 x 256!");return}this._availableColor++}decreaseColor(){if(this._availableColor===1){console.warn("Color can't be decreased under 0!");return}this._availableColor--}applySettings(t){t&&(t.updateInterval!==void 0&&(this.updateInterval=t.updateInterval),t.height!==void 0&&(this._height=t.height),t.width!==void 0&&(this._width=t.width),t.autoUpdate!==void 0&&(this.autoUpdate=t.autoUpdate))}}class Wa extends Ha{constructor(t,e,s){super(t,e,s),I(this,"onViewUpdated",new M),I(this,"threshold",100),I(this,"colorMeshes",new Map),I(this,"isProcessing",!1),I(this,"_colorCodeMeshMap",new Map),I(this,"_meshIDColorCodeMap",new Map),I(this,"_currentVisibleMeshes",new Set),I(this,"_recentlyHiddenMeshes",new Set),I(this,"_intervalID",null),I(this,"_transparentMat",new Te({transparent:!0,opacity:0})),I(this,"handleWorkerMessage",async i=>{if(this.isProcessing)return;const n=i.data.colors;this._recentlyHiddenMeshes=new Set(this._currentVisibleMeshes),this._currentVisibleMeshes.clear();for(const[o,r]of n){if(r<this.threshold)continue;const a=this._colorCodeMeshMap.get(o);a&&(this._currentVisibleMeshes.add(a),this._recentlyHiddenMeshes.delete(a))}this.onViewUpdated.trigger({seen:this._currentVisibleMeshes,unseen:this._recentlyHiddenMeshes}),this._isWorkerBusy=!1}),this.worker.addEventListener("message",this.handleWorkerMessage),this.autoUpdate&&window.setInterval(async()=>{this.isProcessing||await this.updateVisibility()},this.updateInterval),this.onViewUpdated.add(({seen:i,unseen:n})=>{for(const o of i)o.visible=!0;for(const o of n)o.visible=!1})}dispose(){super.dispose(),this._intervalID!==null&&(window.clearInterval(this._intervalID),this._intervalID=null),this._currentVisibleMeshes.clear(),this._recentlyHiddenMeshes.clear(),this._meshIDColorCodeMap.clear(),this._transparentMat.dispose(),this._colorCodeMeshMap.clear();const t=this.components.get(me);for(const e in this.colorMeshes){const s=this.colorMeshes.get(e);s&&t.destroy(s,!0)}this.colorMeshes.clear()}add(t){if(!this.enabled)return;if(this.isProcessing){console.log("Culler processing not finished yet.");return}this.isProcessing=!0;const e=t instanceof jt,{geometry:s,material:i}=t,{colorMaterial:n,code:o}=this.getAvailableMaterial();let r;if(Array.isArray(i)){let d=!0;const E=[];for(const l of i)hn.isTransparent(l)?E.push(this._transparentMat):(d=!1,E.push(n));if(d){n.dispose(),this.isProcessing=!1;return}r=E}else if(hn.isTransparent(i)){n.dispose(),this.isProcessing=!1;return}else r=n;this._colorCodeMeshMap.set(o,t),this._meshIDColorCodeMap.set(t.uuid,o);const a=e?t.count:1,h=new jt(s,r,a);e?h.instanceMatrix=t.instanceMatrix:h.setMatrixAt(0,new H),t.visible=!1,t.updateWorldMatrix(!0,!1),h.applyMatrix4(t.matrixWorld),h.updateMatrix(),this.scene.add(h),this.colorMeshes.set(t.uuid,h),this.increaseColor(),this.isProcessing=!1}remove(t){if(this.isProcessing){console.log("Culler processing not finished yet.");return}this.isProcessing=!0;const e=this.components.get(me);this._currentVisibleMeshes.delete(t),this._recentlyHiddenMeshes.delete(t);const s=this.colorMeshes.get(t.uuid),i=this._meshIDColorCodeMap.get(t.uuid);if(!s||!i){this.isProcessing=!1;return}this._colorCodeMeshMap.delete(i),this._meshIDColorCodeMap.delete(t.uuid),this.colorMeshes.delete(t.uuid),s.geometry=void 0,s.material=[],e.destroy(s,!0),this._recentlyHiddenMeshes.delete(t),this._currentVisibleMeshes.delete(t),this.isProcessing=!1}getAvailableMaterial(){const{r:t,g:e,b:s,code:i}=this.getAvailableColor(),n=Ps.enabled;Ps.enabled=!1;const o=new Qt(`rgb(${t}, ${e}, ${s})`);if(!this.world.renderer)throw new Error("Renderer not found in the world!");const r=this.world.renderer.clippingPlanes,a=new Te({color:o,clippingPlanes:r,side:He});return Ps.enabled=n,{colorMaterial:a,code:i}}}const Kn=class Ei extends J{constructor(t){super(t),I(this,"onDisposed",new M),I(this,"_enabled",!0),I(this,"list",new Map),t.add(Ei.uuid,this)}get enabled(){return this._enabled}set enabled(t){this._enabled=t;for(const[e,s]of this.list)s.enabled=t}create(t,e){if(this.list.has(t.uuid))return this.list.get(t.uuid);const s=new Wa(this.components,t,e);return this.list.set(t.uuid,s),s}delete(t){const e=this.list.get(t.uuid);e&&e.dispose(),this.list.delete(t.uuid)}dispose(){this.enabled=!1,this.onDisposed.trigger(Ei.uuid),this.onDisposed.reset();for(const[t,e]of this.list)e.dispose();this.list.clear()}};I(Kn,"uuid","69f2a50d-c266-44fc-b1bd-fa4d34be89e6");let Xa=Kn;class ka{constructor(t){if(I(this,"onDisposed",new M),I(this,"onAfterUpdate",new M),I(this,"onBeforeUpdate",new M),I(this,"onResize",new M),I(this,"frontOffset",0),I(this,"overrideMaterial",new zo),I(this,"backgroundColor",new Qt(395274)),I(this,"renderer"),I(this,"enabled",!0),I(this,"world"),I(this,"_lockRotation",!0),I(this,"_camera"),I(this,"_plane"),I(this,"_size",new At(320,160)),I(this,"_tempVector1",new O),I(this,"_tempVector2",new O),I(this,"_tempTarget",new O),I(this,"down",new O(0,-1,0)),I(this,"updatePlanes",()=>{if(!this.world.renderer)throw new Error("The given world must have a renderer!");const i=[],n=this.world.renderer.three;for(const o of n.clippingPlanes)i.push(o);i.push(this._plane),this.renderer.clippingPlanes=i}),this.world=t,!this.world.renderer)throw new Error("The given world must have a renderer!");this.renderer=new Fs,this.renderer.setSize(this._size.x,this._size.y);const e=1,s=this._size.x/this._size.y;this._camera=new Ti(e*s/-2,e*s/2,e/2,e/-2),this.world.renderer.onClippingPlanesUpdated.add(this.updatePlanes),this._camera.position.set(0,200,0),this._camera.zoom=.1,this._camera.rotation.x=-Math.PI/2,this._plane=new fe(this.down,200),this.updatePlanes()}get lockRotation(){return this._lockRotation}set lockRotation(t){this._lockRotation=t,t&&(this._camera.rotation.z=0)}get zoom(){return this._camera.zoom}set zoom(t){this._camera.zoom=t,this._camera.updateProjectionMatrix()}dispose(){this.enabled=!1,this.onBeforeUpdate.reset(),this.onAfterUpdate.reset(),this.onResize.reset(),this.overrideMaterial.dispose(),this.renderer.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}get(){return this._camera}update(){if(!this.enabled)return;this.onBeforeUpdate.trigger();const t=this.world.scene.three,e=this.world.camera;if(!e.hasCameraControls())throw new Error("The given world must use camera controls!");if(!(t instanceof Ci))throw new Error("The given world must have a THREE.Scene as a root!");const s=e.controls;if(s.getPosition(this._tempVector1),this._camera.position.x=this._tempVector1.x,this._camera.position.z=this._tempVector1.z,this.frontOffset!==0&&(s.getTarget(this._tempVector2),this._tempVector2.sub(this._tempVector1),this._tempVector2.normalize().multiplyScalar(this.frontOffset),this._camera.position.x+=this._tempVector2.x,this._camera.position.z+=this._tempVector2.z),!this._lockRotation){s.getTarget(this._tempTarget);const n=Math.atan2(this._tempTarget.x-this._tempVector1.x,this._tempTarget.z-this._tempVector1.z);this._camera.rotation.z=n+Math.PI}this._plane.set(this.down,this._tempVector1.y);const i=t.background;t.background=this.backgroundColor,this.renderer.render(t,this._camera),t.background=i,this.onAfterUpdate.trigger()}getSize(){return this._size}resize(t=this._size){this._size.copy(t),this.renderer.setSize(t.x,t.y);const e=t.x/t.y,s=1;this._camera.left=s*e/-2,this._camera.right=s*e/2,this._camera.top=s/2,this._camera.bottom=-s/2,this._camera.updateProjectionMatrix(),this.onResize.trigger(t)}}const $n=class Jn extends J{constructor(t){super(t),I(this,"onAfterUpdate",new M),I(this,"onBeforeUpdate",new M),I(this,"onDisposed",new M),I(this,"enabled",!0),I(this,"list",new Map),this.components.add(Jn.uuid,this)}create(t){if(this.list.has(t.uuid))throw new Error("This world already has a minimap!");const e=new ka(t);return this.list.set(t.uuid,e),e}delete(t){const e=this.list.get(t);e&&e.dispose(),this.list.delete(t)}dispose(){for(const[t,e]of this.list)e.dispose();this.list.clear(),this.onDisposed.trigger()}update(){for(const[t,e]of this.list)e.update()}};I($n,"uuid","39ad6aad-84c8-4adf-a1e0-7f25313a9e7f");let dh=$n;class Za{constructor(t){I(this,"enabled",!1),I(this,"id","FirstPerson"),this.camera=t}set(t){if(this.enabled=t,t){if(this.camera.projection.current!=="Perspective"){this.camera.set("Orbit");return}this.setupFirstPersonCamera()}}setupFirstPersonCamera(){const t=this.camera.controls,e=new O;t.distance--,t.getPosition(e),t.minDistance=1,t.maxDistance=1,t.distance=1,t.moveTo(e.x,e.y,e.z),t.truckSpeed=50,t.mouseButtons.wheel=ot.ACTION.DOLLY,t.touches.two=ot.ACTION.TOUCH_ZOOM_TRUCK}}class Qa{constructor(t){I(this,"enabled",!0),I(this,"id","Orbit"),this.camera=t,this.activateOrbitControls()}set(t){this.enabled=t,t&&this.activateOrbitControls()}activateOrbitControls(){const t=this.camera.controls;t.minDistance=1,t.maxDistance=300;const e=new O;t.getPosition(e);const s=e.length();t.distance=s,t.truckSpeed=2;const{rotation:i}=this.camera.three,n=new O(0,0,-1).applyEuler(i),o=e.addScaledVector(n,s);t.moveTo(o.x,o.y,o.z)}}class ja{constructor(t){I(this,"enabled",!1),I(this,"id","Plan"),I(this,"mouseAction1"),I(this,"mouseAction2"),I(this,"mouseInitialized",!1),I(this,"defaultAzimuthSpeed"),I(this,"defaultPolarSpeed"),this.camera=t,this.defaultAzimuthSpeed=t.controls.azimuthRotateSpeed,this.defaultPolarSpeed=t.controls.polarRotateSpeed}set(t){this.enabled=t;const e=this.camera.controls;e.azimuthRotateSpeed=t?0:this.defaultAzimuthSpeed,e.polarRotateSpeed=t?0:this.defaultPolarSpeed,this.mouseInitialized||(this.mouseAction1=e.touches.one,this.mouseAction2=e.touches.two,this.mouseInitialized=!0),t?(e.mouseButtons.left=ot.ACTION.TRUCK,e.touches.one=ot.ACTION.TOUCH_TRUCK,e.touches.two=ot.ACTION.TOUCH_ZOOM):(e.mouseButtons.left=ot.ACTION.ROTATE,e.touches.one=this.mouseAction1,e.touches.two=this.mouseAction2)}}class qa{constructor(t){I(this,"onChanged",new M),I(this,"current","Perspective"),I(this,"camera"),I(this,"matchOrthoDistanceEnabled",!1),I(this,"_component"),I(this,"_previousDistance",-1),this._component=t,this.camera=t.three}async set(t){this.current!==t&&(t==="Orthographic"?this.setOrthoCamera():await this.setPerspectiveCamera(),this.onChanged.trigger(this.camera))}async toggle(){const t=this.current==="Perspective"?"Orthographic":"Perspective";await this.set(t)}setOrthoCamera(){if(this._component.mode===null||this._component.mode.id==="FirstPerson")return;this._previousDistance=this._component.controls.distance,this._component.controls.distance=200;const t=this.getPerspectiveDims();if(!t)return;const{width:e,height:s}=t;this.setupOrthoCamera(s,e),this.camera=this._component.threeOrtho,this.current="Orthographic"}getPerspectiveDims(){const t=this._component.currentWorld;if(!t||!t.renderer)return null;const e=new O;this._component.threePersp.getWorldDirection(e);const s=new O;this._component.controls.getTarget(s);const i=s.clone().sub(this._component.threePersp.position).dot(e),n=t.renderer.getSize(),o=n.x/n.y,r=this._component.threePersp,a=i*2*Math.atan(r.fov*(Math.PI/180)/2);return{width:a*o,height:a}}setupOrthoCamera(t,e){this._component.controls.mouseButtons.wheel=ot.ACTION.ZOOM,this._component.controls.mouseButtons.middle=ot.ACTION.ZOOM;const s=this._component.threePersp,i=this._component.threeOrtho;i.zoom=1,i.left=e/-2,i.right=e/2,i.top=t/2,i.bottom=t/-2,i.updateProjectionMatrix(),i.position.copy(s.position),i.quaternion.copy(s.quaternion),this._component.controls.camera=i}getDistance(){const t=this._component.threePersp,e=this._component.threeOrtho;return(e.top-e.bottom)/e.zoom/(2*Math.atan(t.fov*(Math.PI/180)/2))}async setPerspectiveCamera(){this._component.controls.mouseButtons.wheel=ot.ACTION.DOLLY,this._component.controls.mouseButtons.middle=ot.ACTION.DOLLY;const t=this._component.threePersp,e=this._component.threeOrtho;t.position.copy(e.position),t.quaternion.copy(e.quaternion),this._component.controls.mouseButtons.wheel=ot.ACTION.DOLLY,this.matchOrthoDistanceEnabled?this._component.controls.distance=this.getDistance():this._component.controls.distance=this._previousDistance,await this._component.controls.zoomTo(1),t.updateProjectionMatrix(),this._component.controls.camera=t,this.camera=t,this.current="Perspective"}}class Eh extends Ve{constructor(t){super(t),I(this,"projection"),I(this,"threeOrtho"),I(this,"threePersp"),I(this,"_userInputButtons",{}),I(this,"_frustumSize",50),I(this,"_navigationModes",new Map),I(this,"_mode",null),I(this,"previousSize",null),this.threePersp=this.three,this.threeOrtho=this.newOrthoCamera(),this.projection=new qa(this),this.onAspectUpdated.add(()=>{this.setOrthoPerspCameraAspect()}),this.projection.onChanged.add(e=>{this.three=e,this.updateAspect()}),this.onWorldChanged.add(({action:e})=>{e==="added"&&(this._navigationModes.clear(),this._navigationModes.set("Orbit",new Qa(this)),this._navigationModes.set("FirstPerson",new Za(this)),this._navigationModes.set("Plan",new ja(this)),this._mode=this._navigationModes.get("Orbit"),this.mode.set(!0,{preventTargetAdjustment:!0}),this.currentWorld&&this.currentWorld.renderer&&(this.previousSize=this.currentWorld.renderer.getSize().clone()))})}get mode(){if(!this._mode)throw new Error("Mode not found, camera not initialized");return this._mode}dispose(){super.dispose(),this.threeOrtho.removeFromParent()}set(t){if(this.mode!==null&&this.mode.id!==t){if(this.mode.set(!1),!this._navigationModes.has(t))throw new Error("The specified mode does not exist!");this._mode=this._navigationModes.get(t),this.mode.set(!0)}}async fit(t,e=1.5){if(!this.enabled)return;const s=Number.MAX_VALUE,i=Number.MIN_VALUE,n=new O(s,s,s),o=new O(i,i,i);for(const l of t){const u=new st().setFromObject(l);u.min.x<n.x&&(n.x=u.min.x),u.min.y<n.y&&(n.y=u.min.y),u.min.z<n.z&&(n.z=u.min.z),u.max.x>o.x&&(o.x=u.max.x),u.max.y>o.y&&(o.y=u.max.y),u.max.z>o.z&&(o.z=u.max.z)}const r=new st(n,o),a=new O;r.getSize(a);const h=new O;r.getCenter(h);const d=Math.max(a.x,a.y,a.z)*e,E=new Os(h,d);await this.controls.fitToSphere(E,!0)}setUserInput(t){t?this.enableUserInput():this.disableUserInput()}disableUserInput(){this._userInputButtons.left=this.controls.mouseButtons.left,this._userInputButtons.right=this.controls.mouseButtons.right,this._userInputButtons.middle=this.controls.mouseButtons.middle,this._userInputButtons.wheel=this.controls.mouseButtons.wheel,this.controls.mouseButtons.left=0,this.controls.mouseButtons.right=0,this.controls.mouseButtons.middle=0,this.controls.mouseButtons.wheel=0}enableUserInput(){Object.keys(this._userInputButtons).length!==0&&(this.controls.mouseButtons.left=this._userInputButtons.left,this.controls.mouseButtons.right=this._userInputButtons.right,this.controls.mouseButtons.middle=this._userInputButtons.middle,this.controls.mouseButtons.wheel=this._userInputButtons.wheel)}newOrthoCamera(){const t=window.innerWidth/window.innerHeight;return new Ti(this._frustumSize*t/-2,this._frustumSize*t/2,this._frustumSize/2,this._frustumSize/-2,.1,1e3)}setOrthoPerspCameraAspect(){if(!this.currentWorld||!this.currentWorld.renderer||!this.previousSize)return;const t=this.currentWorld.renderer.getSize(),e=this.threeOrtho.top,s=this.threeOrtho.right,i=t.y/this.previousSize.y,n=t.x/this.previousSize.x,o=e*i,r=s*n;this.threeOrtho.left=-r,this.threeOrtho.right=r,this.threeOrtho.top=o,this.threeOrtho.bottom=-o,this.threeOrtho.updateProjectionMatrix(),this.previousSize.copy(t)}}const Ka=new Map([[fi,{forRelating:"IsDecomposedBy",forRelated:"Decomposes"}],[Sn,{forRelating:"AssociatedTo",forRelated:"HasAssociations"}],[Nn,{forRelating:"ClassificationForObjects",forRelated:"HasAssociations"}],[wn,{forRelating:"IsGroupedBy",forRelated:"HasAssignments"}],[mi,{forRelated:"IsDefinedBy",forRelating:"DefinesOcurrence"}],[yn,{forRelated:"IsTypedBy",forRelating:"Types"}],[Ln,{forRelated:"IsDefinedBy",forRelating:"Defines"}],[Ri,{forRelated:"ContainedInStructure",forRelating:"ContainsElements"}]]),to=class ui extends J{constructor(t){super(t),I(this,"onDisposed",new M),I(this,"onRelationsIndexed",new M),I(this,"relationMaps",{}),I(this,"enabled",!0),I(this,"_relToAttributesMap",Ka),I(this,"_inverseAttributes",["IsDecomposedBy","Decomposes","AssociatedTo","HasAssociations","ClassificationForObjects","IsGroupedBy","HasAssignments","IsDefinedBy","DefinesOcurrence","IsTypedBy","Types","Defines","ContainedInStructure","ContainsElements"]),I(this,"_ifcRels",[fi,Sn,Nn,wn,mi,yn,Ln,Ri]),I(this,"onFragmentsDisposed",e=>{delete this.relationMaps[e.groupID]}),this.components.add(ui.uuid,this),t.get(Et).onFragmentsDisposed.add(this.onFragmentsDisposed)}indexRelations(t,e,s,i){const n=Object.keys(e).find(E=>E.startsWith("Relating")),o=Object.keys(e).find(E=>E.startsWith("Related"));if(!(n&&o))return;const r=e[n].value,a=e[o].map(E=>E.value),h=t.get(r)??new Map,d=this.getAttributeIndex(i);d&&(h.set(d,a),t.set(r,h));for(const E of a){const l=t.get(E)??new Map,u=this.getAttributeIndex(s);if(!u)continue;const C=l.get(u)??[];C.push(r),l.set(u,C),t.set(E,l)}}getAttributeIndex(t){const e=this._inverseAttributes.indexOf(t);return e===-1?null:e}setRelationMap(t,e){this.relationMaps[t.uuid]=e,this.onRelationsIndexed.trigger({modelID:t.uuid,relationsMap:e})}async process(t){if(!t.hasProperties)throw new Error("FragmentsGroup properties not found");let e=this.relationMaps[t.uuid];if(e)return e;e=new Map;for(const s of this._ifcRels){const i=await t.getAllPropertiesOfType(s);if(!i)continue;const n=this._relToAttributesMap.get(s);if(!n)continue;const{forRelated:o,forRelating:r}=n;for(const a in i){const h=i[a];this.indexRelations(e,h,o,r)}}return this.setRelationMap(t,e),e}async processFromWebIfc(t,e){const s=new Map;for(const i of this._ifcRels){const n=this._relToAttributesMap.get(i);if(!n)continue;const{forRelated:o,forRelating:r}=n,a=t.GetLineIDsWithType(e,i);for(let h=0;h<a.size();h++){const d=await t.properties.getItemProperties(e,a.get(h));this.indexRelations(s,d,o,r)}}return this.onRelationsIndexed.trigger({modelID:e.toString(),relationsMap:s}),s}getEntityRelations(t,e,s){const i=this.relationMaps[t.uuid];if(!i)throw new Error(`IfcRelationsIndexer: model ${t.uuid} has no relations indexed.`);const n=i.get(e),o=this.getAttributeIndex(s);return n===void 0||o===null?null:n.get(o)||null}serializeRelations(t){const e={};for(const[s,i]of t.entries()){e[s]||(e[s]={});for(const[n,o]of i.entries())e[s][n]=o}return JSON.stringify(e)}serializeModelRelations(t){const e=this.relationMaps[t.uuid];return e?this.serializeRelations(e):null}serializeAllRelations(){const t={};for(const e in this.relationMaps){const s=this.relationMaps[e],i={};for(const[n,o]of s.entries()){i[n]||(i[n]={});for(const[r,a]of o.entries())i[n][r]=a}t[e]=i}return JSON.stringify(t)}getRelationsMapFromJSON(t){const e=JSON.parse(t),s=new Map;for(const i in e){const n=e[i],o=new Map;for(const r in n)o.set(Number(r),n[r]);s.set(Number(i),o)}return s}dispose(){this.relationMaps={},this.components.get(Et).onFragmentsDisposed.remove(this.onFragmentsDisposed),this.onDisposed.trigger(ui.uuid),this.onDisposed.reset()}addEntityRelations(t,e,s,...i){const n=this.getEntityRelations(t,e,s);if(n)n.push(...i);else{const o=this.getAttributeIndex(s);if(!o)throw new Error(`IfcRelationsIndexer: ${s} is not a valid relation name.`);const r=this.relationMaps[t.uuid].get(e);r==null||r.set(o,i)}}getEntityChildren(t,e,s=new Set){if(s.add(e),this.relationMaps[t.uuid]===void 0)throw new Error("The provided model has no indices. You have to generate them first.");const i=this.getEntityRelations(t,e,"IsDecomposedBy");if(i)for(const o of i)this.getEntityChildren(t,o,s);const n=this.getEntityRelations(t,e,"ContainsElements");if(n)for(const o of n)this.getEntityChildren(t,o,s);return s}};I(to,"uuid","23a889ab-83b3-44a4-8bee-ead83438370b");let Ns=to;const eo=class so extends J{constructor(t){super(t),I(this,"onDisposed",new M),I(this,"onFragmentsLoaded",new M),I(this,"onFragmentsDisposed",new M),I(this,"list",new Map),I(this,"groups",new Map),I(this,"baseCoordinationModel",""),I(this,"baseCoordinationMatrix",new H),I(this,"enabled",!0),I(this,"_loader",new Pn),this.components.add(so.uuid,this)}get meshes(){const t=[];for(const[e,s]of this.list)t.push(s.mesh);return t}dispose(){for(const[t,e]of this.groups)e.dispose(!0);this.baseCoordinationModel="",this.groups.clear(),this.list.clear(),this.onFragmentsLoaded.reset(),this.onFragmentsDisposed.reset(),this.onDisposed.trigger(),this.onDisposed.reset()}disposeGroup(t){const{uuid:e}=t,s=[];for(const i of t.items)s.push(i.id),this.list.delete(i.id);t.dispose(!0),this.groups.delete(t.uuid),this.onFragmentsDisposed.trigger({groupID:e,fragmentIDs:s})}load(t,e){const s={coordinate:!0,...e},{coordinate:i,name:n,properties:o,relationsMap:r}=s,a=this._loader.import(t);n&&(a.name=n);for(const h of a.items)h.group=a,this.list.set(h.id,h);return i&&this.coordinate([a]),this.groups.set(a.uuid,a),o&&a.setLocalProperties(o),r&&this.components.get(Ns).setRelationMap(a,r),this.onFragmentsLoaded.trigger(a),a}export(t){return this._loader.export(t)}getModelIdMap(t){const e={};for(const s in t){const i=this.list.get(s);if(!(i&&i.group))continue;const n=i.group;n.uuid in e||(e[n.uuid]=new Set);const o=t[s];for(const r of o)e[n.uuid].add(r)}return e}modelIdToFragmentIdMap(t){let e={};for(const s in t){const i=this.groups.get(s);if(!i)continue;const n=t[s],o=i.getFragmentMap(n);e={...e,...o}}return e}coordinate(t=Array.from(this.groups.values())){if(this.baseCoordinationModel.length===0){const e=t.pop();if(!e)return;this.baseCoordinationModel=e.uuid,this.baseCoordinationMatrix=e.coordinationMatrix.clone()}if(t.length)for(const e of t)e.coordinationMatrix.equals(this.baseCoordinationMatrix)||(e.position.set(0,0,0),e.rotation.set(0,0,0),e.scale.set(1,1,1),e.updateMatrix(),this.applyBaseCoordinateSystem(e,e.coordinationMatrix))}applyBaseCoordinateSystem(t,e){t.applyMatrix4(e.clone().invert()),t.applyMatrix4(this.baseCoordinationMatrix)}};I(eo,"uuid","fef46874-46a3-461b-8c44-2922ab77c806");let Et=eo;const io=class Lt extends J{constructor(t){super(t),I(this,"enabled",!0),I(this,"onDisposed",new M),I(this,"_absoluteMin"),I(this,"_absoluteMax"),I(this,"_meshes",[]),this.components.add(Lt.uuid,this),this._absoluteMin=Lt.newBound(!0),this._absoluteMax=Lt.newBound(!1)}static getDimensions(t){const{min:e,max:s}=t,i=Math.abs(s.x-e.x),n=Math.abs(s.y-e.y),o=Math.abs(s.z-e.z),r=new O;return r.subVectors(s,e).divideScalar(2).add(e),{width:i,height:n,depth:o,center:r}}static newBound(t){const e=t?1:-1;return new O(e*Number.MAX_VALUE,e*Number.MAX_VALUE,e*Number.MAX_VALUE)}static getBounds(t,e,s){const i=s||this.newBound(!1),n=e||this.newBound(!0);for(const o of t)o.x<n.x&&(n.x=o.x),o.y<n.y&&(n.y=o.y),o.z<n.z&&(n.z=o.z),o.x>i.x&&(i.x=o.x),o.y>i.y&&(i.y=o.y),o.z>i.z&&(i.z=o.z);return new st(e,s)}dispose(){const t=this.components.get(me);for(const e of this._meshes)t.destroy(e);this._meshes=[],this.onDisposed.trigger(Lt.uuid),this.onDisposed.reset()}get(){const t=this._absoluteMin.clone(),e=this._absoluteMax.clone();return new st(t,e)}getSphere(){const t=this._absoluteMin.clone(),e=this._absoluteMax.clone(),s=Math.abs((e.x-t.x)/2),i=Math.abs((e.y-t.y)/2),n=Math.abs((e.z-t.z)/2),o=new O(t.x+s,t.y+i,t.z+n),r=o.distanceTo(t);return new Os(o,r)}getMesh(){const t=new st(this._absoluteMin,this._absoluteMax),e=Lt.getDimensions(t),{width:s,height:i,depth:n,center:o}=e,r=new it(s,i,n),a=new D(r);return this._meshes.push(a),a.position.copy(o),a}reset(){this._absoluteMin=Lt.newBound(!0),this._absoluteMax=Lt.newBound(!1)}add(t){for(const e of t.items)this.addMesh(e.mesh)}addMesh(t,e){if(!t.geometry.index)return;const s=Lt.getFragmentBounds(t);t.updateMatrixWorld();const i=t.matrixWorld,n=new H,o=t instanceof jt,r=new Set;if(e&&t instanceof xo)for(const a of e){const h=t.fragment.getInstancesIDs(a);if(h)for(const d of h)r.add(d)}else r.add(0);for(const a of r){const h=s.min.clone(),d=s.max.clone();o&&(t.getMatrixAt(a,n),h.applyMatrix4(n),d.applyMatrix4(n)),h.applyMatrix4(i),d.applyMatrix4(i),h.x<this._absoluteMin.x&&(this._absoluteMin.x=h.x),h.y<this._absoluteMin.y&&(this._absoluteMin.y=h.y),h.z<this._absoluteMin.z&&(this._absoluteMin.z=h.z),h.x>this._absoluteMax.x&&(this._absoluteMax.x=h.x),h.y>this._absoluteMax.y&&(this._absoluteMax.y=h.y),h.z>this._absoluteMax.z&&(this._absoluteMax.z=h.z),d.x>this._absoluteMax.x&&(this._absoluteMax.x=d.x),d.y>this._absoluteMax.y&&(this._absoluteMax.y=d.y),d.z>this._absoluteMax.z&&(this._absoluteMax.z=d.z),d.x<this._absoluteMin.x&&(this._absoluteMin.x=d.x),d.y<this._absoluteMin.y&&(this._absoluteMin.y=d.y),d.z<this._absoluteMin.z&&(this._absoluteMin.z=d.z)}}addFragmentIdMap(t){const e=this.components.get(Et);for(const s in t){const i=e.list.get(s);if(!i)continue;const n=t[s];this.addMesh(i.mesh,n)}}static getFragmentBounds(t){const e=t.geometry.attributes.position,s=Number.MAX_VALUE,i=-s,n=new O(s,s,s),o=new O(i,i,i);if(!t.geometry.index)throw new Error("Geometry must be indexed!");const r=Array.from(t.geometry.index.array);for(let a=0;a<r.length;a++){if(a%3===0&&r[a]===0&&r[a+1]===0&&r[a+2]===0){a+=2;continue}const h=r[a],d=e.getX(h),E=e.getY(h),l=e.getZ(h);d<n.x&&(n.x=d),E<n.y&&(n.y=E),l<n.z&&(n.z=l),d>o.x&&(o.x=d),E>o.y&&(o.y=E),l>o.z&&(o.z=l)}return new st(n,o)}};I(io,"uuid","d1444724-dba6-4cdd-a0c7-68ee1450d166");let uh=io;const no=new Set([1123145078,574549367,1675464909,2059837836,3798115385,32440307,3125803723,3207858831,2740243338,2624227202,4240577450,3615266464,3724593414,220341763,477187591,1878645084,1300840506,3303107099,1607154358,1878645084,846575682,1351298697,2417041796,3049322572,3331915920,1416205885,776857604,3285139300,3958052878,2827736869,2732653382,673634403,3448662350,4142052618,2924175390,803316827,2556980723,1809719519,2205249479,807026263,3737207727,1660063152,2347385850,2705031697,3732776249,2485617015,2611217952,1704287377,2937912522,2770003689,1281925730,1484403080,3448662350,4142052618,3800577675,4006246654,3590301190,1383045692,2775532180,2047409740,370225590,3593883385,2665983363,4124623270,812098782,3649129432,987898635,1105321065,3510044353,1635779807,2603310189,3406155212,1310608509,4261334040,2736907675,3649129432,1136057603,1260505505,4182860854,2713105998,2898889636,59481748,3749851601,3486308946,3150382593,1062206242,3264961684,15328376,1485152156,370225590,1981873012,2859738748,45288368,2614616156,2732653382,775493141,2147822146,2601014836,2629017746,1186437898,2367409068,1213902940,3632507154,3900360178,476780140,1472233963,2804161546,3008276851,738692330,374418227,315944413,3905492369,3570813810,2571569899,178912537,2294589976,1437953363,2133299955,572779678,3092502836,388784114,2624227202,1425443689,3057273783,2347385850,1682466193,2519244187,2839578677,3958567839,2513912981,2830218821,427810014]),oo=class ro extends J{constructor(t){super(t),I(this,"enabled",!0),t.add(ro.uuid,this)}async export(t,e,s=!1,i=!0){const n={},o=new Set(t.GetIfcEntityList(e)),r=new Set([Fi,Ai,gi,Oi,Kt]);for(const a of r)o.add(a);for(const a of o){if(no.has(a))continue;const h=r.has(a)&&i,d=t.GetLineIDsWithType(e,a);for(const E of d){const l=t.GetLine(0,E,h,s);n[l.expressID]=l}}return n}};I(oo,"uuid","b32c4332-cd67-436e-ba7f-196646c7a635");let $a=oo;const ao={950732822:"IFCURIREFERENCE",4075327185:"IFCTIME",1209108979:"IFCTEMPERATURERATEOFCHANGEMEASURE",3457685358:"IFCSOUNDPRESSURELEVELMEASURE",4157543285:"IFCSOUNDPOWERLEVELMEASURE",2798247006:"IFCPROPERTYSETDEFINITIONSET",1790229001:"IFCPOSITIVEINTEGER",525895558:"IFCNONNEGATIVELENGTHMEASURE",1774176899:"IFCLINEINDEX",1275358634:"IFCLANGUAGEID",2541165894:"IFCDURATION",3701338814:"IFCDAYINWEEKNUMBER",2195413836:"IFCDATETIME",937566702:"IFCDATE",1683019596:"IFCCARDINALPOINTREFERENCE",2314439260:"IFCBINARY",1500781891:"IFCAREADENSITYMEASURE",3683503648:"IFCARCINDEX",4065007721:"IFCYEARNUMBER",1718600412:"IFCWARPINGMOMENTMEASURE",51269191:"IFCWARPINGCONSTANTMEASURE",2593997549:"IFCVOLUMETRICFLOWRATEMEASURE",3458127941:"IFCVOLUMEMEASURE",3345633955:"IFCVAPORPERMEABILITYMEASURE",1278329552:"IFCTORQUEMEASURE",2591213694:"IFCTIMESTAMP",2726807636:"IFCTIMEMEASURE",743184107:"IFCTHERMODYNAMICTEMPERATUREMEASURE",2016195849:"IFCTHERMALTRANSMITTANCEMEASURE",857959152:"IFCTHERMALRESISTANCEMEASURE",2281867870:"IFCTHERMALEXPANSIONCOEFFICIENTMEASURE",2645777649:"IFCTHERMALCONDUCTIVITYMEASURE",232962298:"IFCTHERMALADMITTANCEMEASURE",296282323:"IFCTEXTTRANSFORMATION",603696268:"IFCTEXTFONTNAME",3490877962:"IFCTEXTDECORATION",1460886941:"IFCTEXTALIGNMENT",2801250643:"IFCTEXT",58845555:"IFCTEMPERATUREGRADIENTMEASURE",361837227:"IFCSPECULARROUGHNESS",2757832317:"IFCSPECULAREXPONENT",3477203348:"IFCSPECIFICHEATCAPACITYMEASURE",993287707:"IFCSOUNDPRESSUREMEASURE",846465480:"IFCSOUNDPOWERMEASURE",3471399674:"IFCSOLIDANGLEMEASURE",408310005:"IFCSHEARMODULUSMEASURE",2190458107:"IFCSECTIONALAREAINTEGRALMEASURE",3467162246:"IFCSECTIONMODULUSMEASURE",2766185779:"IFCSECONDINMINUTE",3211557302:"IFCROTATIONALSTIFFNESSMEASURE",1755127002:"IFCROTATIONALMASSMEASURE",2133746277:"IFCROTATIONALFREQUENCYMEASURE",200335297:"IFCREAL",96294661:"IFCRATIOMEASURE",3972513137:"IFCRADIOACTIVITYMEASURE",3665567075:"IFCPRESSUREMEASURE",2169031380:"IFCPRESENTABLETEXT",1364037233:"IFCPOWERMEASURE",1245737093:"IFCPOSITIVERATIOMEASURE",3054510233:"IFCPOSITIVEPLANEANGLEMEASURE",2815919920:"IFCPOSITIVELENGTHMEASURE",4042175685:"IFCPLANEANGLEMEASURE",2642773653:"IFCPLANARFORCEMEASURE",2260317790:"IFCPARAMETERVALUE",929793134:"IFCPHMEASURE",2395907400:"IFCNUMERICMEASURE",2095195183:"IFCNORMALISEDRATIOMEASURE",765770214:"IFCMONTHINYEARNUMBER",2615040989:"IFCMONETARYMEASURE",3114022597:"IFCMOMENTOFINERTIAMEASURE",1648970520:"IFCMOLECULARWEIGHTMEASURE",3177669450:"IFCMOISTUREDIFFUSIVITYMEASURE",1753493141:"IFCMODULUSOFSUBGRADEREACTIONMEASURE",1052454078:"IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE",2173214787:"IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE",3341486342:"IFCMODULUSOFELASTICITYMEASURE",102610177:"IFCMINUTEINHOUR",3531705166:"IFCMASSPERLENGTHMEASURE",3124614049:"IFCMASSMEASURE",4017473158:"IFCMASSFLOWRATEMEASURE",1477762836:"IFCMASSDENSITYMEASURE",2486716878:"IFCMAGNETICFLUXMEASURE",286949696:"IFCMAGNETICFLUXDENSITYMEASURE",151039812:"IFCLUMINOUSINTENSITYMEASURE",2755797622:"IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE",2095003142:"IFCLUMINOUSFLUXMEASURE",503418787:"IFCLOGICAL",3086160713:"IFCLINEARVELOCITYMEASURE",1307019551:"IFCLINEARSTIFFNESSMEASURE",2128979029:"IFCLINEARMOMENTMEASURE",191860431:"IFCLINEARFORCEMEASURE",1243674935:"IFCLENGTHMEASURE",3258342251:"IFCLABEL",2054016361:"IFCKINEMATICVISCOSITYMEASURE",3192672207:"IFCISOTHERMALMOISTURECAPACITYMEASURE",3686016028:"IFCIONCONCENTRATIONMEASURE",3809634241:"IFCINTEGERCOUNTRATEMEASURE",1939436016:"IFCINTEGER",2679005408:"IFCINDUCTANCEMEASURE",3358199106:"IFCILLUMINANCEMEASURE",983778844:"IFCIDENTIFIER",2589826445:"IFCHOURINDAY",1158859006:"IFCHEATINGVALUEMEASURE",3113092358:"IFCHEATFLUXDENSITYMEASURE",3064340077:"IFCGLOBALLYUNIQUEID",3044325142:"IFCFREQUENCYMEASURE",1361398929:"IFCFORCEMEASURE",2590844177:"IFCFONTWEIGHT",2715512545:"IFCFONTVARIANT",1102727119:"IFCFONTSTYLE",2078135608:"IFCENERGYMEASURE",2506197118:"IFCELECTRICVOLTAGEMEASURE",2951915441:"IFCELECTRICRESISTANCEMEASURE",3790457270:"IFCELECTRICCURRENTMEASURE",2093906313:"IFCELECTRICCONDUCTANCEMEASURE",3818826038:"IFCELECTRICCHARGEMEASURE",1827137117:"IFCELECTRICCAPACITANCEMEASURE",69416015:"IFCDYNAMICVISCOSITYMEASURE",524656162:"IFCDOSEEQUIVALENTMEASURE",4134073009:"IFCDIMENSIONCOUNT",1514641115:"IFCDESCRIPTIVEMEASURE",300323983:"IFCDAYLIGHTSAVINGHOUR",86635668:"IFCDAYINMONTHNUMBER",94842927:"IFCCURVATUREMEASURE",1778710042:"IFCCOUNTMEASURE",3238673880:"IFCCONTEXTDEPENDENTMEASURE",3812528620:"IFCCOMPOUNDPLANEANGLEMEASURE",2991860651:"IFCCOMPLEXNUMBER",1867003952:"IFCBOXALIGNMENT",2735952531:"IFCBOOLEAN",2650437152:"IFCAREAMEASURE",632304761:"IFCANGULARVELOCITYMEASURE",360377573:"IFCAMOUNTOFSUBSTANCEMEASURE",4182062534:"IFCACCELERATIONMEASURE",3699917729:"IFCABSORBEDDOSEMEASURE",1971632696:"IFCGEOSLICE",2680139844:"IFCGEOMODEL",24726584:"IFCELECTRICFLOWTREATMENTDEVICE",3693000487:"IFCDISTRIBUTIONBOARD",3460952963:"IFCCONVEYORSEGMENT",3999819293:"IFCCAISSONFOUNDATION",3314249567:"IFCBOREHOLE",4196446775:"IFCBEARING",325726236:"IFCALIGNMENT",3425753595:"IFCTRACKELEMENT",991950508:"IFCSIGNAL",3798194928:"IFCREINFORCEDSOIL",3290496277:"IFCRAIL",1383356374:"IFCPAVEMENT",2182337498:"IFCNAVIGATIONELEMENT",234836483:"IFCMOORINGDEVICE",2078563270:"IFCMOBILETELECOMMUNICATIONSAPPLIANCE",1638804497:"IFCLIQUIDTERMINAL",1154579445:"IFCLINEARPOSITIONINGELEMENT",2696325953:"IFCKERB",2713699986:"IFCGEOTECHNICALASSEMBLY",2142170206:"IFCELECTRICFLOWTREATMENTDEVICETYPE",3376911765:"IFCEARTHWORKSFILL",1077100507:"IFCEARTHWORKSELEMENT",3071239417:"IFCEARTHWORKSCUT",479945903:"IFCDISTRIBUTIONBOARDTYPE",3426335179:"IFCDEEPFOUNDATION",1502416096:"IFCCOURSE",2940368186:"IFCCONVEYORSEGMENTTYPE",3203706013:"IFCCAISSONFOUNDATIONTYPE",3862327254:"IFCBUILTSYSTEM",1876633798:"IFCBUILTELEMENT",963979645:"IFCBRIDGEPART",644574406:"IFCBRIDGE",3649138523:"IFCBEARINGTYPE",1662888072:"IFCALIGNMENTVERTICAL",317615605:"IFCALIGNMENTSEGMENT",1545765605:"IFCALIGNMENTHORIZONTAL",4266260250:"IFCALIGNMENTCANT",3956297820:"IFCVIBRATIONDAMPERTYPE",1530820697:"IFCVIBRATIONDAMPER",840318589:"IFCVEHICLE",1953115116:"IFCTRANSPORTATIONDEVICE",618700268:"IFCTRACKELEMENTTYPE",2281632017:"IFCTENDONCONDUITTYPE",3663046924:"IFCTENDONCONDUIT",42703149:"IFCSINESPIRAL",1894708472:"IFCSIGNALTYPE",3599934289:"IFCSIGNTYPE",33720170:"IFCSIGN",1027922057:"IFCSEVENTHORDERPOLYNOMIALSPIRAL",544395925:"IFCSEGMENTEDREFERENCECURVE",3649235739:"IFCSECONDORDERPOLYNOMIALSPIRAL",550521510:"IFCROADPART",146592293:"IFCROAD",3818125796:"IFCRELADHERESTOELEMENT",4021432810:"IFCREFERENT",1891881377:"IFCRAILWAYPART",3992365140:"IFCRAILWAY",1763565496:"IFCRAILTYPE",1946335990:"IFCPOSITIONINGELEMENT",514975943:"IFCPAVEMENTTYPE",506776471:"IFCNAVIGATIONELEMENTTYPE",710110818:"IFCMOORINGDEVICETYPE",1950438474:"IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPE",976884017:"IFCMARINEPART",525669439:"IFCMARINEFACILITY",1770583370:"IFCLIQUIDTERMINALTYPE",2176059722:"IFCLINEARELEMENT",679976338:"IFCKERBTYPE",3948183225:"IFCIMPACTPROTECTIONDEVICETYPE",2568555532:"IFCIMPACTPROTECTIONDEVICE",2898700619:"IFCGRADIENTCURVE",1594536857:"IFCGEOTECHNICALSTRATUM",4230923436:"IFCGEOTECHNICALELEMENT",4228831410:"IFCFACILITYPARTCOMMON",1310830890:"IFCFACILITYPART",24185140:"IFCFACILITY",4234616927:"IFCDIRECTRIXDERIVEDREFERENCESWEPTAREASOLID",1306400036:"IFCDEEPFOUNDATIONTYPE",4189326743:"IFCCOURSETYPE",2000195564:"IFCCOSINESPIRAL",3497074424:"IFCCLOTHOID",1626504194:"IFCBUILTELEMENTTYPE",3651464721:"IFCVEHICLETYPE",1229763772:"IFCTRIANGULATEDIRREGULARNETWORK",3665877780:"IFCTRANSPORTATIONDEVICETYPE",782932809:"IFCTHIRDORDERPOLYNOMIALSPIRAL",2735484536:"IFCSPIRAL",1356537516:"IFCSECTIONEDSURFACE",1290935644:"IFCSECTIONEDSOLIDHORIZONTAL",1862484736:"IFCSECTIONEDSOLID",1441486842:"IFCRELPOSITIONS",1033248425:"IFCRELASSOCIATESPROFILEDEF",3381221214:"IFCPOLYNOMIALCURVE",2485787929:"IFCOFFSETCURVEBYDISTANCES",590820931:"IFCOFFSETCURVE",3465909080:"IFCINDEXEDPOLYGONALTEXTUREMAP",593015953:"IFCDIRECTRIXCURVESWEPTAREASOLID",4212018352:"IFCCURVESEGMENT",3425423356:"IFCAXIS2PLACEMENTLINEAR",823603102:"IFCSEGMENT",2165702409:"IFCPOINTBYDISTANCEEXPRESSION",182550632:"IFCOPENCROSSPROFILEDEF",388784114:"IFCLINEARPLACEMENT",536804194:"IFCALIGNMENTHORIZONTALSEGMENT",3752311538:"IFCALIGNMENTCANTSEGMENT",1010789467:"IFCTEXTURECOORDINATEINDICESWITHVOIDS",222769930:"IFCTEXTURECOORDINATEINDICES",2691318326:"IFCQUANTITYNUMBER",3633395639:"IFCALIGNMENTVERTICALSEGMENT",2879124712:"IFCALIGNMENTPARAMETERSEGMENT",25142252:"IFCCONTROLLER",3087945054:"IFCALARM",4288193352:"IFCACTUATOR",630975310:"IFCUNITARYCONTROLELEMENT",4086658281:"IFCSENSOR",2295281155:"IFCPROTECTIVEDEVICETRIPPINGUNIT",182646315:"IFCFLOWINSTRUMENT",1426591983:"IFCFIRESUPPRESSIONTERMINAL",819412036:"IFCFILTER",3415622556:"IFCFAN",1003880860:"IFCELECTRICTIMECONTROL",402227799:"IFCELECTRICMOTOR",264262732:"IFCELECTRICGENERATOR",3310460725:"IFCELECTRICFLOWSTORAGEDEVICE",862014818:"IFCELECTRICDISTRIBUTIONBOARD",1904799276:"IFCELECTRICAPPLIANCE",1360408905:"IFCDUCTSILENCER",3518393246:"IFCDUCTSEGMENT",342316401:"IFCDUCTFITTING",562808652:"IFCDISTRIBUTIONCIRCUIT",4074379575:"IFCDAMPER",3640358203:"IFCCOOLINGTOWER",4136498852:"IFCCOOLEDBEAM",2272882330:"IFCCONDENSER",3571504051:"IFCCOMPRESSOR",3221913625:"IFCCOMMUNICATIONSAPPLIANCE",639361253:"IFCCOIL",3902619387:"IFCCHILLER",4217484030:"IFCCABLESEGMENT",1051757585:"IFCCABLEFITTING",3758799889:"IFCCABLECARRIERSEGMENT",635142910:"IFCCABLECARRIERFITTING",2938176219:"IFCBURNER",32344328:"IFCBOILER",2906023776:"IFCBEAMSTANDARDCASE",277319702:"IFCAUDIOVISUALAPPLIANCE",2056796094:"IFCAIRTOAIRHEATRECOVERY",177149247:"IFCAIRTERMINALBOX",1634111441:"IFCAIRTERMINAL",486154966:"IFCWINDOWSTANDARDCASE",4237592921:"IFCWASTETERMINAL",4156078855:"IFCWALLELEMENTEDCASE",4207607924:"IFCVALVE",4292641817:"IFCUNITARYEQUIPMENT",3179687236:"IFCUNITARYCONTROLELEMENTTYPE",3026737570:"IFCTUBEBUNDLE",3825984169:"IFCTRANSFORMER",812556717:"IFCTANK",1162798199:"IFCSWITCHINGDEVICE",385403989:"IFCSTRUCTURALLOADCASE",1404847402:"IFCSTACKTERMINAL",1999602285:"IFCSPACEHEATER",3420628829:"IFCSOLARDEVICE",3027962421:"IFCSLABSTANDARDCASE",3127900445:"IFCSLABELEMENTEDCASE",1329646415:"IFCSHADINGDEVICE",3053780830:"IFCSANITARYTERMINAL",2572171363:"IFCREINFORCINGBARTYPE",1232101972:"IFCRATIONALBSPLINECURVEWITHKNOTS",90941305:"IFCPUMP",655969474:"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE",738039164:"IFCPROTECTIVEDEVICE",1156407060:"IFCPLATESTANDARDCASE",3612865200:"IFCPIPESEGMENT",310824031:"IFCPIPEFITTING",3694346114:"IFCOUTLET",144952367:"IFCOUTERBOUNDARYCURVE",2474470126:"IFCMOTORCONNECTION",1911478936:"IFCMEMBERSTANDARDCASE",1437502449:"IFCMEDICALDEVICE",629592764:"IFCLIGHTFIXTURE",76236018:"IFCLAMP",2176052936:"IFCJUNCTIONBOX",4175244083:"IFCINTERCEPTOR",2068733104:"IFCHUMIDIFIER",3319311131:"IFCHEATEXCHANGER",2188021234:"IFCFLOWMETER",1209101575:"IFCEXTERNALSPATIALELEMENT",484807127:"IFCEVAPORATOR",3747195512:"IFCEVAPORATIVECOOLER",2814081492:"IFCENGINE",2417008758:"IFCELECTRICDISTRIBUTIONBOARDTYPE",3242481149:"IFCDOORSTANDARDCASE",3205830791:"IFCDISTRIBUTIONSYSTEM",400855858:"IFCCOMMUNICATIONSAPPLIANCETYPE",905975707:"IFCCOLUMNSTANDARDCASE",1677625105:"IFCCIVILELEMENT",3296154744:"IFCCHIMNEY",2674252688:"IFCCABLEFITTINGTYPE",2188180465:"IFCBURNERTYPE",1177604601:"IFCBUILDINGSYSTEM",39481116:"IFCBUILDINGELEMENTPARTTYPE",1136057603:"IFCBOUNDARYCURVE",2461110595:"IFCBSPLINECURVEWITHKNOTS",1532957894:"IFCAUDIOVISUALAPPLIANCETYPE",4088093105:"IFCWORKCALENDAR",4009809668:"IFCWINDOWTYPE",926996030:"IFCVOIDINGFEATURE",2391383451:"IFCVIBRATIONISOLATOR",2415094496:"IFCTENDONTYPE",3081323446:"IFCTENDONANCHORTYPE",413509423:"IFCSYSTEMFURNITUREELEMENT",3101698114:"IFCSURFACEFEATURE",3657597509:"IFCSTRUCTURALSURFACEACTION",2757150158:"IFCSTRUCTURALCURVEREACTION",1004757350:"IFCSTRUCTURALCURVEACTION",338393293:"IFCSTAIRTYPE",1072016465:"IFCSOLARDEVICETYPE",4074543187:"IFCSHADINGDEVICETYPE",2157484638:"IFCSEAMCURVE",2781568857:"IFCROOFTYPE",2310774935:"IFCREINFORCINGMESHTYPE",964333572:"IFCREINFORCINGELEMENTTYPE",683857671:"IFCRATIONALBSPLINESURFACEWITHKNOTS",1469900589:"IFCRAMPTYPE",2839578677:"IFCPOLYGONALFACESET",1158309216:"IFCPILETYPE",3079942009:"IFCOPENINGSTANDARDCASE",1114901282:"IFCMEDICALDEVICETYPE",3113134337:"IFCINTERSECTIONCURVE",3946677679:"IFCINTERCEPTORTYPE",2571569899:"IFCINDEXEDPOLYCURVE",3493046030:"IFCGEOGRAPHICELEMENT",1509553395:"IFCFURNITURE",1893162501:"IFCFOOTINGTYPE",2853485674:"IFCEXTERNALSPATIALSTRUCTUREELEMENT",4148101412:"IFCEVENT",132023988:"IFCENGINETYPE",2397081782:"IFCELEMENTASSEMBLYTYPE",2323601079:"IFCDOORTYPE",1213902940:"IFCCYLINDRICALSURFACE",1525564444:"IFCCONSTRUCTIONPRODUCTRESOURCETYPE",4105962743:"IFCCONSTRUCTIONMATERIALRESOURCETYPE",2185764099:"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE",15328376:"IFCCOMPOSITECURVEONSURFACE",3875453745:"IFCCOMPLEXPROPERTYTEMPLATE",3893394355:"IFCCIVILELEMENTTYPE",2197970202:"IFCCHIMNEYTYPE",167062518:"IFCBSPLINESURFACEWITHKNOTS",2887950389:"IFCBSPLINESURFACE",2603310189:"IFCADVANCEDBREPWITHVOIDS",1635779807:"IFCADVANCEDBREP",2916149573:"IFCTRIANGULATEDFACESET",1935646853:"IFCTOROIDALSURFACE",2387106220:"IFCTESSELLATEDFACESET",3206491090:"IFCTASKTYPE",699246055:"IFCSURFACECURVE",4095615324:"IFCSUBCONTRACTRESOURCETYPE",603775116:"IFCSTRUCTURALSURFACEREACTION",4015995234:"IFCSPHERICALSURFACE",2481509218:"IFCSPATIALZONETYPE",463610769:"IFCSPATIALZONE",710998568:"IFCSPATIALELEMENTTYPE",1412071761:"IFCSPATIALELEMENT",3663146110:"IFCSIMPLEPROPERTYTEMPLATE",3243963512:"IFCREVOLVEDAREASOLIDTAPERED",816062949:"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT",1521410863:"IFCRELSPACEBOUNDARY2NDLEVEL",3523091289:"IFCRELSPACEBOUNDARY1STLEVEL",427948657:"IFCRELINTERFERESELEMENTS",307848117:"IFCRELDEFINESBYTEMPLATE",1462361463:"IFCRELDEFINESBYOBJECT",2565941209:"IFCRELDECLARES",1027710054:"IFCRELASSIGNSTOGROUPBYFACTOR",3521284610:"IFCPROPERTYTEMPLATE",492091185:"IFCPROPERTYSETTEMPLATE",653396225:"IFCPROJECTLIBRARY",569719735:"IFCPROCEDURETYPE",3967405729:"IFCPREDEFINEDPROPERTYSET",1682466193:"IFCPCURVE",428585644:"IFCLABORRESOURCETYPE",2294589976:"IFCINDEXEDPOLYGONALFACEWITHVOIDS",178912537:"IFCINDEXEDPOLYGONALFACE",4095422895:"IFCGEOGRAPHICELEMENTTYPE",2652556860:"IFCFIXEDREFERENCESWEPTAREASOLID",2804161546:"IFCEXTRUDEDAREASOLIDTAPERED",4024345920:"IFCEVENTTYPE",2629017746:"IFCCURVEBOUNDEDSURFACE",1815067380:"IFCCREWRESOURCETYPE",3419103109:"IFCCONTEXT",2574617495:"IFCCONSTRUCTIONRESOURCETYPE",2059837836:"IFCCARTESIANPOINTLIST3D",1675464909:"IFCCARTESIANPOINTLIST2D",574549367:"IFCCARTESIANPOINTLIST",3406155212:"IFCADVANCEDFACE",3698973494:"IFCTYPERESOURCE",3736923433:"IFCTYPEPROCESS",901063453:"IFCTESSELLATEDITEM",1096409881:"IFCSWEPTDISKSOLIDPOLYGONAL",1042787934:"IFCRESOURCETIME",1608871552:"IFCRESOURCECONSTRAINTRELATIONSHIP",2943643501:"IFCRESOURCEAPPROVALRELATIONSHIP",2090586900:"IFCQUANTITYSET",1482703590:"IFCPROPERTYTEMPLATEDEFINITION",3778827333:"IFCPREDEFINEDPROPERTIES",2998442950:"IFCMIRROREDPROFILEDEF",853536259:"IFCMATERIALRELATIONSHIP",3404854881:"IFCMATERIALPROFILESETUSAGETAPERING",3079605661:"IFCMATERIALPROFILESETUSAGE",2852063980:"IFCMATERIALCONSTITUENTSET",3708119e3:"IFCMATERIALCONSTITUENT",1585845231:"IFCLAGTIME",2133299955:"IFCINDEXEDTRIANGLETEXTUREMAP",1437953363:"IFCINDEXEDTEXTUREMAP",3570813810:"IFCINDEXEDCOLOURMAP",1437805879:"IFCEXTERNALREFERENCERELATIONSHIP",297599258:"IFCEXTENDEDPROPERTIES",211053100:"IFCEVENTTIME",2713554722:"IFCCONVERSIONBASEDUNITWITHOFFSET",3285139300:"IFCCOLOURRGBLIST",1236880293:"IFCWORKTIME",1199560280:"IFCTIMEPERIOD",3611470254:"IFCTEXTUREVERTEXLIST",2771591690:"IFCTASKTIMERECURRING",1549132990:"IFCTASKTIME",2043862942:"IFCTABLECOLUMN",2934153892:"IFCSURFACEREINFORCEMENTAREA",609421318:"IFCSTRUCTURALLOADORRESULT",3478079324:"IFCSTRUCTURALLOADCONFIGURATION",1054537805:"IFCSCHEDULINGTIME",2439245199:"IFCRESOURCELEVELRELATIONSHIP",2433181523:"IFCREFERENCE",3915482550:"IFCRECURRENCEPATTERN",986844984:"IFCPROPERTYABSTRACTION",3843373140:"IFCPROJECTEDCRS",677532197:"IFCPRESENTATIONITEM",1507914824:"IFCMATERIALUSAGEDEFINITION",552965576:"IFCMATERIALPROFILEWITHOFFSETS",164193824:"IFCMATERIALPROFILESET",2235152071:"IFCMATERIALPROFILE",1847252529:"IFCMATERIALLAYERWITHOFFSETS",760658860:"IFCMATERIALDEFINITION",3057273783:"IFCMAPCONVERSION",4294318154:"IFCEXTERNALINFORMATION",1466758467:"IFCCOORDINATEREFERENCESYSTEM",1785450214:"IFCCOORDINATEOPERATION",775493141:"IFCCONNECTIONVOLUMEGEOMETRY",979691226:"IFCREINFORCINGBAR",3700593921:"IFCELECTRICDISTRIBUTIONPOINT",1062813311:"IFCDISTRIBUTIONCONTROLELEMENT",1052013943:"IFCDISTRIBUTIONCHAMBERELEMENT",578613899:"IFCCONTROLLERTYPE",2454782716:"IFCCHAMFEREDGEFEATURE",753842376:"IFCBEAM",3001207471:"IFCALARMTYPE",2874132201:"IFCACTUATORTYPE",3304561284:"IFCWINDOW",3512223829:"IFCWALLSTANDARDCASE",2391406946:"IFCWALL",3313531582:"IFCVIBRATIONISOLATORTYPE",2347447852:"IFCTENDONANCHOR",3824725483:"IFCTENDON",2515109513:"IFCSTRUCTURALANALYSISMODEL",4252922144:"IFCSTAIRFLIGHT",331165859:"IFCSTAIR",1529196076:"IFCSLAB",1783015770:"IFCSENSORTYPE",1376911519:"IFCROUNDEDEDGEFEATURE",2016517767:"IFCROOF",2320036040:"IFCREINFORCINGMESH",3027567501:"IFCREINFORCINGELEMENT",3055160366:"IFCRATIONALBEZIERCURVE",3283111854:"IFCRAMPFLIGHT",3024970846:"IFCRAMP",2262370178:"IFCRAILING",3171933400:"IFCPLATE",1687234759:"IFCPILE",1073191201:"IFCMEMBER",900683007:"IFCFOOTING",3508470533:"IFCFLOWTREATMENTDEVICE",2223149337:"IFCFLOWTERMINAL",707683696:"IFCFLOWSTORAGEDEVICE",987401354:"IFCFLOWSEGMENT",3132237377:"IFCFLOWMOVINGDEVICE",4037862832:"IFCFLOWINSTRUMENTTYPE",4278956645:"IFCFLOWFITTING",2058353004:"IFCFLOWCONTROLLER",4222183408:"IFCFIRESUPPRESSIONTERMINALTYPE",1810631287:"IFCFILTERTYPE",346874300:"IFCFANTYPE",1658829314:"IFCENERGYCONVERSIONDEVICE",857184966:"IFCELECTRICALELEMENT",1634875225:"IFCELECTRICALCIRCUIT",712377611:"IFCELECTRICTIMECONTROLTYPE",1217240411:"IFCELECTRICMOTORTYPE",1365060375:"IFCELECTRICHEATERTYPE",1534661035:"IFCELECTRICGENERATORTYPE",3277789161:"IFCELECTRICFLOWSTORAGEDEVICETYPE",663422040:"IFCELECTRICAPPLIANCETYPE",855621170:"IFCEDGEFEATURE",2030761528:"IFCDUCTSILENCERTYPE",3760055223:"IFCDUCTSEGMENTTYPE",869906466:"IFCDUCTFITTINGTYPE",395920057:"IFCDOOR",3041715199:"IFCDISTRIBUTIONPORT",3040386961:"IFCDISTRIBUTIONFLOWELEMENT",1945004755:"IFCDISTRIBUTIONELEMENT",2063403501:"IFCDISTRIBUTIONCONTROLELEMENTTYPE",1599208980:"IFCDISTRIBUTIONCHAMBERELEMENTTYPE",2635815018:"IFCDISCRETEACCESSORYTYPE",1335981549:"IFCDISCRETEACCESSORY",4147604152:"IFCDIAMETERDIMENSION",3961806047:"IFCDAMPERTYPE",3495092785:"IFCCURTAINWALL",1973544240:"IFCCOVERING",2954562838:"IFCCOOLINGTOWERTYPE",335055490:"IFCCOOLEDBEAMTYPE",488727124:"IFCCONSTRUCTIONPRODUCTRESOURCE",1060000209:"IFCCONSTRUCTIONMATERIALRESOURCE",3898045240:"IFCCONSTRUCTIONEQUIPMENTRESOURCE",1163958913:"IFCCONDITIONCRITERION",2188551683:"IFCCONDITION",2816379211:"IFCCONDENSERTYPE",3850581409:"IFCCOMPRESSORTYPE",843113511:"IFCCOLUMN",2301859152:"IFCCOILTYPE",2611217952:"IFCCIRCLE",2951183804:"IFCCHILLERTYPE",1285652485:"IFCCABLESEGMENTTYPE",3293546465:"IFCCABLECARRIERSEGMENTTYPE",395041908:"IFCCABLECARRIERFITTINGTYPE",1909888760:"IFCBUILDINGELEMENTPROXYTYPE",1095909175:"IFCBUILDINGELEMENTPROXY",2979338954:"IFCBUILDINGELEMENTPART",52481810:"IFCBUILDINGELEMENTCOMPONENT",3299480353:"IFCBUILDINGELEMENT",231477066:"IFCBOILERTYPE",1916977116:"IFCBEZIERCURVE",819618141:"IFCBEAMTYPE",1967976161:"IFCBSPLINECURVE",3460190687:"IFCASSET",2470393545:"IFCANGULARDIMENSION",1871374353:"IFCAIRTOAIRHEATRECOVERYTYPE",3352864051:"IFCAIRTERMINALTYPE",1411407467:"IFCAIRTERMINALBOXTYPE",3821786052:"IFCACTIONREQUEST",1213861670:"IFC2DCOMPOSITECURVE",1033361043:"IFCZONE",3342526732:"IFCWORKSCHEDULE",4218914973:"IFCWORKPLAN",1028945134:"IFCWORKCONTROL",1133259667:"IFCWASTETERMINALTYPE",1898987631:"IFCWALLTYPE",2769231204:"IFCVIRTUALELEMENT",728799441:"IFCVALVETYPE",1911125066:"IFCUNITARYEQUIPMENTTYPE",1600972822:"IFCTUBEBUNDLETYPE",3593883385:"IFCTRIMMEDCURVE",1620046519:"IFCTRANSPORTELEMENT",1692211062:"IFCTRANSFORMERTYPE",1637806684:"IFCTIMESERIESSCHEDULE",5716631:"IFCTANKTYPE",2254336722:"IFCSYSTEM",2315554128:"IFCSWITCHINGDEVICETYPE",148013059:"IFCSUBCONTRACTRESOURCE",1975003073:"IFCSTRUCTURALSURFACECONNECTION",2986769608:"IFCSTRUCTURALRESULTGROUP",1235345126:"IFCSTRUCTURALPOINTREACTION",734778138:"IFCSTRUCTURALPOINTCONNECTION",2082059205:"IFCSTRUCTURALPOINTACTION",3987759626:"IFCSTRUCTURALPLANARACTIONVARYING",1621171031:"IFCSTRUCTURALPLANARACTION",1252848954:"IFCSTRUCTURALLOADGROUP",1721250024:"IFCSTRUCTURALLINEARACTIONVARYING",1807405624:"IFCSTRUCTURALLINEARACTION",2445595289:"IFCSTRUCTURALCURVEMEMBERVARYING",214636428:"IFCSTRUCTURALCURVEMEMBER",4243806635:"IFCSTRUCTURALCURVECONNECTION",1179482911:"IFCSTRUCTURALCONNECTION",682877961:"IFCSTRUCTURALACTION",1039846685:"IFCSTAIRFLIGHTTYPE",3112655638:"IFCSTACKTERMINALTYPE",3812236995:"IFCSPACETYPE",652456506:"IFCSPACEPROGRAM",1305183839:"IFCSPACEHEATERTYPE",3856911033:"IFCSPACE",2533589738:"IFCSLABTYPE",4097777520:"IFCSITE",4105383287:"IFCSERVICELIFE",3517283431:"IFCSCHEDULETIMECONTROL",1768891740:"IFCSANITARYTERMINALTYPE",2863920197:"IFCRELASSIGNSTASKS",160246688:"IFCRELAGGREGATES",2324767716:"IFCRAMPFLIGHTTYPE",2893384427:"IFCRAILINGTYPE",3248260540:"IFCRADIUSDIMENSION",2250791053:"IFCPUMPTYPE",1842657554:"IFCPROTECTIVEDEVICETYPE",3651124850:"IFCPROJECTIONELEMENT",3642467123:"IFCPROJECTORDERRECORD",2904328755:"IFCPROJECTORDER",2744685151:"IFCPROCEDURE",3740093272:"IFCPORT",3724593414:"IFCPOLYLINE",4017108033:"IFCPLATETYPE",4231323485:"IFCPIPESEGMENTTYPE",804291784:"IFCPIPEFITTINGTYPE",3327091369:"IFCPERMIT",2382730787:"IFCPERFORMANCEHISTORY",2837617999:"IFCOUTLETTYPE",3425660407:"IFCORDERACTION",3588315303:"IFCOPENINGELEMENT",4143007308:"IFCOCCUPANT",1916936684:"IFCMOVE",977012517:"IFCMOTORCONNECTIONTYPE",3181161470:"IFCMEMBERTYPE",2108223431:"IFCMECHANICALFASTENERTYPE",377706215:"IFCMECHANICALFASTENER",2506943328:"IFCLINEARDIMENSION",1161773419:"IFCLIGHTFIXTURETYPE",1051575348:"IFCLAMPTYPE",3827777499:"IFCLABORRESOURCE",4288270099:"IFCJUNCTIONBOXTYPE",2391368822:"IFCINVENTORY",1806887404:"IFCHUMIDIFIERTYPE",1251058090:"IFCHEATEXCHANGERTYPE",2706460486:"IFCGROUP",3009204131:"IFCGRID",200128114:"IFCGASTERMINALTYPE",814719939:"IFCFURNITURESTANDARD",263784265:"IFCFURNISHINGELEMENT",3009222698:"IFCFLOWTREATMENTDEVICETYPE",2297155007:"IFCFLOWTERMINALTYPE",1339347760:"IFCFLOWSTORAGEDEVICETYPE",1834744321:"IFCFLOWSEGMENTTYPE",1482959167:"IFCFLOWMOVINGDEVICETYPE",3815607619:"IFCFLOWMETERTYPE",3198132628:"IFCFLOWFITTINGTYPE",3907093117:"IFCFLOWCONTROLLERTYPE",1287392070:"IFCFEATUREELEMENTSUBTRACTION",2143335405:"IFCFEATUREELEMENTADDITION",2827207264:"IFCFEATUREELEMENT",2489546625:"IFCFASTENERTYPE",647756555:"IFCFASTENER",3737207727:"IFCFACETEDBREPWITHVOIDS",807026263:"IFCFACETEDBREP",3390157468:"IFCEVAPORATORTYPE",3174744832:"IFCEVAPORATIVECOOLERTYPE",3272907226:"IFCEQUIPMENTSTANDARD",1962604670:"IFCEQUIPMENTELEMENT",2107101300:"IFCENERGYCONVERSIONDEVICETYPE",1704287377:"IFCELLIPSE",2590856083:"IFCELEMENTCOMPONENTTYPE",1623761950:"IFCELEMENTCOMPONENT",4123344466:"IFCELEMENTASSEMBLY",1758889154:"IFCELEMENT",360485395:"IFCELECTRICALBASEPROPERTIES",3849074793:"IFCDISTRIBUTIONFLOWELEMENTTYPE",3256556792:"IFCDISTRIBUTIONELEMENTTYPE",681481545:"IFCDIMENSIONCURVEDIRECTEDCALLOUT",1457835157:"IFCCURTAINWALLTYPE",3295246426:"IFCCREWRESOURCE",1916426348:"IFCCOVERINGTYPE",1419761937:"IFCCOSTSCHEDULE",3895139033:"IFCCOSTITEM",3293443760:"IFCCONTROL",2559216714:"IFCCONSTRUCTIONRESOURCE",2510884976:"IFCCONIC",3732776249:"IFCCOMPOSITECURVE",300633059:"IFCCOLUMNTYPE",2937912522:"IFCCIRCLEHOLLOWPROFILEDEF",3124254112:"IFCBUILDINGSTOREY",1950629157:"IFCBUILDINGELEMENTTYPE",4031249490:"IFCBUILDING",1260505505:"IFCBOUNDEDCURVE",3649129432:"IFCBOOLEANCLIPPINGRESULT",1334484129:"IFCBLOCK",3207858831:"IFCASYMMETRICISHAPEPROFILEDEF",1674181508:"IFCANNOTATION",2296667514:"IFCACTOR",2097647324:"IFCTRANSPORTELEMENTTYPE",3473067441:"IFCTASK",1580310250:"IFCSYSTEMFURNITUREELEMENTTYPE",4124788165:"IFCSURFACEOFREVOLUTION",2809605785:"IFCSURFACEOFLINEAREXTRUSION",2028607225:"IFCSURFACECURVESWEPTAREASOLID",4070609034:"IFCSTRUCTUREDDIMENSIONCALLOUT",2218152070:"IFCSTRUCTURALSURFACEMEMBERVARYING",3979015343:"IFCSTRUCTURALSURFACEMEMBER",3689010777:"IFCSTRUCTURALREACTION",530289379:"IFCSTRUCTURALMEMBER",3136571912:"IFCSTRUCTURALITEM",3544373492:"IFCSTRUCTURALACTIVITY",451544542:"IFCSPHERE",3893378262:"IFCSPATIALSTRUCTUREELEMENTTYPE",2706606064:"IFCSPATIALSTRUCTUREELEMENT",3626867408:"IFCRIGHTCIRCULARCYLINDER",4158566097:"IFCRIGHTCIRCULARCONE",1856042241:"IFCREVOLVEDAREASOLID",2914609552:"IFCRESOURCE",1401173127:"IFCRELVOIDSELEMENT",3451746338:"IFCRELSPACEBOUNDARY",366585022:"IFCRELSERVICESBUILDINGS",4122056220:"IFCRELSEQUENCE",1058617721:"IFCRELSCHEDULESCOSTITEMS",1245217292:"IFCRELREFERENCEDINSPATIALSTRUCTURE",750771296:"IFCRELPROJECTSELEMENT",202636808:"IFCRELOVERRIDESPROPERTIES",2051452291:"IFCRELOCCUPIESSPACES",3268803585:"IFCRELNESTS",4189434867:"IFCRELINTERACTIONREQUIREMENTS",279856033:"IFCRELFLOWCONTROLELEMENTS",3940055652:"IFCRELFILLSELEMENT",781010003:"IFCRELDEFINESBYTYPE",4186316022:"IFCRELDEFINESBYPROPERTIES",693640335:"IFCRELDEFINES",2551354335:"IFCRELDECOMPOSES",2802773753:"IFCRELCOVERSSPACES",886880790:"IFCRELCOVERSBLDGELEMENTS",3242617779:"IFCRELCONTAINEDINSPATIALSTRUCTURE",3678494232:"IFCRELCONNECTSWITHREALIZINGELEMENTS",504942748:"IFCRELCONNECTSWITHECCENTRICITY",1638771189:"IFCRELCONNECTSSTRUCTURALMEMBER",3912681535:"IFCRELCONNECTSSTRUCTURALELEMENT",2127690289:"IFCRELCONNECTSSTRUCTURALACTIVITY",3190031847:"IFCRELCONNECTSPORTS",4201705270:"IFCRELCONNECTSPORTTOELEMENT",3945020480:"IFCRELCONNECTSPATHELEMENTS",1204542856:"IFCRELCONNECTSELEMENTS",826625072:"IFCRELCONNECTS",2851387026:"IFCRELASSOCIATESPROFILEPROPERTIES",2655215786:"IFCRELASSOCIATESMATERIAL",3840914261:"IFCRELASSOCIATESLIBRARY",982818633:"IFCRELASSOCIATESDOCUMENT",2728634034:"IFCRELASSOCIATESCONSTRAINT",919958153:"IFCRELASSOCIATESCLASSIFICATION",4095574036:"IFCRELASSOCIATESAPPROVAL",1327628568:"IFCRELASSOCIATESAPPLIEDVALUE",1865459582:"IFCRELASSOCIATES",205026976:"IFCRELASSIGNSTORESOURCE",3372526763:"IFCRELASSIGNSTOPROJECTORDER",2857406711:"IFCRELASSIGNSTOPRODUCT",4278684876:"IFCRELASSIGNSTOPROCESS",1307041759:"IFCRELASSIGNSTOGROUP",2495723537:"IFCRELASSIGNSTOCONTROL",1683148259:"IFCRELASSIGNSTOACTOR",3939117080:"IFCRELASSIGNS",3454111270:"IFCRECTANGULARTRIMMEDSURFACE",2798486643:"IFCRECTANGULARPYRAMID",2770003689:"IFCRECTANGLEHOLLOWPROFILEDEF",3219374653:"IFCPROXY",1451395588:"IFCPROPERTYSET",4194566429:"IFCPROJECTIONCURVE",103090709:"IFCPROJECT",4208778838:"IFCPRODUCT",2945172077:"IFCPROCESS",220341763:"IFCPLANE",603570806:"IFCPLANARBOX",3566463478:"IFCPERMEABLECOVERINGPROPERTIES",3505215534:"IFCOFFSETCURVE3D",3388369263:"IFCOFFSETCURVE2D",3888040117:"IFCOBJECT",1425443689:"IFCMANIFOLDSOLIDBREP",1281925730:"IFCLINE",572779678:"IFCLSHAPEPROFILEDEF",1484403080:"IFCISHAPEPROFILEDEF",987898635:"IFCGEOMETRICCURVESET",1268542332:"IFCFURNITURETYPE",4238390223:"IFCFURNISHINGELEMENTTYPE",3455213021:"IFCFLUIDFLOWPROPERTIES",315944413:"IFCFILLAREASTYLETILES",4203026998:"IFCFILLAREASTYLETILESYMBOLWITHSTYLE",374418227:"IFCFILLAREASTYLEHATCHING",2047409740:"IFCFACEBASEDSURFACEMODEL",477187591:"IFCEXTRUDEDAREASOLID",80994333:"IFCENERGYPROPERTIES",2835456948:"IFCELLIPSEPROFILEDEF",2777663545:"IFCELEMENTARYSURFACE",339256511:"IFCELEMENTTYPE",1883228015:"IFCELEMENTQUANTITY",1472233963:"IFCEDGELOOP",4006246654:"IFCDRAUGHTINGPREDEFINEDCURVEFONT",445594917:"IFCDRAUGHTINGPREDEFINEDCOLOUR",3073041342:"IFCDRAUGHTINGCALLOUT",526551008:"IFCDOORSTYLE",1714330368:"IFCDOORPANELPROPERTIES",2963535650:"IFCDOORLININGPROPERTIES",32440307:"IFCDIRECTION",4054601972:"IFCDIMENSIONCURVETERMINATOR",606661476:"IFCDIMENSIONCURVE",693772133:"IFCDEFINEDSYMBOL",2827736869:"IFCCURVEBOUNDEDPLANE",2601014836:"IFCCURVE",2147822146:"IFCCSGSOLID",2506170314:"IFCCSGPRIMITIVE3D",194851669:"IFCCRANERAILFSHAPEPROFILEDEF",4133800736:"IFCCRANERAILASHAPEPROFILEDEF",2485617015:"IFCCOMPOSITECURVESEGMENT",2205249479:"IFCCLOSEDSHELL",1383045692:"IFCCIRCLEPROFILEDEF",1416205885:"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM",3331915920:"IFCCARTESIANTRANSFORMATIONOPERATOR3D",3486308946:"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM",3749851601:"IFCCARTESIANTRANSFORMATIONOPERATOR2D",59481748:"IFCCARTESIANTRANSFORMATIONOPERATOR",1123145078:"IFCCARTESIANPOINT",2898889636:"IFCCSHAPEPROFILEDEF",2713105998:"IFCBOXEDHALFSPACE",2581212453:"IFCBOUNDINGBOX",4182860854:"IFCBOUNDEDSURFACE",2736907675:"IFCBOOLEANRESULT",2740243338:"IFCAXIS2PLACEMENT3D",3125803723:"IFCAXIS2PLACEMENT2D",4261334040:"IFCAXIS1PLACEMENT",1302238472:"IFCANNOTATIONSURFACE",2265737646:"IFCANNOTATIONFILLAREAOCCURRENCE",669184980:"IFCANNOTATIONFILLAREA",3288037868:"IFCANNOTATIONCURVEOCCURRENCE",2543172580:"IFCZSHAPEPROFILEDEF",1299126871:"IFCWINDOWSTYLE",512836454:"IFCWINDOWPANELPROPERTIES",336235671:"IFCWINDOWLININGPROPERTIES",2759199220:"IFCVERTEXLOOP",1417489154:"IFCVECTOR",427810014:"IFCUSHAPEPROFILEDEF",2347495698:"IFCTYPEPRODUCT",1628702193:"IFCTYPEOBJECT",1345879162:"IFCTWODIRECTIONREPEATFACTOR",2715220739:"IFCTRAPEZIUMPROFILEDEF",3124975700:"IFCTEXTLITERALWITHEXTENT",4282788508:"IFCTEXTLITERAL",3028897424:"IFCTERMINATORSYMBOL",3071757647:"IFCTSHAPEPROFILEDEF",230924584:"IFCSWEPTSURFACE",1260650574:"IFCSWEPTDISKSOLID",2247615214:"IFCSWEPTAREASOLID",1878645084:"IFCSURFACESTYLERENDERING",2513912981:"IFCSURFACE",2233826070:"IFCSUBEDGE",3653947884:"IFCSTRUCTURALSTEELPROFILEPROPERTIES",3843319758:"IFCSTRUCTURALPROFILEPROPERTIES",1190533807:"IFCSTRUCTURALLOADSINGLEFORCEWARPING",1597423693:"IFCSTRUCTURALLOADSINGLEFORCE",1973038258:"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION",2473145415:"IFCSTRUCTURALLOADSINGLEDISPLACEMENT",2668620305:"IFCSTRUCTURALLOADPLANARFORCE",1595516126:"IFCSTRUCTURALLOADLINEARFORCE",390701378:"IFCSPACETHERMALLOADPROPERTIES",1202362311:"IFCSOUNDVALUE",2485662743:"IFCSOUNDPROPERTIES",723233188:"IFCSOLIDMODEL",2609359061:"IFCSLIPPAGECONNECTIONCONDITION",4124623270:"IFCSHELLBASEDSURFACEMODEL",2411513650:"IFCSERVICELIFEFACTOR",1509187699:"IFCSECTIONEDSPINE",2778083089:"IFCROUNDEDRECTANGLEPROFILEDEF",478536968:"IFCRELATIONSHIP",3765753017:"IFCREINFORCEMENTDEFINITIONPROPERTIES",3413951693:"IFCREGULARTIMESERIES",3615266464:"IFCRECTANGLEPROFILEDEF",110355661:"IFCPROPERTYTABLEVALUE",3650150729:"IFCPROPERTYSINGLEVALUE",3357820518:"IFCPROPERTYSETDEFINITION",941946838:"IFCPROPERTYREFERENCEVALUE",2752243245:"IFCPROPERTYLISTVALUE",4166981789:"IFCPROPERTYENUMERATEDVALUE",1680319473:"IFCPROPERTYDEFINITION",871118103:"IFCPROPERTYBOUNDEDVALUE",673634403:"IFCPRODUCTDEFINITIONSHAPE",179317114:"IFCPREDEFINEDPOINTMARKERSYMBOL",433424934:"IFCPREDEFINEDDIMENSIONSYMBOL",2559016684:"IFCPREDEFINEDCURVEFONT",759155922:"IFCPREDEFINEDCOLOUR",2775532180:"IFCPOLYGONALBOUNDEDHALFSPACE",2924175390:"IFCPOLYLOOP",1423911732:"IFCPOINTONSURFACE",4022376103:"IFCPOINTONCURVE",2067069095:"IFCPOINT",1663979128:"IFCPLANAREXTENT",2004835150:"IFCPLACEMENT",597895409:"IFCPIXELTEXTURE",3021840470:"IFCPHYSICALCOMPLEXQUANTITY",2519244187:"IFCPATH",2529465313:"IFCPARAMETERIZEDPROFILEDEF",1029017970:"IFCORIENTEDEDGE",2665983363:"IFCOPENSHELL",2833995503:"IFCONEDIRECTIONREPEATFACTOR",219451334:"IFCOBJECTDEFINITION",1430189142:"IFCMECHANICALCONCRETEMATERIALPROPERTIES",2022407955:"IFCMATERIALDEFINITIONREPRESENTATION",2347385850:"IFCMAPPEDITEM",1008929658:"IFCLOOP",2624227202:"IFCLOCALPLACEMENT",3422422726:"IFCLIGHTSOURCESPOT",1520743889:"IFCLIGHTSOURCEPOSITIONAL",4266656042:"IFCLIGHTSOURCEGONIOMETRIC",2604431987:"IFCLIGHTSOURCEDIRECTIONAL",125510826:"IFCLIGHTSOURCEAMBIENT",1402838566:"IFCLIGHTSOURCE",3741457305:"IFCIRREGULARTIMESERIES",3905492369:"IFCIMAGETEXTURE",2445078500:"IFCHYGROSCOPICMATERIALPROPERTIES",812098782:"IFCHALFSPACESOLID",178086475:"IFCGRIDPLACEMENT",3590301190:"IFCGEOMETRICSET",4142052618:"IFCGEOMETRICREPRESENTATIONSUBCONTEXT",2453401579:"IFCGEOMETRICREPRESENTATIONITEM",3448662350:"IFCGEOMETRICREPRESENTATIONCONTEXT",1446786286:"IFCGENERALPROFILEPROPERTIES",803998398:"IFCGENERALMATERIALPROPERTIES",3857492461:"IFCFUELPROPERTIES",738692330:"IFCFILLAREASTYLE",4219587988:"IFCFAILURECONNECTIONCONDITION",3008276851:"IFCFACESURFACE",803316827:"IFCFACEOUTERBOUND",1809719519:"IFCFACEBOUND",2556980723:"IFCFACE",1860660968:"IFCEXTENDEDMATERIALPROPERTIES",476780140:"IFCEDGECURVE",3900360178:"IFCEDGE",4170525392:"IFCDRAUGHTINGPREDEFINEDTEXTFONT",3732053477:"IFCDOCUMENTREFERENCE",1694125774:"IFCDIMENSIONPAIR",2273265877:"IFCDIMENSIONCALLOUTRELATIONSHIP",3632507154:"IFCDERIVEDPROFILEDEF",3800577675:"IFCCURVESTYLE",2889183280:"IFCCONVERSIONBASEDUNIT",3050246964:"IFCCONTEXTDEPENDENTUNIT",45288368:"IFCCONNECTIONPOINTECCENTRICITY",1981873012:"IFCCONNECTIONCURVEGEOMETRY",370225590:"IFCCONNECTEDFACESET",1485152156:"IFCCOMPOSITEPROFILEDEF",2542286263:"IFCCOMPLEXPROPERTY",776857604:"IFCCOLOURRGB",647927063:"IFCCLASSIFICATIONREFERENCE",3150382593:"IFCCENTERLINEPROFILEDEF",616511568:"IFCBLOBTEXTURE",2705031697:"IFCARBITRARYPROFILEDEFWITHVOIDS",1310608509:"IFCARBITRARYOPENPROFILEDEF",3798115385:"IFCARBITRARYCLOSEDPROFILEDEF",2297822566:"IFCANNOTATIONTEXTOCCURRENCE",3612888222:"IFCANNOTATIONSYMBOLOCCURRENCE",962685235:"IFCANNOTATIONSURFACEOCCURRENCE",2442683028:"IFCANNOTATIONOCCURRENCE",1065908215:"IFCWATERPROPERTIES",891718957:"IFCVIRTUALGRIDINTERSECTION",1907098498:"IFCVERTEXPOINT",3304826586:"IFCVERTEXBASEDTEXTUREMAP",2799835756:"IFCVERTEX",180925521:"IFCUNITASSIGNMENT",1735638870:"IFCTOPOLOGYREPRESENTATION",1377556343:"IFCTOPOLOGICALREPRESENTATIONITEM",581633288:"IFCTIMESERIESVALUE",1718945513:"IFCTIMESERIESREFERENCERELATIONSHIP",3101149627:"IFCTIMESERIES",3317419933:"IFCTHERMALMATERIALPROPERTIES",1210645708:"IFCTEXTUREVERTEX",2552916305:"IFCTEXTUREMAP",1742049831:"IFCTEXTURECOORDINATEGENERATOR",280115917:"IFCTEXTURECOORDINATE",1484833681:"IFCTEXTSTYLEWITHBOXCHARACTERISTICS",1640371178:"IFCTEXTSTYLETEXTMODEL",2636378356:"IFCTEXTSTYLEFORDEFINEDFONT",1983826977:"IFCTEXTSTYLEFONTMODEL",1447204868:"IFCTEXTSTYLE",912023232:"IFCTELECOMADDRESS",531007025:"IFCTABLEROW",985171141:"IFCTABLE",1290481447:"IFCSYMBOLSTYLE",626085974:"IFCSURFACETEXTURE",1351298697:"IFCSURFACESTYLEWITHTEXTURES",846575682:"IFCSURFACESTYLESHADING",1607154358:"IFCSURFACESTYLEREFRACTION",3303107099:"IFCSURFACESTYLELIGHTING",1300840506:"IFCSURFACESTYLE",3049322572:"IFCSTYLEDREPRESENTATION",3958052878:"IFCSTYLEDITEM",2830218821:"IFCSTYLEMODEL",3408363356:"IFCSTRUCTURALLOADTEMPERATURE",2525727697:"IFCSTRUCTURALLOADSTATIC",2162789131:"IFCSTRUCTURALLOAD",2273995522:"IFCSTRUCTURALCONNECTIONCONDITION",3692461612:"IFCSIMPLEPROPERTY",4240577450:"IFCSHAPEREPRESENTATION",3982875396:"IFCSHAPEMODEL",867548509:"IFCSHAPEASPECT",4165799628:"IFCSECTIONREINFORCEMENTPROPERTIES",2042790032:"IFCSECTIONPROPERTIES",448429030:"IFCSIUNIT",2341007311:"IFCROOT",3679540991:"IFCRIBPLATEPROFILEPROPERTIES",1660063152:"IFCREPRESENTATIONMAP",3008791417:"IFCREPRESENTATIONITEM",3377609919:"IFCREPRESENTATIONCONTEXT",1076942058:"IFCREPRESENTATION",1222501353:"IFCRELAXATION",1580146022:"IFCREINFORCEMENTBARPROPERTIES",2692823254:"IFCREFERENCESVALUEDOCUMENT",825690147:"IFCQUANTITYWEIGHT",2405470396:"IFCQUANTITYVOLUME",3252649465:"IFCQUANTITYTIME",931644368:"IFCQUANTITYLENGTH",2093928680:"IFCQUANTITYCOUNT",2044713172:"IFCQUANTITYAREA",3710013099:"IFCPROPERTYENUMERATION",148025276:"IFCPROPERTYDEPENDENCYRELATIONSHIP",3896028662:"IFCPROPERTYCONSTRAINTRELATIONSHIP",2598011224:"IFCPROPERTY",2802850158:"IFCPROFILEPROPERTIES",3958567839:"IFCPROFILEDEF",2267347899:"IFCPRODUCTSOFCOMBUSTIONPROPERTIES",2095639259:"IFCPRODUCTREPRESENTATION",2417041796:"IFCPRESENTATIONSTYLEASSIGNMENT",3119450353:"IFCPRESENTATIONSTYLE",1304840413:"IFCPRESENTATIONLAYERWITHSTYLE",2022622350:"IFCPRESENTATIONLAYERASSIGNMENT",1775413392:"IFCPREDEFINEDTEXTFONT",3213052703:"IFCPREDEFINEDTERMINATORSYMBOL",990879717:"IFCPREDEFINEDSYMBOL",3727388367:"IFCPREDEFINEDITEM",3355820592:"IFCPOSTALADDRESS",2226359599:"IFCPHYSICALSIMPLEQUANTITY",2483315170:"IFCPHYSICALQUANTITY",101040310:"IFCPERSONANDORGANIZATION",2077209135:"IFCPERSON",1207048766:"IFCOWNERHISTORY",1411181986:"IFCORGANIZATIONRELATIONSHIP",4251960020:"IFCORGANIZATION",1227763645:"IFCOPTICALMATERIALPROPERTIES",2251480897:"IFCOBJECTIVE",3701648758:"IFCOBJECTPLACEMENT",1918398963:"IFCNAMEDUNIT",2706619895:"IFCMONETARYUNIT",3368373690:"IFCMETRIC",677618848:"IFCMECHANICALSTEELMATERIALPROPERTIES",4256014907:"IFCMECHANICALMATERIALPROPERTIES",2597039031:"IFCMEASUREWITHUNIT",3265635763:"IFCMATERIALPROPERTIES",2199411900:"IFCMATERIALLIST",1303795690:"IFCMATERIALLAYERSETUSAGE",3303938423:"IFCMATERIALLAYERSET",248100487:"IFCMATERIALLAYER",1847130766:"IFCMATERIALCLASSIFICATIONRELATIONSHIP",1838606355:"IFCMATERIAL",30780891:"IFCLOCALTIME",1566485204:"IFCLIGHTINTENSITYDISTRIBUTION",4162380809:"IFCLIGHTDISTRIBUTIONDATA",3452421091:"IFCLIBRARYREFERENCE",2655187982:"IFCLIBRARYINFORMATION",3020489413:"IFCIRREGULARTIMESERIESVALUE",852622518:"IFCGRIDAXIS",3548104201:"IFCEXTERNALLYDEFINEDTEXTFONT",3207319532:"IFCEXTERNALLYDEFINEDSYMBOL",1040185647:"IFCEXTERNALLYDEFINEDSURFACESTYLE",2242383968:"IFCEXTERNALLYDEFINEDHATCHSTYLE",3200245327:"IFCEXTERNALREFERENCE",1648886627:"IFCENVIRONMENTALIMPACTVALUE",3796139169:"IFCDRAUGHTINGCALLOUTRELATIONSHIP",770865208:"IFCDOCUMENTINFORMATIONRELATIONSHIP",1154170062:"IFCDOCUMENTINFORMATION",1376555844:"IFCDOCUMENTELECTRONICFORMAT",2949456006:"IFCDIMENSIONALEXPONENTS",1045800335:"IFCDERIVEDUNITELEMENT",1765591967:"IFCDERIVEDUNIT",1072939445:"IFCDATEANDTIME",3510044353:"IFCCURVESTYLEFONTPATTERN",2367409068:"IFCCURVESTYLEFONTANDSCALING",1105321065:"IFCCURVESTYLEFONT",539742890:"IFCCURRENCYRELATIONSHIP",602808272:"IFCCOSTVALUE",1065062679:"IFCCOORDINATEDUNIVERSALTIMEOFFSET",347226245:"IFCCONSTRAINTRELATIONSHIP",613356794:"IFCCONSTRAINTCLASSIFICATIONRELATIONSHIP",1658513725:"IFCCONSTRAINTAGGREGATIONRELATIONSHIP",1959218052:"IFCCONSTRAINT",2732653382:"IFCCONNECTIONSURFACEGEOMETRY",4257277454:"IFCCONNECTIONPORTGEOMETRY",2614616156:"IFCCONNECTIONPOINTGEOMETRY",2859738748:"IFCCONNECTIONGEOMETRY",3264961684:"IFCCOLOURSPECIFICATION",3639012971:"IFCCLASSIFICATIONNOTATIONFACET",938368621:"IFCCLASSIFICATIONNOTATION",1098599126:"IFCCLASSIFICATIONITEMRELATIONSHIP",1767535486:"IFCCLASSIFICATIONITEM",747523909:"IFCCLASSIFICATION",622194075:"IFCCALENDARDATE",2069777674:"IFCBOUNDARYNODECONDITIONWARPING",1387855156:"IFCBOUNDARYNODECONDITION",3367102660:"IFCBOUNDARYFACECONDITION",1560379544:"IFCBOUNDARYEDGECONDITION",4037036970:"IFCBOUNDARYCONDITION",3869604511:"IFCAPPROVALRELATIONSHIP",390851274:"IFCAPPROVALPROPERTYRELATIONSHIP",2080292479:"IFCAPPROVALACTORRELATIONSHIP",130549933:"IFCAPPROVAL",1110488051:"IFCAPPLIEDVALUERELATIONSHIP",411424972:"IFCAPPLIEDVALUE",639542469:"IFCAPPLICATION",618182010:"IFCADDRESS",3630933823:"IFCACTORROLE",599546466:"FILE_DESCRIPTION",1390159747:"FILE_NAME",1109904537:"FILE_SCHEMA"};class qt{static async getUnits(t){var e,s,i;const{IFCUNITASSIGNMENT:n}=wt,o=await t.getAllPropertiesOfType(n);if(!o)return 1;const r=Object.keys(o),a=o[parseInt(r[0],10)];for(const h of a.Units){if(h.value===void 0||h.value===null)continue;const d=await t.getProperties(h.value);if(!d||!d.UnitType||!d.UnitType.value||d.UnitType.value!=="LENGTHUNIT")continue;let E=1,l=1;return d.Name.value==="METRE"&&(l=1),d.Name.value==="FOOT"&&(l=.3048),((e=d.Prefix)==null?void 0:e.value)==="MILLI"?E=.001:((s=d.Prefix)==null?void 0:s.value)==="CENTI"?E=.01:((i=d.Prefix)==null?void 0:i.value)==="DECI"&&(E=.1),l*E}return 1}static async findItemByGuid(t,e){var s;const i=t.getAllPropertiesIDs();for(const n of i){const o=await t.getProperties(n);if(o&&((s=o.GlobalId)==null?void 0:s.value)===e)return o}return null}static async getRelationMap(t,e,s){var i;const n=s??(async()=>{}),o={},r=t.getAllPropertiesIDs();for(const a of r){const h=await t.getProperties(a);if(!h)continue;const d=h.type===e,E=Object.keys(h).find(m=>m.startsWith("Relating")),l=Object.keys(h).find(m=>m.startsWith("Related"));if(!(d&&E&&l))continue;const u=await t.getProperties((i=h[E])==null?void 0:i.value),C=h[l];if(!u||!C||!(C&&Array.isArray(C)))continue;const T=C.map(m=>m.value);await n(u.expressID,T),o[u.expressID]=T}return o}static async getQsetQuantities(t,e,s){const i=s??(()=>{}),n=await t.getProperties(e);return!n||n.type!==Uo?null:(n.Quantities??[{}]).map(o=>(o.value&&i(o.value),o.value)).filter(o=>o!==null)}static async getPsetProps(t,e,s){const i=s??(()=>{}),n=await t.getProperties(e);return!n||n.type!==Js?null:(n.HasProperties??[{}]).map(o=>(o.value&&i(o.value),o.value)).filter(o=>o!==null)}static async getPsetRel(t,e){var s;if(!await t.getProperties(e))return null;const i=await t.getAllPropertiesOfType(mi);if(!i)return null;const n=Object.values(i);let o=null;for(const r of n)((s=r.RelatingPropertyDefinition)==null?void 0:s.value)===e&&(o=r.expressID);return o}static async getQsetRel(t,e){return qt.getPsetRel(t,e)}static async getEntityName(t,e){var s;const i=await t.getProperties(e);if(!i)return{key:null,name:null};const n=Object.keys(i).find(r=>r.endsWith("Name"))??null,o=n?(s=i[n])==null?void 0:s.value:null;return{key:n,name:o}}static async getQuantityValue(t,e){const s=await t.getProperties(e);if(!s)return{key:null,value:null};const i=Object.keys(s).find(o=>o.endsWith("Value"))??null;let n;return i===null||s[i]===void 0||s[i]===null?n=null:n=s[i].value,{key:i,value:n}}static isRel(t){return ao[t].startsWith("IFCREL")}static async attributeExists(t,e,s){const i=await t.getProperties(e);return i?Object.keys(i).includes(s):!1}static async groupEntitiesByType(t,e){var s;const i=new Map;for(const n of e){const o=await t.getProperties(n);if(!o)continue;const r=o.type;i.get(r)||i.set(r,new Set),(s=i.get(r))==null||s.add(n)}return i}}class Ja{constructor(){I(this,"factor",1),I(this,"complement",1)}apply(t){const e=this.getScaleMatrix().multiply(t);t.copy(e)}setUp(t){var e,s,i;this.factor=1;const n=this.getLengthUnits(t);if(!n)return;const o=n==null,r=n.Name===void 0||n.Name===null;o||r||(n.Name.value==="FOOT"&&(this.factor=.3048),((e=n.Prefix)==null?void 0:e.value)==="MILLI"?this.complement=.001:((s=n.Prefix)==null?void 0:s.value)==="CENTI"?this.complement=.01:((i=n.Prefix)==null?void 0:i.value)==="DECI"&&(this.complement=.01))}getLengthUnits(t){try{const e=t.GetLineIDsWithType(0,qo).get(0),s=t.GetLine(0,e);for(const i of s.Units){if(!i||i.value===null||i.value===void 0)continue;const n=t.GetLine(0,i.value);if(n.UnitType&&n.UnitType.value==="LENGTHUNIT")return n}return null}catch{return console.log("Could not get units"),null}}getScaleMatrix(){const t=this.factor;return new H().fromArray([t,0,0,0,0,t,0,0,0,0,t,0,0,0,0,1])}}class ho{constructor(){I(this,"itemsByFloor",{}),I(this,"_units",new Ja)}setUp(t){this._units.setUp(t),this.cleanUp();try{const e=t.GetLineIDsWithType(0,Ri),s=new Set,i=t.GetLineIDsWithType(0,Kt);for(let h=0;h<i.size();h++)s.add(i.get(h));const n=t.GetLineIDsWithType(0,fi),o=n.size();for(let h=0;h<o;h++){const d=n.get(h),E=t.GetLine(0,d);if(!E||!E.RelatingObject||!E.RelatedObjects)continue;const l=E.RelatingObject.value,u=E.RelatedObjects;for(const C of u){const T=C.value;s.has(T)&&(this.itemsByFloor[T]=l)}}const r={},a=e.size();for(let h=0;h<a;h++){const d=e.get(h),E=t.GetLine(0,d);if(!E||!E.RelatingStructure||!E.RelatedElements)continue;const l=E.RelatingStructure.value,u=E.RelatedElements;if(s.has(l))for(const C of u){r[l]||(r[l]=[]);const T=C.value;r[l].push(T)}else for(const C of u){const T=C.value;this.itemsByFloor[T]=l}}for(const h in r){const d=this.itemsByFloor[h];if(d!==void 0){const E=r[h];for(const l of E)this.itemsByFloor[l]=d}}for(let h=0;h<o;h++){const d=n.get(h),E=t.GetLine(0,d);if(!E||!E.RelatingObject||!E.RelatedObjects)continue;const l=E.RelatingObject.value,u=E.RelatedObjects;for(const C of u){const T=C.value,m=this.itemsByFloor[l];m!==void 0&&(this.itemsByFloor[T]=m)}}}catch{console.log("Could not get floors.")}}cleanUp(){this.itemsByFloor={}}}class Ui{constructor(){I(this,"includeProperties",!0),I(this,"optionalCategories",[Kt]),I(this,"coordinate",!0),I(this,"wasm",{path:"",absolute:!1,logLevel:Go.LOG_LEVEL_OFF}),I(this,"excludedCategories",new Set),I(this,"saveLocations",!1),I(this,"webIfc",{COORDINATE_TO_ORIGIN:!0}),I(this,"autoSetWasm",!0),I(this,"customLocateFileHandler",null)}}class co{constructor(){I(this,"defLineMat",new Dn({color:16777215}))}read(t){const e=t.GetAllAlignments(0),s=t.GetAllCrossSections2D(0),i=t.GetAllCrossSections3D(0),n={IfcAlignment:e,IfcCrossSection2D:s,IfcCrossSection3D:i};return this.get(n)}get(t){if(t.IfcAlignment){const e=new Map;for(const s of t.IfcAlignment){const i=new Vo;i.absolute=this.getCurves(s.curve3D,i),i.horizontal=this.getCurves(s.horizontal,i),i.vertical=this.getCurves(s.vertical,i),e.set(e.size,i)}return{alignments:e,coordinationMatrix:new H}}}getCurves(t,e){const s=[];let i=0;for(const n of t){const o={};if(n.data)for(const l of n.data){const[u,C]=l.split(": "),T=parseFloat(C);o[u]=T||C}const{points:r}=n,a=new Float32Array(r.length*3);for(let l=0;l<r.length;l++){const{x:u,y:C,z:T}=r[l];a[l*3]=u,a[l*3+1]=C,a[l*3+2]=T||0}const h=new Ge(a,3),d=new Ho;d.setAttribute("position",h);const E=new Wo(i,o,e,d,this.defLineMat);s.push(E.curve),i++}return s}}class lo{getNameInfo(t){var e;const s={},{arguments:i}=t.GetHeaderLine(0,Xo)||{};if(!i)return s;const[n,o,r,a,h,d,E]=i;if(n!=null&&n.value&&(s.name=n.value),o!=null&&o.value&&(s.creationDate=new Date(o.value)),r){s.author={};const[l,u]=r;l!=null&&l.value&&(s.author.name=l.value),u!=null&&u.value&&(s.author.email=u.value)}return(e=a[0])!=null&&e.value&&(s.organization=a[0].value),h!=null&&h.value&&(s.preprocessorVersion=h==null?void 0:h.value),d!=null&&d.value&&(s.originatingSystem=d==null?void 0:d.value),E!=null&&E.value&&(s.authorization=E==null?void 0:E.value),s}getDescriptionInfo(t){var e;const s={},{arguments:i}=t.GetHeaderLine(0,ko)||{};if(!i)return s;const[n,o]=i;if((e=n[0])!=null&&e.value){const r=n[0].value.match(/\[([^\]]+)\]/);r&&r[1]&&(s.viewDefinition=r[1])}return o!=null&&o.value&&(s.implementationLevel=o.value),s}}class Eo{static get(t,e){const s=[Fi,Ai,gi,Oi,Kt,Ko,$o,Jo,tr],i=t.data;for(const n of s){const o=e.GetLineIDsWithType(0,n),r=o.size();for(let a=0;a<r;a++){const h=o.get(a);i.has(h)||i.set(h,[[],[0,n]])}}}}const uo=class Ii extends J{constructor(t){super(t),I(this,"onDisposed",new M),I(this,"onIfcStartedLoading",new M),I(this,"onSetup",new M),I(this,"settings",new Ui),I(this,"webIfc",new Ce),I(this,"enabled",!0),I(this,"_material",new bi),I(this,"_spatialTree",new ho),I(this,"_metaData",new lo),I(this,"_fragmentInstances",new Map),I(this,"_civil",new co),I(this,"_visitedFragments",new Map),I(this,"_materialT",new bi({transparent:!0,opacity:.5})),this.components.add(Ii.uuid,this),this.settings.excludedCategories.add(Mn)}dispose(){this.webIfc.Dispose(),this.webIfc=null,this.onDisposed.trigger(Ii.uuid),this.onDisposed.reset()}async setup(t){this.settings={...this.settings,...t},this.settings.autoSetWasm&&await this.autoSetWasm(),this.onSetup.trigger()}async load(t,e=!0){const s=performance.now();this.onIfcStartedLoading.trigger(),await this.readIfcFile(t);const i=await this.getAllGeometries(),n=await this.components.get($a).export(this.webIfc,0);i.setLocalProperties(n);const o=this.components.get(Et);o.groups.set(i.uuid,i);for(const r of i.items)o.list.set(r.id,r),r.mesh.uuid=r.id,r.group=i;o.onFragmentsLoaded.trigger(i),e&&o.coordinate([i]);for(const[r]of i.data){const a=n[r];if(!a||!a.GlobalId)continue;const h=a.GlobalId.value||a.GlobalId;i.globalToExpressIDs.set(h,r)}return Eo.get(i,this.webIfc),this.cleanUp(),console.log(`Streaming the IFC took ${performance.now()-s} ms!`),i}async readIfcFile(t){const{path:e,absolute:s,logLevel:i}=this.settings.wasm;return this.webIfc.SetWasmPath(e,s),await this.webIfc.Init(),i&&this.webIfc.SetLogLevel(i),this.webIfc.OpenModel(t,this.settings.webIfc)}cleanUp(){this.webIfc.Dispose(),this.webIfc=null,this.webIfc=new Ce,this._visitedFragments.clear(),this._fragmentInstances.clear()}async getAllGeometries(){this._spatialTree.setUp(this.webIfc);const t=this.webIfc.GetIfcEntityList(0),e=new Un;e.ifcMetadata={name:"",description:"",...this._metaData.getNameInfo(this.webIfc),...this._metaData.getDescriptionInfo(this.webIfc),schema:this.webIfc.GetModelSchema(0)||"IFC2X3",maxExpressID:this.webIfc.GetMaxExpressID(0)};const s=[];for(const n of t){if(!this.webIfc.IsIfcElement(n)&&n!==Kt||this.settings.excludedCategories.has(n))continue;const o=this.webIfc.GetLineIDsWithType(0,n),r=o.size();for(let a=0;a<r;a++){const h=o.get(a);s.push(h);const d=this._spatialTree.itemsByFloor[h]||0;e.data.set(h,[[],[d,n]])}}this._spatialTree.cleanUp(),this.webIfc.StreamMeshes(0,s,n=>{this.getMesh(n,e)});for(const n of this._visitedFragments){const{index:o,fragment:r}=n[1];e.keyFragments.set(o,r.id)}for(const n of e.items){const o=this._fragmentInstances.get(n.id);if(!o)throw new Error("Fragment not found!");const r=[];for(const[a,h]of o)r.push(h);n.add(r)}const i=this.webIfc.GetCoordinationMatrix(0);return e.coordinationMatrix.fromArray(i),e.civilData=this._civil.read(this.webIfc),e}getMesh(t,e){const s=t.geometries.size(),i=t.expressID;for(let n=0;n<s;n++){const o=t.geometries.get(n),{x:r,y:a,z:h,w:d}=o.color,E=d!==1,{geometryExpressID:l}=o,u=`${l}-${E}`;if(!this._visitedFragments.has(u)){const p=this.getGeometry(this.webIfc,l),F=E?this._materialT:this._material,g=new vo(p,F,1);e.add(g.mesh),e.items.push(g);const _=this._visitedFragments.size;this._visitedFragments.set(u,{index:_,fragment:g})}const C=new Qt().setRGB(r,a,h,"srgb"),T=new H;T.fromArray(o.flatTransformation);const m=this._visitedFragments.get(u);if(m===void 0)throw new Error("Error getting geometry data for streaming!");const f=e.data.get(i);if(!f)throw new Error("Data not found!");f[0].push(m.index);const{fragment:R}=m;this._fragmentInstances.has(R.id)||this._fragmentInstances.set(R.id,new Map);const A=this._fragmentInstances.get(R.id);if(!A)throw new Error("Instances not found!");if(A.has(i)){const p=A.get(i);if(!p)throw new Error("Instance not found!");p.transforms.push(T),p.colors&&p.colors.push(C)}else A.set(i,{id:i,transforms:[T],colors:[C]})}}getGeometry(t,e){const s=t.GetGeometry(0,e),i=t.GetIndexArray(s.GetIndexData(),s.GetIndexDataSize()),n=t.GetVertexArray(s.GetVertexData(),s.GetVertexDataSize()),o=new Float32Array(n.length/2),r=new Float32Array(n.length/2);for(let E=0;E<n.length;E+=6)o[E/2]=n[E],o[E/2+1]=n[E+1],o[E/2+2]=n[E+2],r[E/2]=n[E+3],r[E/2+1]=n[E+4],r[E/2+2]=n[E+5];const a=new ze,h=new Ge(o,3),d=new Ge(r,3);return a.setAttribute("position",h),a.setAttribute("normal",d),a.setIndex(Array.from(i)),s.delete(),a}async autoSetWasm(){const t=await fetch(`https://unpkg.com/@thatopen/components@${Aa.release}/package.json`);if(!t.ok){console.warn("Couldn't get openbim-components package.json. Set wasm settings manually.");return}const e=await t.json();if(!("web-ifc"in e.peerDependencies))console.warn("Couldn't get web-ifc from peer dependencies in openbim-components. Set wasm settings manually.");else{const s=e.peerDependencies["web-ifc"];this.settings.wasm.path=`https://unpkg.com/web-ifc@${s}/`,this.settings.wasm.absolute=!0}}};I(uo,"uuid","a659add7-1418-4771-a0d6-7d4d438e4624");let th=uo;const eh=class ue extends J{constructor(t){super(t),I(this,"onDisposed",new M),I(this,"onRequestFile",new M),I(this,"ifcToExport",null),I(this,"onElementToPset",new M),I(this,"onPropToPset",new M),I(this,"onPsetRemoved",new M),I(this,"onDataChanged",new M),I(this,"wasm",{path:"/",absolute:!1}),I(this,"enabled",!0),I(this,"attributeListeners",{}),I(this,"selectedModel"),I(this,"changeMap",{}),this.components.add(ue.uuid,this)}dispose(){this.selectedModel=void 0,this.attributeListeners={},this.changeMap={},this.onElementToPset.reset(),this.onPropToPset.reset(),this.onPsetRemoved.reset(),this.onDataChanged.reset(),this.onDisposed.trigger(ue.uuid),this.onDisposed.reset()}static getIFCSchema(t){const e=t.ifcMetadata.schema;if(!e)throw new Error("IFC Schema not found");return e.startsWith("IFC2X3")?"IFC2X3":e.startsWith("IFC4")&&e.replace("IFC4","")===""?"IFC4":e.startsWith("IFC4X3")?"IFC4X3":e}async setData(t,...e){for(const s of e){const i=s.expressID;i&&(await t.setProperties(i,s),this.registerChange(t,i))}}async newPset(t,e,s){const i=ue.getIFCSchema(t),{ownerHistoryHandle:n}=await this.getOwnerHistory(t),o=this.newGUID(t),r=new wt[i].IfcLabel(e),a=s?new wt[i].IfcText(s):null,h=new wt[i].IfcPropertySet(o,n,r,a,[]);h.expressID=this.increaseMaxID(t);const d=this.newGUID(t),E=new wt[i].IfcRelDefinesByProperties(d,n,null,null,[],new ke(h.expressID));return E.expressID=this.increaseMaxID(t),await this.setData(t,h,E),{pset:h,rel:E}}async removePset(t,...e){for(const s of e){const i=await t.getProperties(s);if((i==null?void 0:i.type)!==Js)continue;const n=await qt.getPsetRel(t,s);if(n&&(await t.setProperties(n,null),this.registerChange(t,n)),i){for(const o of i.HasProperties)await t.setProperties(o.value,null);await t.setProperties(s,null),this.onPsetRemoved.trigger({model:t,psetID:s}),this.registerChange(t,s)}}}newSingleStringProperty(t,e,s,i){return this.newSingleProperty(t,e,s,i)}newSingleNumericProperty(t,e,s,i){return this.newSingleProperty(t,e,s,i)}newSingleBooleanProperty(t,e,s,i){return this.newSingleProperty(t,e,s,i)}async removePsetProp(t,e,s){const i=await t.getProperties(e),n=await t.getProperties(s);!i||!n||i.type===Js&&n&&(i.HasProperties=i.HasProperties.filter(o=>o.value!==s),await t.setProperties(s,null),this.registerChange(t,e,s))}async addElementToPset(t,e,...s){const i=await qt.getPsetRel(t,e);if(!i)return;const n=await t.getProperties(i);if(!n)return;for(const r of s){const a=new ke(r);n.RelatedObjects.push(a),this.onElementToPset.trigger({model:t,psetID:e,elementID:r})}this.registerChange(t,e);const o=this.components.get(Ns);for(const r of s)o.addEntityRelations(t,r,"IsDefinedBy",e)}async addPropToPset(t,e,...s){const i=await t.getProperties(e);if(i){for(const n of s){if(i.HasProperties.includes(n))continue;const o=new ke(n);i.HasProperties.push(o),this.onPropToPset.trigger({model:t,psetID:e,propID:n})}this.registerChange(t,e)}}async saveToIfc(t,e){const s=this.components.get(th),i=s.webIfc,n=await s.readIfcFile(e),o=this.changeMap[t.uuid]??[];for(const a of o){const h=await t.getProperties(a);if(h)try{i.WriteLine(n,h)}catch{}else try{i.DeleteLine(n,a)}catch{}}const r=i.SaveModel(n);return s.webIfc.CloseModel(n),s.cleanUp(),r}async setAttributeListener(t,e,s){this.attributeListeners[t.uuid]||(this.attributeListeners[t.uuid]={});const i=this.attributeListeners[t.uuid][e]?this.attributeListeners[t.uuid][e][s]:null;if(i)return i;const n=await t.getProperties(e);if(!n)throw new Error(`Entity with expressID ${e} doesn't exists.`);const o=n[s];if(Array.isArray(o)||!o)throw new Error(`Attribute ${s} is array or null, and it can't have a listener.`);const r=o.value;if(r===void 0||r==null)throw new Error(`Attribute ${s} has a badly defined handle.`);const a=new M;return Object.defineProperty(n[s],"value",{get(){return this._value},async set(h){this._value=h,a.trigger(h)}}),n[s].value=r,this.attributeListeners[t.uuid][e]||(this.attributeListeners[t.uuid][e]={}),this.attributeListeners[t.uuid][e][s]=a,a}increaseMaxID(t){return t.ifcMetadata.maxExpressID++,t.ifcMetadata.maxExpressID}newGUID(t){const e=ue.getIFCSchema(t);return new wt[e].IfcGloballyUniqueId(Pi.create())}async getOwnerHistory(t){const e=await t.getAllPropertiesOfType(bo);if(!e)throw new Error("No OwnerHistory was found.");const s=Object.keys(e).map(o=>parseInt(o,10)),i=e[s[0]],n=new ke(i.expressID);return{ownerHistory:i,ownerHistoryHandle:n}}registerChange(t,...e){this.changeMap[t.uuid]||(this.changeMap[t.uuid]=new Set);for(const s of e)this.changeMap[t.uuid].add(s),this.onDataChanged.trigger({model:t,expressID:s})}async newSingleProperty(t,e,s,i){const n=ue.getIFCSchema(t),o=new wt[n].IfcIdentifier(s),r=new wt[n][e](i),a=new wt[n].IfcPropertySingleValue(o,null,r,null);return a.expressID=this.increaseMaxID(t),await this.setData(t,a),a}};I(eh,"uuid","58c2d9f0-183c-48d6-a402-dfcf5b9a34df");const Io=class po extends J{constructor(t){super(t),I(this,"enabled",!0),I(this,"list",{}),I(this,"onDisposed",new M),I(this,"onFragmentsDisposed",e=>{const{groupID:s,fragmentIDs:i}=e;for(const n in this.list){const o=this.list[n],r=Object.keys(o);if(r.includes(s))delete o[s],Object.values(o).length===0&&delete this.list[n];else for(const a of r){const h=o[a];for(const d of i)delete h.map[d];Object.values(h).length===0&&delete o[a]}}}),t.add(po.uuid,this),t.get(Et).onFragmentsDisposed.add(this.onFragmentsDisposed)}dispose(){this.list={},this.components.get(Et).onFragmentsDisposed.remove(this.onFragmentsDisposed),this.onDisposed.trigger(),this.onDisposed.reset()}remove(t){for(const e in this.list){const s=this.list[e];for(const i in s){const n=s[i];delete n.map[t]}}}find(t){const e=this.components.get(Et);if(!t){const o={};for(const[r,a]of e.list)o[r]=new Set(a.ids);return o}const s=Object.keys(t).length,i={};for(const o in t){const r=t[o];if(!this.list[o]){console.warn(`Classification ${o} does not exist.`);continue}for(const a of r){const h=this.list[o][a];if(h)for(const d in h.map){i[d]||(i[d]=new Map);for(const E of h.map[d]){const l=i[d].get(E);l===void 0?i[d].set(E,1):i[d].set(E,l+1)}}}}const n={};for(const o in i){const r=i[o];for(const[a,h]of r){if(h===void 0)throw new Error("Malformed fragments map!");h===s&&(n[o]||(n[o]=new Set),n[o].add(a))}}return n}byModel(t,e){this.list.models||(this.list.models={});const s=this.list.models;s[t]||(s[t]={map:{},id:null,name:t});const i=s[t];for(const[n,o]of e.data){const r=o[0];for(const a of r){const h=e.keyFragments.get(a);h&&(i.map[h]||(i.map[h]=new Set),i.map[h].add(n))}}}async byPredefinedType(t){var e;this.list.predefinedTypes||(this.list.predefinedTypes={});const s=this.list.predefinedTypes,i=t.getAllPropertiesIDs();for(const n of i){const o=await t.getProperties(n);if(!o)continue;const r=String((e=o.PredefinedType)==null?void 0:e.value).toUpperCase();s[r]||(s[r]={map:{},id:null,name:r});const a=s[r];for(const[h,d]of t.data){const E=d[0];for(const l of E){const u=t.keyFragments.get(l);if(!u)throw new Error("Fragment ID not found!");a.map[u]||(a.map[u]=new Set),a.map[u].add(o.expressID)}}}}byEntity(t){this.list.entities||(this.list.entities={});for(const[e,s]of t.data){const i=s[1][1],n=ao[i];this.saveItem(t,"entities",n,e)}}async byIfcRel(t,e,s){qt.isRel(e)&&await qt.getRelationMap(t,e,async(i,n)=>{const{name:o}=await qt.getEntityName(t,i);for(const r of n)this.saveItem(t,s,o??"NO REL NAME",r)})}async bySpatialStructure(t,e={}){var s,i;const n=this.components.get(Ns),o=n.relationMaps[t.uuid];if(!o)throw new Error(`Classifier: model relations of ${t.name||t.uuid} have to exists to group by spatial structure.`);const r="spatialStructures",a=e.useProperties===void 0||e.useProperties;for(const[h]of o){if(e.isolate){const u=t.data.get(h);if(!u)continue;const C=u[1][1];if(C===void 0||!e.isolate.has(C))continue}const d=n.getEntityRelations(t,h,"Decomposes");if(d)for(const u of d){let C=u.toString();if(a){const T=await t.getProperties(u);if(!T)continue;C=(s=T.Name)==null?void 0:s.value}this.saveItem(t,r,C,h,u)}const E=n.getEntityRelations(t,h,"ContainsElements");if(!E)continue;let l=h.toString();if(a){const u=await t.getProperties(h);if(!u)continue;l=(i=u.Name)==null?void 0:i.value}for(const u of E){this.saveItem(t,r,l,u,h);const C=n.getEntityRelations(t,Number(u),"IsDecomposedBy");if(C)for(const T of C)this.saveItem(t,r,l,T,h)}}}setColor(t,e,s=!1){const i=this.components.get(Et);for(const n in t){const o=i.list.get(n);if(!o)continue;const r=t[n];o.setColor(e,r,s)}}resetColor(t){const e=this.components.get(Et);for(const s in t){const i=e.list.get(s);if(!i)continue;const n=t[s];i.resetColor(n)}}saveItem(t,e,s,i,n=null){this.list[e]||(this.list[e]={});const o=t.data.get(i);if(o)for(const r of o[0]){const a=t.keyFragments.get(r);if(a){const h=this.list[e];h[s]||(h[s]={map:{},id:n,name:s}),h[s].map[a]||(h[s].map[a]=new Set),h[s].map[a].add(i)}}}};I(Io,"uuid","e25a7f3c-46c4-4a14-9d3d-5115f24ebeb7");let sh=Io;const Co=class To extends J{constructor(t){super(t),I(this,"onDisposed",new M),I(this,"enabled",!0),I(this,"height",10),I(this,"groupName","spatialStructures"),I(this,"list",new Set),t.add(To.uuid,this)}dispose(){this.list.clear(),this.onDisposed.trigger(),this.onDisposed.reset()}set(t){if(!this.enabled)return;const e=this.components.get(sh),s=this.components.get(Et),i=t?1:-1;let n=0;const o=e.list[this.groupName],r=new H;for(const a in o){r.elements[13]=n*i*this.height;for(const h in o[a].map){const d=s.list.get(h),E=a+h,l=this.list.has(E);if(!d||t&&l||!t&&!l)continue;t?this.list.add(E):this.list.delete(E);const u=o[a].map[h];d.applyTransform(u,r),d.mesh.computeBoundingSphere(),d.mesh.computeBoundingBox()}n++}}};I(Co,"uuid","d260618b-ce88-4c7d-826c-6debb91de3e2");let Ih=Co;const mo=class fo extends J{constructor(t){super(t),I(this,"enabled",!0),this.components.add(fo.uuid,this)}set(t,e){const s=this.components.get(Et);if(!e){for(const[i,n]of s.list)n&&(n.setVisibility(t),this.updateCulledVisibility(n));return}for(const i in e){const n=e[i],o=s.list.get(i);o&&(o.setVisibility(t,n),this.updateCulledVisibility(o))}}isolate(t){this.set(!1),this.set(!0,t)}updateCulledVisibility(t){const e=this.components.get(Xa);for(const[s,i]of e.list){const n=i.colorMeshes.get(t.id);n&&(n.count=t.mesh.count)}}};I(mo,"uuid","dd9ccf2d-8a21-4821-b7f6-2949add16a29");let ph=mo;class ih extends Ui{constructor(){super(...arguments),I(this,"minGeometrySize",10),I(this,"minAssetsSize",1e3)}}const Ro=class Fo extends J{constructor(t){super(t),I(this,"onGeometryStreamed",new M),I(this,"onAssetStreamed",new M),I(this,"onProgress",new M),I(this,"onIfcLoaded",new M),I(this,"onDisposed",new M),I(this,"settings",new ih),I(this,"enabled",!0),I(this,"webIfc",new Ce),I(this,"_spatialTree",new ho),I(this,"_metaData",new lo),I(this,"_visitedGeometries",new Map),I(this,"_streamSerializer",new Bo),I(this,"_geometries",new Map),I(this,"_geometryCount",0),I(this,"_civil",new co),I(this,"_groupSerializer",new Pn),I(this,"_assets",[]),I(this,"_meshesWithHoles",new Set),this.components.add(Fo.uuid,this),this.settings.excludedCategories.add(Mn)}dispose(){this.onIfcLoaded.reset(),this.onGeometryStreamed.reset(),this.onAssetStreamed.reset(),this.webIfc.Dispose(),this.webIfc=null,this.onDisposed.trigger(),this.onDisposed.reset()}async streamFromBuffer(t){await this.readIfcFile(t),await this.streamAllGeometries(),this.cleanUp()}async streamFromCallBack(t){await this.streamIfcFile(t),await this.streamAllGeometries(),this.cleanUp()}async readIfcFile(t){const{path:e,absolute:s,logLevel:i}=this.settings.wasm;this.webIfc.SetWasmPath(e,s),await this.webIfc.Init(),i&&this.webIfc.SetLogLevel(i),this.webIfc.OpenModel(t,this.settings.webIfc)}async streamIfcFile(t){const{path:e,absolute:s,logLevel:i}=this.settings.wasm;this.webIfc.SetWasmPath(e,s),await this.webIfc.Init(),i&&this.webIfc.SetLogLevel(i),this.webIfc.OpenModelFromCallback(t,this.settings.webIfc)}async streamAllGeometries(){const{minGeometrySize:t,minAssetsSize:e}=this.settings;this._spatialTree.setUp(this.webIfc);const s=this.webIfc.GetIfcEntityList(0),i=[[]],n=new Un;n.ifcMetadata={name:"",description:"",...this._metaData.getNameInfo(this.webIfc),...this._metaData.getDescriptionInfo(this.webIfc),schema:this.webIfc.GetModelSchema(0)||"IFC2X3",maxExpressID:this.webIfc.GetMaxExpressID(0)};let o=0,r=0;for(const C of s){if(!this.webIfc.IsIfcElement(C)&&C!==Kt||this.settings.excludedCategories.has(C))continue;const T=this.webIfc.GetLineIDsWithType(0,C),m=T.size();for(let f=0;f<m;f++){o>t&&(o=0,r++,i.push([]));const R=T.get(f);i[r].push(R);const A=this.webIfc.GetLine(0,R);if(A.GlobalId){const F=(A==null?void 0:A.GlobalId.value)||(A==null?void 0:A.GlobalId);n.globalToExpressIDs.set(F,R)}const p=this._spatialTree.itemsByFloor[R]||0;n.data.set(R,[[],[p,C]]),o++}}this._spatialTree.cleanUp();let a=.01,h=0;for(const C of i){h++,this.webIfc.StreamMeshes(0,C,m=>{this.getMesh(this.webIfc,m,n)}),this._geometryCount>t&&await this.streamGeometries(),this._assets.length>e&&await this.streamAssets();const T=h/i.length;T>a&&(a+=.01,a=Math.max(a,T),this.onProgress.trigger(Math.round(a*100)/100))}this._geometryCount&&await this.streamGeometries(),this._assets.length&&await this.streamAssets();const{opaque:d,transparent:E}=n.geometryIDs;for(const[C,{index:T,uuid:m}]of this._visitedGeometries)n.keyFragments.set(T,m),(C>1?d:E).set(C,T);Eo.get(n,this.webIfc);const l=this.webIfc.GetCoordinationMatrix(0);n.coordinationMatrix.fromArray(l),n.civilData=this._civil.read(this.webIfc);const u=this._groupSerializer.export(n);this.onIfcLoaded.trigger(u),n.dispose(!0)}cleanUp(){this.webIfc.Dispose(),this.webIfc=null,this.webIfc=new Ce,this._visitedGeometries.clear(),this._geometries.clear(),this._assets=[],this._meshesWithHoles.clear()}getMesh(t,e,s){const i=e.geometries.size(),n=e.expressID,o={id:n,geometries:[]};for(let r=0;r<i;r++){const a=e.geometries.get(r),h=a.geometryExpressID,d=a.color.w===1?1:-1,E=h*d;if(!this._visitedGeometries.has(E)){this._visitedGeometries.has(h)||this.getGeometry(t,h);const p=this._visitedGeometries.size,F=_n.generateUUID();this._visitedGeometries.set(E,{uuid:F,index:p})}const l=this._visitedGeometries.get(E);if(l===void 0)throw new Error("Error getting geometry data for streaming!");const u=s.data.get(n);if(!u)throw new Error("Data not found!");u[0].push(l.index);const{x:C,y:T,z:m,w:f}=a.color,R=[C,T,m,f],A=a.flatTransformation;o.geometries.push({color:R,geometryID:h,transformation:A})}this._assets.push(o)}getGeometry(t,e){const s=t.GetGeometry(0,e),i=t.GetIndexArray(s.GetIndexData(),s.GetIndexDataSize()),n=t.GetVertexArray(s.GetVertexData(),s.GetVertexDataSize()),o=new Float32Array(n.length/2),r=new Float32Array(n.length/2);for(let l=0;l<n.length;l+=6)o[l/2]=n[l],o[l/2+1]=n[l+1],o[l/2+2]=n[l+2],r[l/2]=n[l+3],r[l/2+1]=n[l+4],r[l/2+2]=n[l+5];const a=Ra(o),h=new Float32Array(a.transformation.elements),d=[a.center.x,a.center.y,a.center.z];let E=!1;for(let l=0;l<o.length-2;l+=3){const u=o[l],C=o[l+1],T=o[l+2],m=r[l],f=r[l+1],R=r[l+2];if(Fa(d,[u,C,T],[m,f,R])){E=!0;break}}this._geometries.set(e,{position:o,normal:r,index:i,boundingBox:h,hasHoles:E}),s.delete(),this._geometryCount++}async streamAssets(){await this.onAssetStreamed.trigger(this._assets),this._assets=null,this._assets=[]}async streamGeometries(){let t=this._streamSerializer.export(this._geometries),e={};for(const[s,{boundingBox:i,hasHoles:n}]of this._geometries)e[s]={boundingBox:i,hasHoles:n};this.onGeometryStreamed.trigger({data:e,buffer:t}),e=null,t=null,this._geometries.clear(),this._geometryCount=0}};I(Ro,"uuid","d9999a00-e1f5-4d3f-8cfe-c56e08609764");let Ch=Ro;class nh extends Ui{constructor(){super(...arguments),I(this,"propertiesSize",100)}}class oh extends J{constructor(){super(...arguments),I(this,"onPropertiesStreamed",new ms),I(this,"onProgress",new ms),I(this,"onIndicesStreamed",new ms),I(this,"onDisposed",new M),I(this,"enabled",!0),I(this,"settings",new nh),I(this,"webIfc",new Ce)}async dispose(){this.onIndicesStreamed.reset(),this.onPropertiesStreamed.reset(),this.webIfc.Dispose(),this.webIfc=null,this.onDisposed.reset()}async streamFromBuffer(t){await this.readIfcFile(t),await this.streamAllProperties(),this.cleanUp()}async streamFromCallBack(t){await this.streamIfcFile(t),await this.streamAllProperties(),this.cleanUp()}async readIfcFile(t){const{path:e,absolute:s,logLevel:i}=this.settings.wasm;this.webIfc.SetWasmPath(e,s),await this.webIfc.Init(),i&&this.webIfc.SetLogLevel(i),this.webIfc.OpenModel(t,this.settings.webIfc)}async streamIfcFile(t){const{path:e,absolute:s,logLevel:i}=this.settings.wasm;this.webIfc.SetWasmPath(e,s),await this.webIfc.Init(),i&&this.webIfc.SetLogLevel(i),this.webIfc.OpenModelFromCallback(t,this.settings.webIfc)}async streamAllProperties(){const{propertiesSize:t}=this.settings,e=new Set(this.webIfc.GetIfcEntityList(0)),s=new Set([Fi,Ai,gi,Oi,Kt]);for(const r of s)e.add(r);let i=.01,n=0;for(const r of e){if(n++,no.has(r))continue;const a=s.has(r),h=this.webIfc.GetLineIDsWithType(0,r),d=h.size();let E=0;for(let l=0;l<d-t;l+=t){const u={};for(let C=0;C<t;C++){E++;const T=h.get(l+C);try{const m=this.webIfc.GetLine(0,T,a);u[m.expressID]=m}catch{console.log(`Could not get property: ${T}`)}}await this.onPropertiesStreamed.trigger({type:r,data:u})}if(E!==d){const l={};for(let u=E;u<d;u++){const C=h.get(u);try{const T=this.webIfc.GetLine(0,C,a);l[T.expressID]=T}catch{console.log(`Could not get property: ${C}`)}}await this.onPropertiesStreamed.trigger({type:r,data:l})}n/e.size>i&&(i=Math.round(i*100)/100,await this.onProgress.trigger(i),i+=.01)}await this.onProgress.trigger(1);const o=await this.components.get(Ns).processFromWebIfc(this.webIfc,0);await this.onIndicesStreamed.trigger(o)}cleanUp(){this.webIfc.Dispose(),this.webIfc=null,this.webIfc=new Ce}}I(oh,"uuid","88d2c89c-ce32-47d7-8cb6-d51e4b311a0b");const Ao=class go extends J{constructor(t){super(t),I(this,"enabled",!0),t.add(go.uuid,this)}static distanceFromPointToLine(t,e,s,i=!1){const n=new Ft,o=new O;return n.set(e,s),n.closestPointToPoint(t,i,o),o.distanceTo(t)}getFace(t,e,s){if(!t.geometry.index)throw new Error("Geometry must be indexed!");const i=new Map,n=t.geometry.index.array,{plane:o}=this.getFaceData(e,s,t),r=[];for(let E=0;E<n.length/3;E++){const{plane:l,edges:u}=this.getFaceData(E,s,t);if(l.equals(o)){r.push({index:E,edges:u});for(const{id:C,points:T,distance:m}of u)i.set(C,{points:T,distance:m})}}let a=0;const h=new Map,d=new Map;for(const{index:E,edges:l}of r){const u=new Map;for(const{id:p}of l)if(h.has(p)){const F=h.get(p);u.set(p,F)}const C=l.map(p=>p.id);if(!u.size){const p=a++;for(const{id:F}of l)h.set(F,p);d.set(p,{edges:new Set(C),indices:new Set([E])});continue}let T=null;const m=new Set,f=new Set(C);for(const[p,F]of u){T===null?T=F:F!==T&&m.add(F),h.delete(p);const{edges:g}=d.get(F);g.delete(p),f.delete(p)}if(T===null)throw new Error("Error computing face!");const R=d.get(T),{indices:A}=R;A.add(E);for(const p of f){h.set(p,T);const{edges:F}=R;F.add(p)}for(const p of m){const F=d.get(p),{edges:g,indices:_}=F,S=d.get(T),{edges:w,indices:y}=S;for(const L of g)w.add(L),h.set(L,T);for(const L of _)y.add(L);d.delete(p)}}for(const[E,{indices:l,edges:u}]of d)if(l.has(e)){const C=[];for(const T of u){const m=i.get(T);C.push(m)}return{edges:C,indices:l}}return null}getVerticesAndNormal(t,e,s){if(!t.geometry.index)throw new Error("Geometry must be indexed!");const i=t.geometry.index.array,n=t.geometry.attributes.position.array,o=t.geometry.attributes.normal.array,r=i[e*3]*3,a=i[e*3+1]*3,h=i[e*3+2]*3,d=new O(n[r],n[r+1],n[r+2]),E=new O(n[a],n[a+1],n[a+2]),l=new O(n[h],n[h+1],n[h+2]),u=new O(o[r],o[r+1],o[r+2]),C=new O(o[a],o[a+1],o[a+2]),T=new O(o[h],o[h+1],o[h+2]),m=(u.x+C.x+T.x)/3,f=(u.y+C.y+T.y)/3,R=(u.z+C.z+T.z)/3,A=new O(m,f,R);if(s!==void 0&&t instanceof jt){const p=new H;t.getMatrixAt(s,p);const F=new H;F.extractRotation(p),A.applyMatrix4(F),d.applyMatrix4(p),E.applyMatrix4(p),l.applyMatrix4(p)}return{p1:d,p2:E,p3:l,faceNormal:A}}round(t){t.x=Math.trunc(t.x*1e3)/1e3,t.y=Math.trunc(t.y*1e3)/1e3,t.z=Math.trunc(t.z*1e3)/1e3}getVolumeFromFragments(t){const e=this.components.get(Et),s=new H,i=[];for(const o in t){const r=e.list.get(o);if(!r)continue;const a=t[o];let h=0;for(const l of a){const u=r.getInstancesIDs(l);u&&(h+=u.size)}const d=new jt(r.mesh.geometry,void 0,h);let E=0;for(const l of a){const u=r.getInstancesIDs(l);if(u)for(const C of u)r.mesh.getMatrixAt(C,s),d.setMatrixAt(E++,s)}i.push(d)}const n=this.getVolumeFromMeshes(i);for(const o of i)o.geometry=null,o.material=[],o.dispose();return n}getVolumeFromMeshes(t){let e=0;for(const s of t)e+=this.getVolumeOfMesh(s);return e}getFaceData(t,e,s){const i=this.getVerticesAndNormal(s,t,e),{p1:n,p2:o,p3:r,faceNormal:a}=i;this.round(n),this.round(o),this.round(r),this.round(a);const h=[{id:`${n.x}|${n.y}|${n.z}`,value:n},{id:`${o.x}|${o.y}|${o.z}`,value:o},{id:`${r.x}|${r.y}|${r.z}`,value:r}];h.sort((R,A)=>R.id<A.id?-1:R.id>A.id?1:0);const[{id:d,value:E},{id:l,value:u},{id:C,value:T}]=h,m=[{id:`${d}|${l}`,distance:E.distanceTo(u),points:[E,u]},{id:`${l}|${C}`,distance:u.distanceTo(T),points:[u,T]},{id:`${d}|${C}`,distance:E.distanceTo(T),points:[E,T]}],f=new fe;return f.setFromNormalAndCoplanarPoint(a,n),f.constant=Math.round(f.constant*10)/10,{plane:f,edges:m}}getVolumeOfMesh(t){let e=0;const s=new O,i=new O,n=new O,{index:o}=t.geometry,r=t.geometry.attributes.position.array;if(!o)return console.warn("Geometry must be indexed to compute its volume!"),0;const a=[];if(t instanceof jt)for(let d=0;d<t.count;d++){const E=new H;t.getMatrixAt(d,E),a.push(E)}else a.push(new H().identity());const{matrixWorld:h}=t;for(let d=0;d<o.array.length-2;d+=3)for(const E of a){const l=E.multiply(h),u=o.array[d]*3,C=o.array[d+1]*3,T=o.array[d+2]*3;s.set(r[u],r[u+1],r[u+2]).applyMatrix4(l),i.set(r[C],r[C+1],r[C+2]).applyMatrix4(l),n.set(r[T],r[T+1],r[T+2]).applyMatrix4(l),e+=this.getSignedVolumeOfTriangle(s,i,n)}return Math.abs(e)}getSignedVolumeOfTriangle(t,e,s){const i=s.x*e.y*t.z,n=e.x*s.y*t.z,o=s.x*t.y*e.z,r=t.x*s.y*e.z,a=e.x*t.y*s.z,h=t.x*e.y*s.z;return 1/6*(-i+n+o-r-a+h)}};I(Ao,"uuid","267ca032-672f-4cb0-afa9-d24e904f39d6");let Th=Ao;export{oh as $,sh as A,ao as B,La as C,uh as F,cn as H,qt as K,Th as N,Ih as O,lh as R,ph as S,Xa as T,Ve as W,Ch as _,Ns as a,th as b,dh as c,ch as d,_a as g,Et as h,ah as i,$a as m,hh as n,Eh as o,Aa as p};
